[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T17-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T17-4/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T17-4/tp/graph/badge.svg?token\u003dLPV8FKMOGM)](https://codecov.io/gh/AY2324S2-CS2103T-T17-4/tp)","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"# FnBuddy","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"FnBuddy is an innovative employee contact management application designed specifically for restaurant managers. ","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"It offers a user-friendly interface (both CLI and GUI) that allows you to effortlessly create, manage, ","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"and maintain contact records for all your part-time employees. With FnBuddy, you can store essential information such as ","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"contact details, banking information, and work schedules, ensuring efficient communication and accurate payroll ","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"calculations.","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"  * As a restaurant manager, I can store the contact and banking details of my part-time employees for easy referral when I want to contact them or transfer their salary.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"  * As a restaurant manager, I can remove the details of my part-time employees so that I can free up space in my address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"  * As a restaurant manager, I can view the contacts of all my part-time employees so that I can have an overview of all contacts in my address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"  * As a restaurant manager, I can use the application to store the accumulated work hours of my part-time employee for later use of salary calculation.","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"For the detailed documentation of this project, see the **[FnBuddy Product Website](https://ay2324s2-cs2103t-t17-4.github.io/tp/)**.","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"1rbg":16,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"    jvmArgs +\u003d \"-ea\"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"huekoh":1,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"### Chua Joon Peng, Gabriel","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"\u003cimg src\u003d\"images/1rbg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"[[homepage](https://www.linkedin.com/in/gabriel-chua-087543229/)]","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"[[github](https://github.com/1rbg)]","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"[[portfolio](team/gabrielchua.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"* Responsibilities: Documentation + UI","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"### Teo Hao Wei","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"\u003cimg src\u003d\"images/h4ow3i.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"[[github](http://github.com/h4ow3i)]","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"[[portfolio](team/teohaowei.md)]","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"* Role: Developer","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"### Hue Koh","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"huekoh"},"content":"\u003cimg src\u003d\"images/huekoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"[[github](http://github.com/huekoh)] ","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"huekoh"},"content":"[[portfolio](team/huekoh.md)]","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"huekoh"},"content":"* Responsibilities: Task Scheduling + UI","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"huekoh"},"content":"### Martin Ng Jinn Kai","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"\u003cimg src\u003d\"images/martinng01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"huekoh"},"content":"[[github](http://github.com/martinng01)]","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"huekoh"},"content":"[[portfolio](team/martinng.md)]","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"huekoh"},"content":"* Responsibilities: Testing","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"### Jin Xunze","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"\u003cimg src\u003d\"images/jxunze.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"[[github](http://github.com/jxunze)]","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"jxunze"},"content":"[[portfolio](team/jinxunze.md)]","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"jxunze"},"content":"* Responsibilities: Integration","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"1rbg":6,"jxunze":8,"h4ow3i":5,"huekoh":9,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"  original source as well}","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"and edit diagrams.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"**`Main`** (consisting of","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"huekoh"},"content":"the command `delete 98765432`.","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"The **API** of this component is specified","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"visible GUI.","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"is specified","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"**API","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"huekoh"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking ","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"huekoh"},"content":"`execute(\"delete 98765432\")` API call as an example.","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"huekoh"},"content":"![Interactions Inside the Logic Component for the `delete 98765432` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"   several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"martinng01"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"  a `Command` object.","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"martinng01"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"martinng01"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"martinng01"},"content":"**API","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"martinng01"},"content":"** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"martinng01"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"martinng01"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"martinng01"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"martinng01"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"martinng01"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"1rbg"},"content":"* stores a `Schedule` object that represents the employees\u0027 work schedule.","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"martinng01"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"martinng01"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"martinng01"},"content":"**API","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"martinng01"},"content":"** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"martinng01"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"martinng01"},"content":"  objects.","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"1rbg"},"content":"* inherits from all of `AddressBookStorage`, `UserPrefStorage` and `ScheduleStorage`, which means it can be treated as ","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"1rbg"},"content":"  either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"martinng01"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"martinng01"},"content":"  that belong to the `Model`)","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"martinng01"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"martinng01"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"martinng01"},"content":"following operations:","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"martinng01"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"martinng01"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"martinng01"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"martinng01"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"martinng01"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"martinng01"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"martinng01"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"martinng01"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"martinng01"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"martinng01"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"martinng01"},"content":"state.","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"martinng01"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"martinng01"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"martinng01"},"content":"the `addressBookStateList`.","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"martinng01"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"martinng01"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"martinng01"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":262,"author":{"gitId":"martinng01"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"martinng01"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"martinng01"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"martinng01"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"martinng01"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-03-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"martinng01"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"martinng01"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"martinng01"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"martinng01"},"content":"desktop applications follow.","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"huekoh"},"content":"* has a need to manage a significant number of employee contacts and banking details","lastModifiedDate":"2024-03-10"},{"lineNumber":325,"author":{"gitId":"huekoh"},"content":"* has a need to track employee worked hours","lastModifiedDate":"2024-03-10"},{"lineNumber":326,"author":{"gitId":"huekoh"},"content":"* has a need to tabulate payroll for employees with different pay rates","lastModifiedDate":"2024-03-10"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"huekoh"},"content":"**Value proposition**: manage employee salary disbursement faster than a typical exel sheet with manual calculations.","lastModifiedDate":"2024-03-10"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                        | I want to …​                                       | So that I can…​                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"huekoh"},"content":"|----------|----------------------------------------------------------------|----------------------------------------------------|-----------------------------------------------------------------------|","lastModifiedDate":"2024-03-10"},{"lineNumber":340,"author":{"gitId":"jxunze"},"content":"| `* *`    | new user                                                       | see a tutorial and usage instructions              | familiarise with FnBuddy\u0027 features                                 |","lastModifiedDate":"2024-04-04"},{"lineNumber":341,"author":{"gitId":"huekoh"},"content":"| `* * *`  | user                                                           | add an employee contact with banking details       | quickly access the employee\u0027s banking details for salary disbursement |","lastModifiedDate":"2024-03-10"},{"lineNumber":342,"author":{"gitId":"huekoh"},"content":"| `* * *`  | user                                                           | delete an employee contact                         | remove entries that I no longer need                                  |","lastModifiedDate":"2024-03-10"},{"lineNumber":343,"author":{"gitId":"huekoh"},"content":"| `* * *`  | user                                                           | view all employee contacts                         |                                                                       |","lastModifiedDate":"2024-03-10"},{"lineNumber":344,"author":{"gitId":"huekoh"},"content":"| `* *`    | user                                                           | track an employee\u0027s weekly worked hours            | access it for employee salary calculation                             |","lastModifiedDate":"2024-03-10"},{"lineNumber":345,"author":{"gitId":"huekoh"},"content":"| `* *`    | user handling employees with a variety of employment contracts | tag an employee contact with their employment type | retrieve the salary rate of the employee                              |","lastModifiedDate":"2024-03-10"},{"lineNumber":346,"author":{"gitId":"huekoh"},"content":"| `* *`    | user with human error tendencies                               | retrieve an employee\u0027s calculated pay              | avoid paying out an incorrect salary amount                           |","lastModifiedDate":"2024-03-10"},{"lineNumber":347,"author":{"gitId":"huekoh"},"content":"| `* *`    | user                                                           | edit an employee contact details                   | keep the employee\u0027s details up to date                                |","lastModifiedDate":"2024-03-10"},{"lineNumber":348,"author":{"gitId":"huekoh"},"content":"| `*`      | user with many employees                                       | sort employees contacts by name                    | locate the employee contact easily                                    |","lastModifiedDate":"2024-03-10"},{"lineNumber":349,"author":{"gitId":"huekoh"},"content":"| `*`      | user with potential returning employees                        | archive an employee contact                        | reopen the employee\u0027s details when they return easily                 |","lastModifiedDate":"2024-03-10"},{"lineNumber":350,"author":{"gitId":"huekoh"},"content":"| `*`      | user with forgetfulness                                        | search for contacts by keyword                     | find contacts without needing to provide their full name              |","lastModifiedDate":"2024-03-10"},{"lineNumber":351,"author":{"gitId":"huekoh"},"content":"| `*`      | user with many employees                                       | filter employee contacts by tag(s)                 | identify which employee(s) are of that employment type                |","lastModifiedDate":"2024-03-10"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"jxunze"},"content":"(For all use cases below, the **System** is the `FnBuddy` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-04-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"h4ow3i"},"content":"**Use case: Add an employee**","lastModifiedDate":"2024-03-10"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"h4ow3i"},"content":"1.  User requests to add employee contact","lastModifiedDate":"2024-03-10"},{"lineNumber":364,"author":{"gitId":"jxunze"},"content":"2.  FnBuddy requests contact information of employee","lastModifiedDate":"2024-04-04"},{"lineNumber":365,"author":{"gitId":"h4ow3i"},"content":"3.  User provides required information","lastModifiedDate":"2024-03-10"},{"lineNumber":366,"author":{"gitId":"jxunze"},"content":"4.  FnBuddy adds the employee contact","lastModifiedDate":"2024-04-04"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"h4ow3i"},"content":"* 3a. The given contact information is invalid.","lastModifiedDate":"2024-03-10"},{"lineNumber":373,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":374,"author":{"gitId":"jxunze"},"content":"    * 3a1. FnBuddy shows an error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":376,"author":{"gitId":"h4ow3i"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-10"},{"lineNumber":377,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":378,"author":{"gitId":"h4ow3i"},"content":"**Use case: Delete an employee**","lastModifiedDate":"2024-03-10"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":380,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-10"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":382,"author":{"gitId":"h4ow3i"},"content":"1.  User requests to delete an employee contact","lastModifiedDate":"2024-03-10"},{"lineNumber":383,"author":{"gitId":"jxunze"},"content":"2.  FnBuddy requests employee contact ","lastModifiedDate":"2024-04-04"},{"lineNumber":384,"author":{"gitId":"h4ow3i"},"content":"3.  User provides required information","lastModifiedDate":"2024-03-10"},{"lineNumber":385,"author":{"gitId":"jxunze"},"content":"4.  FnBuddy deletes the employee contact","lastModifiedDate":"2024-04-04"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-10"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"h4ow3i"},"content":"* 2a. The contact book is empty.","lastModifiedDate":"2024-03-10"},{"lineNumber":392,"author":{"gitId":"jxunze"},"content":"    * 2a1. FnBuddy shows an error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":394,"author":{"gitId":"h4ow3i"},"content":"        Use case ends","lastModifiedDate":"2024-03-10"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":397,"author":{"gitId":"h4ow3i"},"content":"* 3a. The given contact information is invalid.","lastModifiedDate":"2024-03-10"},{"lineNumber":398,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":399,"author":{"gitId":"jxunze"},"content":"    * 3a1. FnBuddy shows an error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"h4ow3i"},"content":"**Use case: List all employee contacts**","lastModifiedDate":"2024-03-10"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":405,"author":{"gitId":"h4ow3i"},"content":"**MSS**","lastModifiedDate":"2024-03-10"},{"lineNumber":406,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":407,"author":{"gitId":"h4ow3i"},"content":"1.  User requests to list all employee contacts","lastModifiedDate":"2024-03-10"},{"lineNumber":408,"author":{"gitId":"jxunze"},"content":"2.  FnBuddy lists all employee contacts","lastModifiedDate":"2024-04-04"},{"lineNumber":409,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":410,"author":{"gitId":"h4ow3i"},"content":"    Use case ends.","lastModifiedDate":"2024-03-10"},{"lineNumber":411,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":412,"author":{"gitId":"h4ow3i"},"content":"**Extensions**","lastModifiedDate":"2024-03-10"},{"lineNumber":413,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":414,"author":{"gitId":"h4ow3i"},"content":"* 2a. The contact book is empty.","lastModifiedDate":"2024-03-10"},{"lineNumber":415,"author":{"gitId":"jxunze"},"content":"    * 2a1. FnBuddy shows an error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":416,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":417,"author":{"gitId":"h4ow3i"},"content":"      Use case ends","lastModifiedDate":"2024-03-10"},{"lineNumber":418,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":419,"author":{"gitId":"h4ow3i"},"content":"**Use case: Track employee\u0027s work hours**","lastModifiedDate":"2024-03-10"},{"lineNumber":420,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":421,"author":{"gitId":"h4ow3i"},"content":"**MSS**","lastModifiedDate":"2024-03-10"},{"lineNumber":422,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":423,"author":{"gitId":"h4ow3i"},"content":"1.  User requests to add employee\u0027s work hours","lastModifiedDate":"2024-03-10"},{"lineNumber":424,"author":{"gitId":"jxunze"},"content":"2.  FnBuddy requests employee contact and work hours","lastModifiedDate":"2024-04-04"},{"lineNumber":425,"author":{"gitId":"h4ow3i"},"content":"3.  User provides required information","lastModifiedDate":"2024-03-10"},{"lineNumber":426,"author":{"gitId":"jxunze"},"content":"4.  FnBuddy tracks the employee\u0027s work hours","lastModifiedDate":"2024-04-04"},{"lineNumber":427,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":428,"author":{"gitId":"h4ow3i"},"content":"    Use case ends.","lastModifiedDate":"2024-03-10"},{"lineNumber":429,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":430,"author":{"gitId":"h4ow3i"},"content":"**Extensions**","lastModifiedDate":"2024-03-10"},{"lineNumber":431,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":432,"author":{"gitId":"h4ow3i"},"content":"* 2a. The contact book is empty.","lastModifiedDate":"2024-03-10"},{"lineNumber":433,"author":{"gitId":"jxunze"},"content":"    * 2a1. FnBuddy shows an error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":434,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":435,"author":{"gitId":"h4ow3i"},"content":"      Use case ends","lastModifiedDate":"2024-03-10"},{"lineNumber":436,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":437,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":438,"author":{"gitId":"h4ow3i"},"content":"* 3a. The given contact information or working hours is invalid.","lastModifiedDate":"2024-03-10"},{"lineNumber":439,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":440,"author":{"gitId":"jxunze"},"content":"    * 3a1. FnBuddy shows an error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":441,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":442,"author":{"gitId":"h4ow3i"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-10"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":445,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"martinng01"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2024-03-11"},{"lineNumber":452,"author":{"gitId":"martinng01"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-11"},{"lineNumber":453,"author":{"gitId":"martinng01"},"content":"4. The app should be highly reliable, minimizing downtime and ensuring continuous availability during operational hours.","lastModifiedDate":"2024-03-11"},{"lineNumber":454,"author":{"gitId":"martinng01"},"content":"5. It should have built-in mechanisms for data backup and recovery to prevent loss of employee contact information.","lastModifiedDate":"2024-03-11"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"jxunze"},"content":"* **Worked hours**: The number of hours an employee has spent working in a month","lastModifiedDate":"2024-03-14"},{"lineNumber":461,"author":{"gitId":"jxunze"},"content":"* **Bank Details**: Account number for salary disbursement, 7-11 digits in length.","lastModifiedDate":"2024-03-14"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"martinng01"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2024-03-11"},{"lineNumber":481,"author":{"gitId":"martinng01"},"content":"       optimum.","lastModifiedDate":"2024-03-11"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"martinng01"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-03-11"},{"lineNumber":500,"author":{"gitId":"martinng01"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2024-03-11"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"1rbg":3,"jxunze":17,"h4ow3i":48,"huekoh":20,"-":330,"martinng01":98}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"# FnBuddy User Guide","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"Welcome to the FnBuddy User Guide! This comprehensive guide is designed to help you navigate and utilise the FnBuddy part-time employee contact management application with ease. Whether you\u0027re a seasoned restaurant manager or new to the role, this guide will serve as your trusted companion, empowering you to streamline your operations and enhance your team management capabilities. FnBuddy can manage contacts optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FnBuddy can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"This user guide is tailored specifically for restaurant managers who are responsible for liaising with part-time employee records and managing their payroll. We assume that you have a basic understanding of using software applications and are familiar with common restaurant operations and terminology.","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"## Table of Contents","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"- [Introduction to FnBuddy](#introduction-to-fnbuddy)","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"- [Features](#features)","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"    - [Adding a person: `add`](#adding-a-person-add)","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"    - [Listing all persons: `list`](#listing-all-persons-list)","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    - [Deleting a person: `delete`](#deleting-a-person-delete)","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"    - [Editing a person: `edit`](#editing-a-person-edit)","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"    - [Clocking an employee’s working hours: `hours`](#clocking-an-employees-working-hours-hours)","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    - [Locating a person by name: `find`](#locating-a-person-by-name-find)","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    - [Clear all contacts: `clear`](#clear-all-contacts-clear)","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    - [Exiting the program: `exit`](#exiting-the-program-exit)","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"    - [Archiving the person: `archive/unarchive`](#saving-the-data)","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"    - [Retrieving payroll: `payroll`](#retrieving-payroll-payroll)","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    - [Schedule employees: `schedule`](#schedule-employees-schedule)","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"- [Known issues](#known-issues)","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"- [FAQ](#faq)","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"## Introduction to FnBuddy","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"The primary purpose of this user guide is to provide you with a comprehensive resource that will enable you to fully harness the capabilities of FnBuddy. Whether you need to create, view, update, or delete employee contacts, track working hours, assign roles, or simply navigate the application seamlessly, this guide will be your trusty companion, ensuring that you can effectively manage your team and streamline your restaurant\u0027s operations.","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"FnBuddy is an innovative employee contact management application designed specifically for restaurant managers. It offers a user-friendly interface (both CLI and GUI) that allows you to effortlessly create, manage, and maintain contact records for all your employees. With FnBuddy, you can store essential information such as contact details, banking information, and work schedules, ensuring efficient communication and accurate payroll calculations.","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"## Quick start","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"1. Ensure you have Java 11 or above installed on your Computer.","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"2. Download the latest fnbuddy.jar from [here](https://github.com/AY2324S2-CS2103T-T17-4/tp/releases/tag/v1.2).","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"3. Copy the file to the folder you want to use as the home folder for your FnBuddy.","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"4. Open a command terminal, cd (change directory) into the folder you put the jar file in, and use the `java -jar fnbuddy.jar` command to run the application.","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"5. A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"![UI](./images/Ui.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"6. Type the command in the command box and press Enter to execute it. e.g., typing `help` and pressing Enter will open the help window.","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"Some example commands you can try:","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"- `add -fn Javier -ln Tan -p 98749874 -s m -pr 10.5 -a 123 Street -b 420053040` : Adds a contact named Javier Tan to FnBuddy.","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"- `list` : Lists all contacts.","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"- `delete 98749874` : Deletes the contact associated with the phone number 98749874 from FnBuddy.","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"- `view Javier Tan` : View Javier Tan’s contact and all associated information in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"jxunze"},"content":"- `edit 91234567 -a NUS` : Edits the address of the contact associated with phone number 91234567 to NUS.","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"- `hours 91234567 50` : Saves the number of hours worked by the employee.","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"jxunze"},"content":"- `find james` : Searches the address book for a person whose name matches “james”.","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"jxunze"},"content":"- `clear` : Deletes all contacts.","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"- `exit` : Exits the app.","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"jxunze"},"content":"Refer to the [Features](#Features) section below for details of each command.","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jxunze"},"content":"### ℹ️ Notes about the command format:","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jxunze"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user. e.g., in `add -fn FIRST_NAME -ln LAST_NAME`, FIRST_NAME and LAST_NAME are parameters which can be used as `add -fn Javier -ln Tan`.","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"jxunze"},"content":"- Items in square brackets are optional. e.g., `-fn FIRST_NAME -ln LAST_NAME [-t TAG]` can be used as `-fn Javier -ln Tan -t/waiter` or as `-fn Javier -ln Tan`.","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"jxunze"},"content":"- Items with `…` after them can be used multiple times, including zero times. e.g., `[-t TAG]…` can be used as `-t cook -t waiter -t dishwasher`, etc.","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"jxunze"},"content":"- Parameters can be in any order. e.g., if the command specifies `-fn FIRST_NAME -ln LAST_NAME`, `-ln LAST_NAME -fn FIRST_NAME` is also acceptable.","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"jxunze"},"content":"- Extraneous parameters for commands that do not take in parameters (such as help, list, exit, and clear) will be ignored. e.g., if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"jxunze"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines, as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"jxunze"},"content":"### Adding a person `add`","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"jxunze"},"content":"Adds a person’s contact to FnBuddy.","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"jxunze"},"content":"Format: `add -fn FIRST_NAME -ln LAST_NAME -p PHONE_NUMBER -s SEX -pr PAY_RATE [-a ADDRESS] [-b BANK_DETAILS] [-t TAG]…`","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"jxunze"},"content":"Example:","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"jxunze"},"content":"- `add -fn John -ln Doe -p 91860934 -s m -pr 20.50 -a 123 Main St, City`","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"jxunze"},"content":"- `add -fn Jane -ln Smith -p 98765432 -s f -pr 25.50 -a 432 Orchard Road -b 123456789 -t waiter -t bartender`","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"huekoh"},"content":"### Listing contacts `list`","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"huekoh"},"content":"Shows a list of contacts in FnBuddy depending on which you\u0027d like to view.","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"huekoh"},"content":"Format: `list LIST_TYPE`","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"huekoh"},"content":"Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"huekoh"},"content":"- `list all` shows all contacts in FnBuddy.","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"huekoh"},"content":"- `list main` shows all un-archived contacts in FnBuddy.","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"huekoh"},"content":"- `list archive` shows all archived contacts in FnBuddy.","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"jxunze"},"content":"### Deleting a person `delete`","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"jxunze"},"content":"Deletes the specified person from FnBuddy.","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"jxunze"},"content":"Format: `delete PHONE_NUMBER`","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"jxunze"},"content":"Example:","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"jxunze"},"content":"- `delete 91860934` deletes the person with the number 91860934 from FnBuddy.","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"jxunze"},"content":"### Editing a person `edit`","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"jxunze"},"content":"Edits an existing person in FnBuddy.","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"jxunze"},"content":"Format: `edit PHONE_NUMBER [-fn FIRST_NAME] [-ln LAST_NAME] [-p PHONE_NUMBER] [-s SEX] [-pr PAY_RATE] [-a ADDRESS] [-b BANK_DETAILS] [-t TAG]…`","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jxunze"},"content":"Example:","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"jxunze"},"content":"- `edit 91860934 -a Room 504, Marina Bay Sands -pr 25` Edits the address of the person with the phone number 91860934 to Room 504 Marina Bay Sands, and their pay rate to 25 dollars per hour, respectively.","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"jxunze"},"content":"- `edit 98765432 -t` Clears all existing tags from the person with the phone number 98765432.","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"jxunze"},"content":"### Clocking an employee’s working hours `hours`","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"jxunze"},"content":"Saves the number of hours worked by an employee to FnBuddy.","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"jxunze"},"content":"Format: `hours PHONE_NUMBER HOURS_WORKED`","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"jxunze"},"content":"Example:","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"jxunze"},"content":"- `hours 12345678 50`","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"jxunze"},"content":"### Locating a person by name `find`","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"jxunze"},"content":"Example:","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"jxunze"},"content":"- `find john tan` returns John Doe and Henry Tan.","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"jxunze"},"content":"![Find UI](./images/Find_UI.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"jxunze"},"content":"### Clear all contacts `clear`","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"jxunze"},"content":"Delete all employee contacts.","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"jxunze"},"content":"**WARNING!** This action is permanent and non-reversible! Make sure that you want to clear FnBuddy before you execute the command.","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"jxunze"},"content":"### Exiting the program `exit`","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"huekoh"},"content":"### Archiving the person `archive`","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"huekoh"},"content":"Archive\u0027s the person\u0027s contact so that it is hidden from the main list of contacts.","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"huekoh"},"content":"Format: `archive PHONE_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"huekoh"},"content":"Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"huekoh"},"content":"- `archive 91860934` archives the person with the number 91860934 from FnBuddy\u0027s main list of contacts.","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"huekoh"},"content":"### Un-archiving the person `unarchive`","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"huekoh"},"content":"Un-archive\u0027s the person\u0027s contact so that it is shown in the main list of contacts.","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"huekoh"},"content":"Format: `unarchive PHONE_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"huekoh"},"content":"Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"huekoh"},"content":"- `unarchive 91860934` un-archives the person with the number 91860934 from FnBuddy\u0027s main list of contacts.","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"jxunze"},"content":"### Retrieving payroll `payroll`","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":161,"author":{"gitId":"h4ow3i"},"content":"Retrieve employee\u0027s payroll for a given start and end date","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"h4ow3i"},"content":"Format: `payroll -sd START_DATE -ed END_DATE` where `START_DATE` and `END_DATE` are in the format `YYYY-MM-DD`.","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"h4ow3i"},"content":"Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"h4ow3i"},"content":"- `payroll -sd 2024-04-01 -ed 2024-04-30` calculates the payroll of all employees that has worked within 1st April 2024 and 30th April 2024.","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"jxunze"},"content":"### Schedule employees `schedule`","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":170,"author":{"gitId":"1rbg"},"content":"Adds a person in FnBuddy to the schedule on a specified date.","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"1rbg"},"content":"Format: `schedule PHONE_NUMBER DATE` where `DATE` is in the format `YYYY-MM-DD`.","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"1rbg"},"content":"Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"1rbg"},"content":"- `schedule 91860934 2024-04-01` Adds the person with the phone number 91860934 to the schedule on 4th April 2024.","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"1rbg"},"content":"### Unschedule employees `unschedule`","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"1rbg"},"content":"Removes a person in FnBuddy from the schedule on a specified date.","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"1rbg"},"content":"Format: `unschedule PHONE_NUMBER DATE` where `DATE` is in the format `YYYY-MM-DD`.","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"1rbg"},"content":"Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"1rbg"},"content":"- `unschedule 91860934 2024-04-01` Removes the person with the phone number 91860934 from the schedule on 4th April 2024.","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"huekoh"},"content":"### Saving the data","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"huekoh"},"content":"FnBuddy data is stored in the hard disk automatically after any command that changes the data. Rest assured, there is no need to save manually.","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"jxunze"},"content":"## Known issues","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"jxunze"},"content":"1. When using multiple screens, if you move the application to a secondary screen and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"jxunze"},"content":"   a. Alternatively, for Windows users, you can press Shift and right-click the program icon on the taskbar, Select Move, and use your left or right arrow keys to move the window until the window appears.","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"jxunze"},"content":"- **Q: How is the FnBuddy’s data stored?**","lastModifiedDate":"2024-03-26"},{"lineNumber":199,"author":{"gitId":"jxunze"},"content":"    - A: FnBuddy stores its data in a local file on your computer.","lastModifiedDate":"2024-03-26"},{"lineNumber":200,"author":{"gitId":"jxunze"},"content":"- **Q: I don’t understand the quick start guide","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"jxunze"},"content":"  . Can there be a more detailed guide?**","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"jxunze"},"content":"    - A: Here is a link to a more detailed quick start guide for non-tech-savvy users.","lastModifiedDate":"2024-03-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"jxunze"},"content":"- **Q: I prefer clicking buttons to navigate applications. Will FnBuddy be upgrading its GUI to be friendlier to such users?**","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"jxunze"},"content":"    - A: As FnBuddy is purposefully targeted towards users who prefer typing, there are currently no plans to add features that support GUI interactions to replace the command-line style of the app.","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"jxunze"},"content":"- **Q: Is there any quick referral in the app itself for commands that I forget?**","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"jxunze"},"content":"    - A: Click on the help button at the top left of the application’s window for a commands list dropdown.","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"jxunze"},"content":"- **Q: Can I list down an employee with more than 2 names?**","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"1rbg"},"content":"    - A: As FnBuddy only supports the `FIRST_NAME` `LAST_NAME` format, the best solution currently is to list the middle name with either the first or the last. Example: Chua Xun Hao can be saved as `-fn Xun Hao -ln Chua`.","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":213,"author":{"gitId":"jxunze"},"content":"- **Q: My employee uses a foreign phone number, how can that be reflected in the app?**","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"1rbg"},"content":"    - A: FnBuddy does not currently support phone number region differentiation and only supports 8-digit inputs after the `-p` flag. In future updates, we will add contact regions as a feature.","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":216,"author":{"gitId":"jxunze"},"content":"- **Q: Do I need to provide all the details of an employee when creating the contact?**","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"jxunze"},"content":"    - A: No, optional details do not need to be added and can be edited into the contact later on if required. Refer to the add contact feature to view which details are compulsory and optional.","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"1rbg"},"content":"Here\u0027s the updated table with the new features added:","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"jxunze"},"content":"| Command | Description | Format | Examples |","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"jxunze"},"content":"|---------|-------------|--------|----------|","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"jxunze"},"content":"| **Adding a person** | Adds a person\u0027s contact to FnBuddy. | `add -fn FIRST_NAME -ln LAST_NAME -p PHONE_NUMBER -s SEX -pr PAY_RATE [-a ADDRESS] [-b BANK_DETAILS] [-t TAG]...` | `add -fn John -ln Doe -p 91860934 -s m -pr 20.50 -a 123 Main St City`\u003cbr\u003e`add -fn Jane -ln Smith -p 98765432 -s f -pr 25.50 -a 432 Orchard Road -b 123456789 -t waiter -t bartender` |","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"jxunze"},"content":"| **Listing all persons** | Shows a list of all persons in FnBuddy. | `list` | - |","lastModifiedDate":"2024-03-26"},{"lineNumber":227,"author":{"gitId":"jxunze"},"content":"| **Deleting a person** | Deletes the specified person from FnBuddy. | `delete PHONE_NUMBER` | `delete 91860934` |","lastModifiedDate":"2024-03-26"},{"lineNumber":228,"author":{"gitId":"jxunze"},"content":"| **Editing a person** | Edits an existing person in FnBuddy. | `edit PHONE_NUMBER [-fn FIRST_NAME] [-ln LAST_NAME] [-p PHONE_NUMBER] [-s SEX] [-pr PAY_RATE] [-a ADDRESS] [-b BANK_DETAILS] [-t TAG]...` | `edit 91860934 -a Room 504 Marina Bay Sands -pr 25`\u003cbr\u003e`edit 98765432 -t` |","lastModifiedDate":"2024-03-26"},{"lineNumber":229,"author":{"gitId":"jxunze"},"content":"| **Clocking an employee\u0027s working hours** | Saves the number of hours worked by an employee to FnBuddy. | `hours PHONE_NUMBER HOURS_WORKED` | `hours 12345678 50` |","lastModifiedDate":"2024-03-26"},{"lineNumber":230,"author":{"gitId":"jxunze"},"content":"| **Locating a person by name** | Finds persons whose names contain any of the given keywords. | `find KEYWORD [MORE_KEYWORDS]` | `find john tan` |","lastModifiedDate":"2024-03-26"},{"lineNumber":231,"author":{"gitId":"jxunze"},"content":"| **Clear all contacts** | Delete all employee contacts. | `clear` | - |","lastModifiedDate":"2024-03-26"},{"lineNumber":232,"author":{"gitId":"jxunze"},"content":"| **Exiting the program** | Exits the program. | `exit` | - |","lastModifiedDate":"2024-03-26"},{"lineNumber":233,"author":{"gitId":"1rbg"},"content":"| **Archiving a person** | Archives the person\u0027s contact so that it is hidden from the main list of contacts. | `archive PHONE_NUMBER` | `archive 91860934` |","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"1rbg"},"content":"| **Un-archiving a person** | Un-archives the person\u0027s contact so that it is shown in the main list of contacts. | `unarchive PHONE_NUMBER` | `unarchive 91860934` |","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"1rbg"},"content":"| **Retrieving payroll** | Retrieve employee\u0027s payroll for a given start and end date. | `payroll -sd START_DATE -ed END_DATE` | `payroll -sd 2024-04-01 -ed 2024-04-30` |","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"1rbg"},"content":"| **Schedule employees** | Adds a person in FnBuddy to the schedule on a specified date. | `schedule PHONE_NUMBER DATE` | `schedule 91860934 2024-04-01` |","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"1rbg"},"content":"| **Unschedule employees** | Removes a person in FnBuddy from the schedule on a specified date. | `unschedule PHONE_NUMBER DATE` | `unschedule 91860934 2024-04-01` |","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"jxunze":108,"1rbg":20,"h4ow3i":4,"huekoh":21,"-":84}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"huekoh"},"content":"user -[USER_COLOR]\u003e ui : \"delete 98765432\"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 98765432\")","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"huekoh":2,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"Person *--\u003e FirstName","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"Person *--\u003e LastName","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"Person *--\u003e Sex","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"Person *--\u003e EmploymentType","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"Person *--\u003e BankDetails","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"Person *--\u003e HoursWorked","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"FirstName -[hidden]right-\u003e LastName","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"LastName -[hidden]right-\u003e Phone","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"Phone -[hidden]right-\u003e Sex","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"Sex -[hidden]right-\u003e EmploymentType","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"EmploymentType -[hidden]right-\u003e Address","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"Address -[hidden]right-\u003e BankDetails","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"BankDetails -[hidden]right-\u003e HoursWorked","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"martinng01":14}},{"path":"docs/diagrams/ComponentManagers.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"huekoh"},"content":"package Ui as UiPackage {","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"huekoh"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"huekoh"},"content":"Class UiManager","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"huekoh"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package Model as ModelPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"UiManager .up.|\u003e Ui","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"UiManager --\u003e Logic","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"huekoh":7,"-":31}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"[-\u003e LogicManager : execute(\"delete 98765432\")","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 98765432\")","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"huekoh"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"98765432\")","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"huekoh"},"content":"DeleteCommand -\u003e Model : deletePerson(98765432)","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"huekoh":4,"-":66}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nSchedule\" as Schedule","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"Class ScheduleManager","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"Class FirstName","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"Class LastName","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"Class BankDetails","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"Class EmploymentType","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"Class Sex","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"Class HoursWorked","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"Class PayrollWrapper","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"Model .right.\u003e Schedule","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"PayrollWrapper -down-\u003e \"1\" Person","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"ScheduleManager .up.|\u003e Schedule","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"ModelManager -down-\u003e \"1\" ScheduleManager","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"Person *--\u003e FirstName","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"Person *--\u003e LastName","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"Person *--\u003e BankDetails","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"Person *--\u003e EmploymentType","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"Person *--\u003e Sex","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"Person *--\u003e HoursWorked","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"UniquePersonList -[hidden]left-\u003e I","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"FirstName -[hidden]right-\u003e LastName","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"LastName -[hidden]right-\u003e Phone","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"Phone -[hidden]right-\u003e Sex","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"Sex -[hidden]right-\u003e EmploymentType","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"EmploymentType -[hidden]right-\u003e Address","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"Address -[hidden]right-\u003e BankDetails","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"BankDetails -[hidden]right-\u003e HoursWorked","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"jxunze"},"content":"ModelManager --\u003e \"~* filtered\" PayrollWrapper","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"1rbg":5,"jxunze":3,"-":45,"martinng01":20}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"package \"Schedule Storage\" #F4F6F6{","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nScheduleStorage\" as ScheduleStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"Class JsonScheduleStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"Class JsonSerializableSchedule","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"Class JsonAdaptedScheduleDate","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"StorageManager -down-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"StorageManager -down-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"StorageManager -down-\u003e \"1\" ScheduleStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"JsonScheduleStorage .up.|\u003e ScheduleStorage","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"JsonScheduleStorage ..\u003e JsonSerializableSchedule","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"JsonSerializableSchedule --\u003e \"*\" JsonAdaptedScheduleDate","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"JsonAdaptedScheduleDate --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"1rbg":15,"-":41}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"Class Calendar","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"Class PayrollListPanel","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"Class PayrollCard","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"MainWindow *-down-\u003e \"0..1\" PersonListPanel","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"MainWindow *-down-\u003e \"0..1\" PayrollListPanel","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"MainWindow *-down-\u003e \"0..1\" Calendar","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"PayrollListPanel -down-\u003e \"*\" PayrollCard","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"PayrollCard --|\u003e UiPart","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"PayrollListPanel --|\u003e UiPart","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"jxunze"},"content":"PayrollCard ..\u003e Model","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"Calendar ..\u003e Model","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"1rbg":4,"jxunze":7,"-":59}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"title: FnBuddy","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T17-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T17-4/tp/actions)","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T17-4/tp/graph/badge.svg?token\u003dLPV8FKMOGM)](https://codecov.io/gh/AY2324S2-CS2103T-T17-4/tp)","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"**FnBuddy is an innovative employee contact management application designed specifically for restaurant managers.**","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"It offers a user-friendly interface (both CLI and GUI) that allows you to effortlessly create, manage,","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"and maintain contact records for all your part-time employees. With FnBuddy, you can store essential information such as","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"contact details, banking information, and work schedules, ensuring efficient communication and accurate payroll","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"calculations.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"* If you are interested in using FnBuddy, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"  html#quick-start).","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"* If you are interested about developing FnBuddy, the [**Developer Guide**](DeveloperGuide.html) is a good place to ","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"  start.","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jxunze":1,"1rbg":12,"-":13}},{"path":"docs/team/gabrielchua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"title: Gabriel Chua\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"1rbg":1,"-":45}},{"path":"docs/team/huekoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"huekoh"},"content":"title: Hue Koh\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"### Project: FnBuddy","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jxunze":1,"huekoh":1,"-":44}},{"path":"docs/team/jinxunze.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"title: Jin Xunze\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jxunze":1,"-":45}},{"path":"docs/team/martinng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"title: Martin Ng\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"      by using the redo command.","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"      commands.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"      requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":39,"martinng01":14}},{"path":"docs/team/teohaowei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"title: Teo Hao Wei\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"### Project: FnBuddy","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jxunze":1,"h4ow3i":1,"-":44}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":37,"martinng01":4}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"import seedu.address.storage.JsonScheduleStorage;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"import seedu.address.storage.ScheduleStorage;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing FnBuddy ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"        ScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(userPrefs.getScheduleFilePath());","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"1rbg"},"content":"        ReadOnlyAddressBook abInitialData;","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"1rbg"},"content":"            abInitialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":95,"author":{"gitId":"1rbg"},"content":"            abInitialData \u003d new AddressBook();","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"1rbg"},"content":"        Optional\u003cSchedule\u003e scheduleOptional;","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"1rbg"},"content":"        Schedule scheduleInitialData;","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"1rbg"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"1rbg"},"content":"            scheduleOptional \u003d storage.readSchedule();","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"1rbg"},"content":"            if (!scheduleOptional.isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"1rbg"},"content":"                logger.info(\"Creating a new data file \" + storage.getScheduleFilePath()","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"1rbg"},"content":"                        + \" populated with a sample Schedule.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"1rbg"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"1rbg"},"content":"            scheduleInitialData \u003d scheduleOptional.orElseGet(SampleDataUtil::getSampleSchedule);","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"1rbg"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"1rbg"},"content":"            logger.warning(\"Data file at \" + storage.getScheduleFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"1rbg"},"content":"                    + \" Will be starting with an empty Schedule.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"1rbg"},"content":"            scheduleInitialData \u003d new ScheduleManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"1rbg"},"content":"        return new ModelManager(abInitialData, userPrefs, scheduleInitialData);","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"h4ow3i"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping FnBuddy ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"1rbg":24,"h4ow3i":2,"-":178,"martinng01":1}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"huekoh"},"content":"    private static final double DEFAULT_HEIGHT \u003d 420;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"huekoh"},"content":"    private static final double DEFAULT_WIDTH \u003d 650;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"huekoh":2,"-":80}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize) throws IOException {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jxunze":1,"-":142}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.PayrollWrapper;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"    Set\u003cScheduleDate\u003e getScheduleDates();","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"    /** Returns an unmodifiable view of the list of payrolls */","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"    ObservableList\u003cPayrollWrapper\u003e getPayrollList();","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"1rbg":4,"jxunze":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.PayrollWrapper;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"            storage.saveSchedule(model.getSchedule());","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"    public Set\u003cScheduleDate\u003e getScheduleDates() {","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"        return model.getScheduleDates();","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"jxunze"},"content":"    public ObservableList\u003cPayrollWrapper\u003e getPayrollList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"jxunze"},"content":"        return model.getPayrollList();","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"huekoh"},"content":"        return model.getFilteredUnarchivedPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"1rbg":8,"jxunze":6,"huekoh":1,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"The person does not exist in the address book\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"    public static final String MESSAGE_PERSON_NOT_ARCHIVED \u003d \"The person does not exist in the archives\";","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    public static final String MESSAGE_INVALID_HOURS_WORKED \u003d \"Hours clocked can only contain numbers and no spaces.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"                .append(\"; Sex: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"                .append(person.getSex())","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"                .append(\"; Pay Rate: \")","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"                .append(person.getPayRate())","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"                .append(\"; Bank Details: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"                .append(person.getBankDetails())","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jxunze":1,"h4ow3i":3,"huekoh":1,"-":48,"martinng01":4}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAYRATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"        + PREFIX_FIRSTNAME + \"FIRST NAME \"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        + PREFIX_LASTNAME + \"LAST NAME \"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        + PREFIX_SEX + \"SEX \"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"        + PREFIX_PAYRATE + \"PAY RATE \"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"        + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"        + PREFIX_BANKDETAILS + \"BANK DETAILS \\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        //  + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        + PREFIX_FIRSTNAME + \"John \"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        + PREFIX_LASTNAME + \"Doe \"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        + PREFIX_SEX + \"m \"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"        + PREFIX_PAYRATE + \"14 \"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"huekoh"},"content":"        + PREFIX_BANKDETAILS + \"posb 123456789\";","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"    //  + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This phone number already exists in the address book. \"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        + \"Every contact must have a unique phone number.\";","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"h4ow3i":7,"huekoh":1,"-":71,"martinng01":13}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huekoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"huekoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"huekoh"},"content":"import static seedu.address.logic.commands.AddCommand.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"huekoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_UNARCHIVED_PERSONS;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"huekoh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"huekoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.ArchiveStatus;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"huekoh"},"content":" * Archives an employee from the contact book into the archive book.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"huekoh"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"huekoh"},"content":"        + \": Archives a contact. \\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"        + \"Parameters: archive [EXISTING PHONE NUMBER] \\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"huekoh"},"content":"        + \"Example: \" + COMMAND_WORD + \" 98765432\";","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"huekoh"},"content":"    public static final String MESSAGE_ARCHIVE_PERSON_SUCCESS \u003d \"Archived Person: %1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"huekoh"},"content":"    private final Phone targetPhone;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"    public ArchiveCommand(Phone targetPhone) {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"huekoh"},"content":"        this.targetPhone \u003d targetPhone;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"huekoh"},"content":"     * Creates an archived person based on the person to archive.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"huekoh"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"huekoh"},"content":"     * @param personToArchive Person to archive.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"huekoh"},"content":"     * @return Archived person.","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"huekoh"},"content":"    private static Person createArchivedPerson(Person personToArchive) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"huekoh"},"content":"        assert personToArchive !\u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"huekoh"},"content":"        ArchiveStatus updatedArchiveStatus \u003d new ArchiveStatus(true);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"huekoh"},"content":"        return new Person(personToArchive.getFirstName(), personToArchive.getLastName(), personToArchive.getPhone(),","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"huekoh"},"content":"            personToArchive.getSex(), personToArchive.getPayRate(), personToArchive.getAddress(),","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"huekoh"},"content":"            personToArchive.getBankDetails(), personToArchive.getWorkHours(), personToArchive.getTags(),","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"huekoh"},"content":"            updatedArchiveStatus);","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"huekoh"},"content":"     * Archives a person from the contact book.","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"huekoh"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"huekoh"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"huekoh"},"content":"     * @return A command result that indicates the person has been archived.","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"huekoh"},"content":"     * @throws CommandException If the person does not exist in the contact book.","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"huekoh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"huekoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"huekoh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"huekoh"},"content":"        boolean exists \u003d false;","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"huekoh"},"content":"        Person personToArchive \u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"huekoh"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"huekoh"},"content":"            if (person.getPhone().equals(targetPhone)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"huekoh"},"content":"                exists \u003d true;","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"huekoh"},"content":"                personToArchive \u003d person;","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"huekoh"},"content":"                break;","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"huekoh"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"huekoh"},"content":"        if (!exists) {","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"huekoh"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"huekoh"},"content":"        Person archivedPerson \u003d createArchivedPerson(personToArchive);","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"huekoh"},"content":"        if (!personToArchive.isSamePerson(archivedPerson) \u0026\u0026 model.hasPerson(archivedPerson)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"huekoh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"huekoh"},"content":"        model.archivePerson(personToArchive, archivedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"huekoh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_UNARCHIVED_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"huekoh"},"content":"        return new CommandResult(String.format(MESSAGE_ARCHIVE_PERSON_SUCCESS, Messages.format(personToArchive)));","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"huekoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"huekoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"huekoh"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"huekoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"huekoh"},"content":"        if (!(other instanceof ArchiveCommand)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"huekoh"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"huekoh"},"content":"        // state check","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"huekoh"},"content":"        ArchiveCommand e \u003d (ArchiveCommand) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"huekoh"},"content":"        return targetPhone.equals(e.targetPhone);","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"huekoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"huekoh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"huekoh"},"content":"            .add(\"targetPhone\", targetPhone)","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"huekoh"},"content":"            .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"huekoh"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"huekoh":113}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    /** The application should show contacts. */","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"    private final boolean showContacts;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"    /** The application should show schedule. */","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    private final boolean showSchedule;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    /** The application should show payroll. */","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"    private final boolean showPayroll;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"                         boolean showContacts, boolean showSchedule, boolean showPayroll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"        this.showContacts \u003d showContacts;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"        this.showSchedule \u003d showSchedule;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"        this.showPayroll \u003d showPayroll;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"     * {@code showHelp} and {@code exit} fields, and other fields set to their default value.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"        this(feedbackToUser, showHelp, exit, false, false, false);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"        this(feedbackToUser, false, false, false, false, false);","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"    public boolean isShowContacts() {","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"        return showContacts;","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"    public boolean isShowSchedule() {","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"1rbg"},"content":"        return showSchedule;","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"jxunze"},"content":"    public boolean isShowPayroll() {","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"jxunze"},"content":"        return showPayroll;","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"1rbg"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"1rbg"},"content":"                \u0026\u0026 showContacts \u003d\u003d otherCommandResult.showContacts","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"1rbg"},"content":"                \u0026\u0026 showSchedule \u003d\u003d otherCommandResult.showSchedule;","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"1rbg"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, showContacts, showSchedule);","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"1rbg"},"content":"                .add(\"showContacts\", showContacts)","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"1rbg"},"content":"                .add(\"showSchedule\", showSchedule)","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"1rbg":28,"jxunze":11,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"            + \": Deletes the person identified by the phone number.\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"            + \"Parameters: PHONE NUMBER\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"            + \"Example: \" + COMMAND_WORD + \" 89348843\";","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    private final Phone targetPhone;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"    public DeleteCommand(Phone targetPhone) {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"        this.targetPhone \u003d targetPhone;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"        boolean exists \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"        Person personToDelete \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"            if (person.getPhone().equals(targetPhone)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"                exists \u003d true;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"                personToDelete \u003d person;","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"        if (!exists) {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"jxunze"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"jxunze"},"content":"        return targetPhone.equals(otherDeleteCommand.targetPhone);","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"jxunze"},"content":"                .add(\"targetPhone\", targetPhone.toString())","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"jxunze":20,"-":55}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAYRATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.WorkHours;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person\"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        + \" identified \"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"        + \"by the phone number. \"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"        + \"Parameters: Phone number\"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"        + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"jxunze"},"content":"        + \"[\" + PREFIX_FIRSTNAME + \"FIRST NAME] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"jxunze"},"content":"        + \"[\" + PREFIX_LASTNAME + \"LAST NAME] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"        + \"[\" + PREFIX_PAYRATE + \"PAY RATE] \"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"        + \"[\" + PREFIX_BANKDETAILS + \"BANK DETAILS] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"jxunze"},"content":"        + \"[\" + PREFIX_SEX + \"SEX] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"        + \"Example: \" + COMMAND_WORD + \" 85789476 \"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This phone number already exists in the address book. \"","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"        + \"Every contact must have a unique phone number.\";","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"jxunze"},"content":"    private final Phone number;","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"jxunze"},"content":"     * @param phoneNumber          of the person in the filtered person list to edit","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"jxunze"},"content":"    public EditCommand(Phone phoneNumber, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"jxunze"},"content":"        requireNonNull(phoneNumber);","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"jxunze"},"content":"        this.number \u003d phoneNumber;","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"jxunze"},"content":"        Name updatedFirstName \u003d editPersonDescriptor.getFirstName().orElse(personToEdit.getFirstName());","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"jxunze"},"content":"        Name updatedLastName \u003d editPersonDescriptor.getLastName().orElse(personToEdit.getLastName());","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"jxunze"},"content":"        Sex updatedSex \u003d editPersonDescriptor.getSex().orElse(personToEdit.getSex());","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"h4ow3i"},"content":"        PayRate updatedPayRate \u003d editPersonDescriptor.getPayRate()","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"h4ow3i"},"content":"            .orElse(personToEdit.getPayRate());","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"h4ow3i"},"content":"        BankDetails updatedBankDetails \u003d editPersonDescriptor.getBankDetails().orElse(personToEdit.getBankDetails());","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"h4ow3i"},"content":"        WorkHours updatedWorkHours \u003d editPersonDescriptor.getHoursWorked().orElse(personToEdit.getWorkHours());","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"h4ow3i"},"content":"        return new Person(updatedFirstName, updatedLastName, updatedPhone, updatedSex, updatedPayRate,","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"huekoh"},"content":"            updatedAddress, updatedBankDetails, updatedWorkHours, updatedTags, personToEdit.getArchiveStatus());","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"jxunze"},"content":"        boolean exists \u003d false;","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"jxunze"},"content":"        Person personToEdit \u003d null;","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"jxunze"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"jxunze"},"content":"            if (person.getPhone().equals(number)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"jxunze"},"content":"                exists \u003d true;","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"jxunze"},"content":"                personToEdit \u003d person;","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"jxunze"},"content":"                break;","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"jxunze"},"content":"        if (!exists) {","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"jxunze"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"jxunze"},"content":"        return number.equals(otherEditCommand.number)","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"jxunze"},"content":"            .add(\"index\", number)","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"jxunze"},"content":"        private Name firstName;","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"jxunze"},"content":"        private Name lastName;","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"jxunze"},"content":"        private Sex sex;","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"h4ow3i"},"content":"        private PayRate payRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"jxunze"},"content":"        private BankDetails bankDetails;","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"h4ow3i"},"content":"        private WorkHours hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"martinng01"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"jxunze"},"content":"            setFirstName(toCopy.firstName);","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"jxunze"},"content":"            setLastName(toCopy.lastName);","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"h4ow3i"},"content":"            setPayRate(toCopy.payRate);","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"jxunze"},"content":"            setSex(toCopy.sex);","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"h4ow3i"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"jxunze"},"content":"            setBankDetails(toCopy.bankDetails);","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"h4ow3i"},"content":"            setHoursWorked(toCopy.hoursWorked);","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"h4ow3i"},"content":"            return CollectionUtil.isAnyNonNull(firstName, lastName, phone, address, tags, sex, payRate,","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"jxunze"},"content":"                bankDetails);","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"jxunze"},"content":"        public Optional\u003cName\u003e getFirstName() {","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"jxunze"},"content":"            return Optional.ofNullable(firstName);","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"jxunze"},"content":"        public void setFirstName(Name name) {","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"jxunze"},"content":"            this.firstName \u003d name;","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"jxunze"},"content":"        public Optional\u003cName\u003e getLastName() {","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"jxunze"},"content":"            return Optional.ofNullable(lastName);","lastModifiedDate":"2024-03-13"},{"lineNumber":204,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":205,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":206,"author":{"gitId":"jxunze"},"content":"        public void setLastName(Name name) {","lastModifiedDate":"2024-03-13"},{"lineNumber":207,"author":{"gitId":"jxunze"},"content":"            this.lastName \u003d name;","lastModifiedDate":"2024-03-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"martinng01"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"martinng01"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"jxunze"},"content":"        public Optional\u003cSex\u003e getSex() {","lastModifiedDate":"2024-03-13"},{"lineNumber":219,"author":{"gitId":"jxunze"},"content":"            return Optional.ofNullable(sex);","lastModifiedDate":"2024-03-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":222,"author":{"gitId":"jxunze"},"content":"        public void setSex(Sex sex) {","lastModifiedDate":"2024-03-13"},{"lineNumber":223,"author":{"gitId":"jxunze"},"content":"            this.sex \u003d sex;","lastModifiedDate":"2024-03-13"},{"lineNumber":224,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":225,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":226,"author":{"gitId":"jxunze"},"content":"        public Optional\u003cBankDetails\u003e getBankDetails() {","lastModifiedDate":"2024-03-13"},{"lineNumber":227,"author":{"gitId":"jxunze"},"content":"            return Optional.ofNullable(bankDetails);","lastModifiedDate":"2024-03-13"},{"lineNumber":228,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":229,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":230,"author":{"gitId":"jxunze"},"content":"        public void setBankDetails(BankDetails bankDetails) {","lastModifiedDate":"2024-03-13"},{"lineNumber":231,"author":{"gitId":"jxunze"},"content":"            this.bankDetails \u003d bankDetails;","lastModifiedDate":"2024-03-13"},{"lineNumber":232,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":233,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":234,"author":{"gitId":"h4ow3i"},"content":"        public Optional\u003cPayRate\u003e getPayRate() {","lastModifiedDate":"2024-03-25"},{"lineNumber":235,"author":{"gitId":"h4ow3i"},"content":"            return Optional.ofNullable(payRate);","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":237,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":238,"author":{"gitId":"h4ow3i"},"content":"        public void setPayRate(PayRate payRate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":239,"author":{"gitId":"h4ow3i"},"content":"            this.payRate \u003d payRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"h4ow3i"},"content":"        public Optional\u003cWorkHours\u003e getHoursWorked() {","lastModifiedDate":"2024-03-17"},{"lineNumber":251,"author":{"gitId":"h4ow3i"},"content":"            return Optional.ofNullable(hoursWorked);","lastModifiedDate":"2024-03-17"},{"lineNumber":252,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":253,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":254,"author":{"gitId":"h4ow3i"},"content":"        public void setHoursWorked(WorkHours hoursWorked) {","lastModifiedDate":"2024-03-17"},{"lineNumber":255,"author":{"gitId":"h4ow3i"},"content":"            this.hoursWorked \u003d hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-03-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"jxunze"},"content":"            return tags !\u003d null ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":272,"author":{"gitId":"jxunze"},"content":"            this.tags \u003d tags !\u003d null ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-14"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"jxunze"},"content":"            return Objects.equals(firstName, otherEditPersonDescriptor.firstName)","lastModifiedDate":"2024-03-13"},{"lineNumber":288,"author":{"gitId":"jxunze"},"content":"                \u0026\u0026 Objects.equals(lastName, otherEditPersonDescriptor.lastName)","lastModifiedDate":"2024-03-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":290,"author":{"gitId":"jxunze"},"content":"                \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-13"},{"lineNumber":291,"author":{"gitId":"jxunze"},"content":"                \u0026\u0026 Objects.equals(sex, otherEditPersonDescriptor.sex)","lastModifiedDate":"2024-03-13"},{"lineNumber":292,"author":{"gitId":"h4ow3i"},"content":"                \u0026\u0026 Objects.equals(payRate, otherEditPersonDescriptor.payRate)","lastModifiedDate":"2024-03-25"},{"lineNumber":293,"author":{"gitId":"h4ow3i"},"content":"                \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2024-03-17"},{"lineNumber":294,"author":{"gitId":"h4ow3i"},"content":"                \u0026\u0026 Objects.equals(bankDetails, otherEditPersonDescriptor.bankDetails)","lastModifiedDate":"2024-03-17"},{"lineNumber":295,"author":{"gitId":"h4ow3i"},"content":"                \u0026\u0026 Objects.equals(hoursWorked, otherEditPersonDescriptor.hoursWorked);","lastModifiedDate":"2024-03-17"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"jxunze"},"content":"                .add(\"firstName\", firstName)","lastModifiedDate":"2024-03-13"},{"lineNumber":302,"author":{"gitId":"jxunze"},"content":"                .add(\"lastName\", lastName)","lastModifiedDate":"2024-03-13"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":304,"author":{"gitId":"jxunze"},"content":"                .add(\"sex\", sex)","lastModifiedDate":"2024-03-13"},{"lineNumber":305,"author":{"gitId":"h4ow3i"},"content":"                .add(\"payRate\", payRate)","lastModifiedDate":"2024-03-25"},{"lineNumber":306,"author":{"gitId":"h4ow3i"},"content":"                .add(\"address\", address)","lastModifiedDate":"2024-03-17"},{"lineNumber":307,"author":{"gitId":"jxunze"},"content":"                .add(\"bankDetails\", bankDetails)","lastModifiedDate":"2024-03-13"},{"lineNumber":308,"author":{"gitId":"h4ow3i"},"content":"                .add(\"hoursWorked\", hoursWorked)","lastModifiedDate":"2024-03-17"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jxunze":75,"h4ow3i":34,"huekoh":1,"-":179,"martinng01":24}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false, false);","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jxunze":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jxunze":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/HoursCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.WorkHours;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":" * Adds work hours to a person in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"public class HoursCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    public static final String COMMAND_WORD \u003d \"hours\";","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds work hours to a person in the address book. \"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"            + \"Parameters: \u003cPhone\u003e \u003cHours\u003e\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"            + \"Example: \" + COMMAND_WORD + \" 98765432 5\";","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s has worked %2$d hours this week\";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"The person with phone number: %1$s does not exist\";","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    private final Phone phoneNumber;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    private final WorkHours hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"     * Creates an HoursCommand to add work hours to the person with the specified phone number.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"    public HoursCommand(Phone phoneNumber, WorkHours hoursWorked) {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"        requireNonNull(phoneNumber);","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        this.hoursWorked \u003d hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        Person personToUpdate \u003d model.getPersonByPhoneNumber(phoneNumber);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"        if (personToUpdate \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_NOT_FOUND, phoneNumber));","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"        personToUpdate.setHoursWorked(hoursWorked);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"        model.updatePerson(personToUpdate);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToUpdate.getName(),","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"                hoursWorked.getHoursWorked()));","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"h4ow3i"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"h4ow3i"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"h4ow3i"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"h4ow3i"},"content":"        if (!(other instanceof HoursCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"h4ow3i"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"h4ow3i"},"content":"        HoursCommand otherCommand \u003d (HoursCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"h4ow3i"},"content":"        return phoneNumber.equals(otherCommand.phoneNumber)","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"h4ow3i"},"content":"                \u0026\u0026 hoursWorked \u003d\u003d otherCommand.hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"h4ow3i"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"h4ow3i"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"h4ow3i"},"content":"                .add(\"phoneNumber\", phoneNumber)","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"h4ow3i"},"content":"                .add(\"hoursWorked\", hoursWorked)","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"h4ow3i"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"h4ow3i":77}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"huekoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ARCHIVED_PERSONS;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_UNARCHIVED_PERSONS;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List all persons in either the archived or\"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"huekoh"},"content":"            + \" unarchived list.\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"            + \"Example: \" + COMMAND_WORD + \"archive\"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"            + \"Example: \" + COMMAND_WORD + \"main\"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"            + \"Example: \" + COMMAND_WORD + \"all\";","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all employees\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"    private final String keyword;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"    public ListCommand(String keyword) {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"huekoh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"huekoh"},"content":"        switch (keyword) {","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"        case \"archive\":","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"huekoh"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_ARCHIVED_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"huekoh"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"huekoh"},"content":"        case \"main\":","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_UNARCHIVED_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"huekoh"},"content":"        case \"all\":","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"huekoh"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"huekoh"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"huekoh"},"content":"        default:","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"huekoh"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"huekoh"},"content":"            return new CommandResult(MESSAGE_USAGE);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"h4ow3i":1,"huekoh":24,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/PayrollCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * Generates a payroll for a time period.","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"public class PayrollCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"    public static final String COMMAND_WORD \u003d \"payroll\";","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Generates a payroll for a time period. \"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"            + PREFIX_STARTDATE + \"START DATE \"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"            + PREFIX_ENDDATE + \"END DATE \";","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Payroll generated for %1$s to %2$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Payroll generation failed\";","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"     * Creates a PayrollCommand to generate a payroll for the specified time period.","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"    public PayrollCommand(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"            model.generatePayroll(startDate, endDate);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, startDate, endDate), false, false,","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"                    false, false, true);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"            return new CommandResult(MESSAGE_FAILURE);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jxunze":46}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the schedule. \"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"            + \"PHONE \"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"            + \"DATE in the format yyyy-mm-dd\";","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Schedule: %1$s added on %2$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    private final Phone phoneNumber;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"     * Creates a ScheduleCommand to add the specified {@code Person} to the schedule on the specified {@code LocalDate}.","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    public ScheduleCommand(Phone phoneNumber, LocalDate date) {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"        requireAllNonNull(phoneNumber, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"        Person person \u003d model.getPersonByPhoneNumber(phoneNumber);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"        model.addPersonToSchedule(person, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person.getName().value, date), false, false,","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"                false, true, false);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"        if (!(other instanceof ScheduleCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"        ScheduleCommand otherScheduleCommand \u003d (ScheduleCommand) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"        return phoneNumber.equals(otherScheduleCommand.phoneNumber) \u0026\u0026 date.equals(otherScheduleCommand.date);","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"                .add(\"phoneNumber\", phoneNumber)","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"                .add(\"date\", date)","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"                .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":73,"jxunze":1}},{"path":"src/main/java/seedu/address/logic/commands/UnarchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huekoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"huekoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"huekoh"},"content":"import static seedu.address.logic.commands.AddCommand.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"huekoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ARCHIVED_PERSONS;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_UNARCHIVED_PERSONS;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"huekoh"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"huekoh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.ArchiveStatus;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"huekoh"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":" * Archives an employee from the contact book into the archive book.","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"public class UnarchiveCommand extends Command {","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"huekoh"},"content":"    public static final String COMMAND_WORD \u003d \"unarchive\";","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"huekoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"            + \": Archives a contact. \\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"huekoh"},"content":"            + \"Parameters: unarchive [EXISTING PHONE NUMBER] \\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"huekoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 98765432\";","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"huekoh"},"content":"    public static final String MESSAGE_ARCHIVE_PERSON_SUCCESS \u003d \"Un-archived Person: %1$s\";","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"huekoh"},"content":"    private final Phone targetPhone;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"huekoh"},"content":"    public UnarchiveCommand(Phone targetPhone) {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"huekoh"},"content":"        this.targetPhone \u003d targetPhone;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"huekoh"},"content":"     * Creates an archived person based on the person to archive.","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"huekoh"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"huekoh"},"content":"     * @param personToUnarchive Person to archive.","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"huekoh"},"content":"     * @return Archived person.","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"huekoh"},"content":"    private static Person createUnarchivedPerson(Person personToUnarchive) {","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"huekoh"},"content":"        assert personToUnarchive !\u003d null;","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"huekoh"},"content":"        ArchiveStatus updatedArchiveStatus \u003d new ArchiveStatus(false);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"huekoh"},"content":"        return new Person(personToUnarchive.getFirstName(), personToUnarchive.getLastName(),","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"huekoh"},"content":"                personToUnarchive.getPhone(), personToUnarchive.getSex(), personToUnarchive.getPayRate(),","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"huekoh"},"content":"                personToUnarchive.getAddress(), personToUnarchive.getBankDetails(), personToUnarchive.getWorkHours(),","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"huekoh"},"content":"                personToUnarchive.getTags(), updatedArchiveStatus);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"huekoh"},"content":"     * Archives a person from the contact book.","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"huekoh"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"huekoh"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"huekoh"},"content":"     * @return A command result that indicates the person has been archived.","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"huekoh"},"content":"     * @throws CommandException If the person does not exist in the contact book.","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"huekoh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"huekoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"huekoh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_ARCHIVED_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"huekoh"},"content":"        List\u003cPerson\u003e archiveList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"huekoh"},"content":"        boolean exists \u003d false;","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"huekoh"},"content":"        Person personToUnarchive \u003d null;","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"huekoh"},"content":"        for (Person person : archiveList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"huekoh"},"content":"            if (person.getPhone().equals(targetPhone)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"huekoh"},"content":"                exists \u003d true;","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"huekoh"},"content":"                personToUnarchive \u003d person;","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"huekoh"},"content":"                break;","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"huekoh"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"huekoh"},"content":"        if (!exists) {","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"huekoh"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_ARCHIVED);","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"huekoh"},"content":"        Person unarchivedPerson \u003d createUnarchivedPerson(personToUnarchive);","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"huekoh"},"content":"        if (!personToUnarchive.isSamePerson(unarchivedPerson) \u0026\u0026 model.hasPerson(unarchivedPerson)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"huekoh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"huekoh"},"content":"        model.unarchivePerson(personToUnarchive, unarchivedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"huekoh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_UNARCHIVED_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"huekoh"},"content":"        return new CommandResult(String.format(MESSAGE_ARCHIVE_PERSON_SUCCESS, Messages.format(personToUnarchive)));","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"huekoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"huekoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"huekoh"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"huekoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"huekoh"},"content":"        if (!(other instanceof UnarchiveCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"huekoh"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"huekoh"},"content":"        // state check","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"huekoh"},"content":"        UnarchiveCommand e \u003d (UnarchiveCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"huekoh"},"content":"        return targetPhone.equals(e.targetPhone);","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"huekoh"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"huekoh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"huekoh"},"content":"                .add(\"targetPhone\", targetPhone)","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"huekoh"},"content":"                .toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"huekoh"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"huekoh":115}},{"path":"src/main/java/seedu/address/logic/commands/UnscheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":" * Removes a person from the schedule.","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"public class UnscheduleCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"    public static final String COMMAND_WORD \u003d \"unschedule\";","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes a person from the schedule. \"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"            + \"PHONE \"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"            + \"DATE in the format yyyy-mm-dd\";","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Schedule: %1$s removed from %2$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"    private final Phone phoneNumber;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"     * Creates an UnscheduleCommand to remove the specified {@code Person} from the schedule on the specified","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"     * {@code LocalDate}.","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    public UnscheduleCommand(Phone phoneNumber, LocalDate date) {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"        requireAllNonNull(phoneNumber, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"        Person person \u003d model.getPersonByPhoneNumber(phoneNumber);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"        model.removePersonFromSchedule(person, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person.getName().value, date), false, false,","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"                false, true, false);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"        if (!(other instanceof UnscheduleCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"        UnscheduleCommand otherUnscheduleCommand \u003d (UnscheduleCommand) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"        return phoneNumber.equals(otherUnscheduleCommand.phoneNumber) \u0026\u0026 date.equals(otherUnscheduleCommand.date);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"                .add(\"phoneNumber\", phoneNumber)","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"                .add(\"date\", date)","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"                .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":70,"jxunze":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAYRATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.ArchiveStatus;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.WorkHours;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_FIRSTNAME, PREFIX_LASTNAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"                PREFIX_SEX, PREFIX_PAYRATE, PREFIX_ADDRESS, PREFIX_BANKDETAILS,","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"                PREFIX_TAG);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FIRSTNAME, PREFIX_LASTNAME,","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"            PREFIX_PHONE, PREFIX_SEX, PREFIX_PAYRATE)","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_FIRSTNAME, PREFIX_LASTNAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"            PREFIX_SEX, PREFIX_PAYRATE,","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"            PREFIX_ADDRESS, PREFIX_BANKDETAILS);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        Name firstName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_FIRSTNAME).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        Name lastName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_LASTNAME).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        Sex sex \u003d ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"        PayRate payRate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"            ParserUtil.parsePayRate(argMultimap.getValue(PREFIX_PAYRATE).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        BankDetails bankDetails \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"            ParserUtil.parseBankDetails(argMultimap.getValue(PREFIX_BANKDETAILS).orElse(\"\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"h4ow3i"},"content":"        Person person \u003d new Person(firstName, lastName, phone, sex, payRate, address,","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"huekoh"},"content":"            bankDetails, new WorkHours(), tagList, new ArchiveStatus(false));","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jxunze":1,"h4ow3i":7,"huekoh":6,"-":42,"martinng01":16}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.logic.commands.HoursCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"import seedu.address.logic.commands.PayrollCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.commands.UnarchiveCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.commands.UnscheduleCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"huekoh"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"h4ow3i"},"content":"        case HoursCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"h4ow3i"},"content":"            return new HoursCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"1rbg"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"1rbg"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"1rbg"},"content":"        case UnscheduleCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"1rbg"},"content":"            return new UnscheduleCommandParser().parse(arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"huekoh"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"huekoh"},"content":"            return new ArchiveCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"huekoh"},"content":"        case UnarchiveCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"huekoh"},"content":"            return new UnarchiveCommandParser().parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"jxunze"},"content":"        case PayrollCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"jxunze"},"content":"            return new PayrollCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jxunze":5,"1rbg":8,"h4ow3i":4,"huekoh":9,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/ArchiveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huekoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"huekoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"huekoh"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"huekoh"},"content":" * Parses input arguments and creates a new ArchiveCommand object","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"huekoh"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"huekoh"},"content":"public class ArchiveCommandParser implements Parser\u003cArchiveCommand\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"huekoh"},"content":"     * Parses the given {@code String} of arguments in the context of the ArchiveCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"huekoh"},"content":"     * and returns an ArchiveCommand object for execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"    public ArchiveCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"            Phone number \u003d ParserUtil.parsePhone(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"huekoh"},"content":"            return new ArchiveCommand(number);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"huekoh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"huekoh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ArchiveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"huekoh"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"huekoh":28}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        private int startPosition;","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":146,"martinng01":2}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_FIRSTNAME \u003d new Prefix(\"-fn \");","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_LASTNAME \u003d new Prefix(\"-ln \");","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-p \");","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_SEX \u003d new Prefix(\"-s \");","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"    public static final Prefix PREFIX_PAYRATE \u003d new Prefix(\"-pr \");","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-a \");","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_BANKDETAILS \u003d new Prefix(\"-b \");","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-t \");","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    public static final Prefix PREFIX_HOURS \u003d new Prefix(\"-hours\");","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    public static final Prefix PREFIX_STARTDATE \u003d new Prefix(\"-sd \");","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    public static final Prefix PREFIX_ENDDATE \u003d new Prefix(\"-ed \");","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jxunze":2,"h4ow3i":3,"-":9,"martinng01":6}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"            Phone number \u003d ParserUtil.parsePhone(args);","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"            return new DeleteCommand(number);","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jxunze":3,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAYRATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FIRSTNAME, PREFIX_LASTNAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"                    PREFIX_ADDRESS, PREFIX_TAG, PREFIX_SEX, PREFIX_PAYRATE, PREFIX_BANKDETAILS);","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"        Phone number;","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"            number \u003d ParserUtil.parsePhone(argMultimap.getPreamble());","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_FIRSTNAME, PREFIX_LASTNAME, PREFIX_PHONE, PREFIX_SEX,","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"                PREFIX_PAYRATE, PREFIX_BANKDETAILS, PREFIX_ADDRESS);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"jxunze"},"content":"        if (argMultimap.getValue(PREFIX_FIRSTNAME).isPresent()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"            editPersonDescriptor.setFirstName(ParserUtil.parseName(argMultimap.getValue(PREFIX_FIRSTNAME).get()));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"        if (argMultimap.getValue(PREFIX_LASTNAME).isPresent()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"jxunze"},"content":"            editPersonDescriptor.setLastName(ParserUtil.parseName(argMultimap.getValue(PREFIX_LASTNAME).get()));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"jxunze"},"content":"        if (argMultimap.getValue(PREFIX_SEX).isPresent()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"jxunze"},"content":"            editPersonDescriptor.setSex(ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get()));","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"h4ow3i"},"content":"        if (argMultimap.getValue(PREFIX_PAYRATE).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"h4ow3i"},"content":"            editPersonDescriptor.setPayRate(ParserUtil","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"h4ow3i"},"content":"                .parsePayRate(argMultimap.getValue(PREFIX_PAYRATE).get()));","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"jxunze"},"content":"        if (argMultimap.getValue(PREFIX_BANKDETAILS).isPresent()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"jxunze"},"content":"            editPersonDescriptor.setBankDetails(ParserUtil","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"jxunze"},"content":"                .parseBankDetails(argMultimap.getValue(PREFIX_BANKDETAILS).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"jxunze"},"content":"        return new EditCommand(number, editPersonDescriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jxunze":24,"h4ow3i":6,"-":70,"martinng01":1}},{"path":"src/main/java/seedu/address/logic/parser/HoursCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.logic.commands.HoursCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.WorkHours;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" * Parses input arguments and creates a new HoursCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"public class HoursCommandParser implements Parser\u003cHoursCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"     * Parses the given {@code String} of arguments in the context of the HoursCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"     * and returns a HoursCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    public HoursCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"        String[] tokens \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HoursCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"        Phone phoneNumber \u003d ParserUtil.parsePhone(tokens[0]);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"        WorkHours hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"        hoursWorked \u003d ParserUtil.parseWorkHours(tokens[1]);","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"        return new HoursCommand(phoneNumber, hoursWorked);","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"h4ow3i":31}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huekoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"huekoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"huekoh"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"huekoh"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"huekoh"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"huekoh"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"huekoh"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"huekoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"huekoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"        String keyword \u003d args.trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"        return new ListCommand(keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"huekoh"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"huekoh":30}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.WorkHours;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"     * Parses a {@code String sex} into a {@code Sex}.","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"     * @throws ParseException if the given {@code sex} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"    public static Sex parseSex(String sex) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"        requireNonNull(sex);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"        String trimmedSex \u003d sex.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"        if (!Sex.isValidSex(trimmedSex)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"            throw new ParseException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"        return new Sex(trimmedSex);","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"     * Parses a {@code String employmentType} into a {@code EmploymentType}.","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"     * @throws ParseException if the given {@code employmentType} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"h4ow3i"},"content":"    public static PayRate parsePayRate(String payRate) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"h4ow3i"},"content":"        requireNonNull(payRate);","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"h4ow3i"},"content":"        String trimmedPayRate \u003d payRate.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"h4ow3i"},"content":"            double rate \u003d Double.parseDouble(trimmedPayRate);","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"h4ow3i"},"content":"            if (rate \u003c\u003d 0) {","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"h4ow3i"},"content":"                throw new ParseException(\"Pay rate cannot be zero or negative\");","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"h4ow3i"},"content":"            return new PayRate(rate);","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"h4ow3i"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"h4ow3i"},"content":"            throw new ParseException(PayRate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"martinng01"},"content":"     * Parses a {@code String bankDetails} into an {@code BankDetails}.","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"     * @throws ParseException if the given {@code bankDetails} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"martinng01"},"content":"    public static BankDetails parseBankDetails(String bankDetails) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"        requireNonNull(bankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        String trimmedBankDetails \u003d bankDetails.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"        if (!BankDetails.isValidBankAccount(trimmedBankDetails)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"martinng01"},"content":"            throw new ParseException(BankDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"martinng01"},"content":"        return new BankDetails(trimmedBankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"h4ow3i"},"content":"     * Parses a string representation of work hours into a WorkHours object.","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"h4ow3i"},"content":"     * @param workHours A string representing the number of work hours.","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"h4ow3i"},"content":"     * @return A WorkHours object representing the parsed work hours.","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"h4ow3i"},"content":"     * @throws ParseException if the work hours string is invalid or cannot be parsed.","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"h4ow3i"},"content":"    public static WorkHours parseWorkHours(String workHours) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"h4ow3i"},"content":"        requireNonNull(workHours);","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"h4ow3i"},"content":"        String trimmedWorkHours \u003d workHours.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"h4ow3i"},"content":"            int hours \u003d Integer.parseInt(trimmedWorkHours);","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"h4ow3i"},"content":"            if (hours \u003c 0) {","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"h4ow3i"},"content":"                throw new ParseException(\"Work hours cannot be negative\");","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"h4ow3i"},"content":"            return new WorkHours(hours);","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"h4ow3i"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"h4ow3i"},"content":"            throw new ParseException(WorkHours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"1rbg"},"content":"     * Parses a string representation of a date into a LocalDate object.","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"1rbg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"1rbg"},"content":"     * @param date A string representing a date.","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"1rbg"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"1rbg"},"content":"     * @throws ParseException if the date string is invalid or cannot be parsed.","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"1rbg"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"1rbg"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"1rbg"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"1rbg"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"1rbg"},"content":"            return LocalDate.parse(trimmedDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"1rbg"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"1rbg"},"content":"            throw new ParseException(\"Invalid date format. Please enter a date in the format yyyy-mm-dd\");","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":204,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":205,"author":{"gitId":"jxunze"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-04-01"},{"lineNumber":206,"author":{"gitId":"jxunze"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-01"},{"lineNumber":207,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":208,"author":{"gitId":"jxunze"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-01"},{"lineNumber":209,"author":{"gitId":"jxunze"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-01"},{"lineNumber":210,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"1rbg":17,"jxunze":9,"h4ow3i":37,"-":115,"martinng01":33}},{"path":"src/main/java/seedu/address/logic/parser/PayrollCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"import seedu.address.logic.commands.PayrollCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":" * Parses input arguments and creates a new PayrollCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"public class PayrollCommandParser implements Parser\u003cPayrollCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"     * Parses the given {@code String} of arguments in the context of the PayrollCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     * and returns a PayrollCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    public PayrollCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STARTDATE, PREFIX_ENDDATE);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STARTDATE, PREFIX_ENDDATE);","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STARTDATE, PREFIX_ENDDATE)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PayrollCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"        LocalDate startDate \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_STARTDATE).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"        LocalDate endDate \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_ENDDATE).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"        return new PayrollCommand(startDate, endDate);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"jxunze":36}},{"path":"src/main/java/seedu/address/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":" * Parses input arguments and creates a new ScheduleCommand object","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"     * and returns a ScheduleCommand object for execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"        String[] tokens \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        Phone phoneNumber \u003d ParserUtil.parsePhone(tokens[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d ParserUtil.parseDate(tokens[1]);","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"        return new ScheduleCommand(phoneNumber, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":31}},{"path":"src/main/java/seedu/address/logic/parser/UnarchiveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huekoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"huekoh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.commands.UnarchiveCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"huekoh"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"huekoh"},"content":" * Parses input arguments and creates a new ArchiveCommand object","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"huekoh"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"huekoh"},"content":"public class UnarchiveCommandParser implements Parser\u003cUnarchiveCommand\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"huekoh"},"content":"     * Parses the given {@code String} of arguments in the context of the ArchiveCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"huekoh"},"content":"     * and returns an ArchiveCommand object for execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"    public UnarchiveCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"            Phone number \u003d ParserUtil.parsePhone(args);","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"huekoh"},"content":"            return new UnarchiveCommand(number);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"huekoh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"huekoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnarchiveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"huekoh"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"huekoh":29}},{"path":"src/main/java/seedu/address/logic/parser/UnscheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.commands.UnscheduleCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":" * Parses input arguments and creates a new UnscheduleCommand object","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"public class UnscheduleCommandParser implements Parser\u003cUnscheduleCommand\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"     * and returns a ScheduleCommand object for execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    public UnscheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"        String[] tokens \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnscheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        Phone phoneNumber \u003d ParserUtil.parsePhone(tokens[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d ParserUtil.parseDate(tokens[1]);","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"        return new UnscheduleCommand(phoneNumber, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":31}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"    private final Schedule schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"        schedule \u003d new ScheduleManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"huekoh"},"content":"    public void archivePerson(Person target, Person archivedPerson) {","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"huekoh"},"content":"        persons.archive(target, archivedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"huekoh"},"content":"    public void unarchivePerson(Person target, Person unarchivedPerson) {","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"huekoh"},"content":"        persons.unarchive(target, unarchivedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":123,"author":{"gitId":"1rbg"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"1rbg"},"content":"        return schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"1rbg":8,"huekoh":8,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.PayrollWrapper;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"huekoh"},"content":"    /** {@code Predicate} that evaluates to true when the person is not archived */","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_UNARCHIVED_PERSONS \u003d person -\u003e !person.getArchiveStatus().getArchiveStatus();","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"    /** {@code Predicate} that evaluates to true when the person is archived */","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"huekoh"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_ARCHIVED_PERSONS \u003d person -\u003e person.getArchiveStatus().getArchiveStatus();","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"     * Replaces schedule data with the data in {@code schedule}.","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"    void setSchedule(Schedule schedule);","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"    /** Returns the Schedule */","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"    Schedule getSchedule();","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"     * Returns the schedule dates.","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"1rbg"},"content":"    Set\u003cScheduleDate\u003e getScheduleDates();","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"1rbg"},"content":"     * Adds {@code person} on {@code date} to the {@code Schedule} in the model.","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"1rbg"},"content":"    void addPersonToSchedule(Person person, LocalDate date);","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"1rbg"},"content":"     * Removes {@code person} on {@code date} from the {@code Schedule} in the model.","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"1rbg"},"content":"    void removePersonFromSchedule(Person person, LocalDate date);","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"huekoh"},"content":"    /** Returns an unmodifiable view of the filtered un-archived person list */","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"huekoh"},"content":"    ObservableList\u003cPerson\u003e getFilteredUnarchivedPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"huekoh"},"content":"    /** Returns an unmodifiable view of the filtered archived person list */","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"huekoh"},"content":"    ObservableList\u003cPerson\u003e getFilteredArchivedPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"h4ow3i"},"content":"     * Returns a person with the given phone number.","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"h4ow3i"},"content":"     * Returns {@code null} if no person with the given phone number is found.","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"h4ow3i"},"content":"    Person getPersonByPhoneNumber(Phone phoneNumber);","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"h4ow3i"},"content":"     * Updates the details of the specified person in the address book with the details of the updated person.","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"h4ow3i"},"content":"     * @param personToUpdate The person to be updated.","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"h4ow3i"},"content":"    void updatePerson(Person personToUpdate);","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"huekoh"},"content":"    void archivePerson(Person personToArchive, Person archivedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"huekoh"},"content":"    void unarchivePerson(Person personToUnarchive, Person unarchivedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"jxunze"},"content":"     * Generates the payroll for the specified period.","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"jxunze"},"content":"     * @param startDate The start date of the period.","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"jxunze"},"content":"     * @param endDate The end date of the period.","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"jxunze"},"content":"    void generatePayroll(LocalDate startDate, LocalDate endDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"jxunze"},"content":"     * Returns the payroll list.","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"jxunze"},"content":"    ObservableList\u003cPayrollWrapper\u003e getPayrollList();","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"1rbg":27,"jxunze":12,"h4ow3i":13,"huekoh":16,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.PayrollWrapper;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"    private final Schedule schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"    private final ObservableList\u003cPayrollWrapper\u003e payrolls;","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, Schedule schedule) {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"        requireAllNonNull(addressBook, userPrefs, schedule);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"                + \" and schedule \" + schedule);","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"        payrolls \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"        this(new AddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"huekoh"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_UNARCHIVED_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"huekoh"},"content":"    public void archivePerson(Person target, Person archivedPerson) {","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"huekoh"},"content":"        addressBook.archivePerson(target, archivedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"huekoh"},"content":"    public void unarchivePerson(Person target, Person unarchivedPerson) {","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"huekoh"},"content":"        addressBook.unarchivePerson(target, unarchivedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"1rbg"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Schedule \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"1rbg"},"content":"    public void setSchedule(Schedule schedule) {","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"1rbg"},"content":"        this.schedule.resetData(schedule);","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"1rbg"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"1rbg"},"content":"        return schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"1rbg"},"content":"    public Set\u003cScheduleDate\u003e getScheduleDates() {","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"1rbg"},"content":"        return schedule.getScheduleDates();","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"1rbg"},"content":"    public void addPersonToSchedule(Person person, LocalDate date) {","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"1rbg"},"content":"        requireAllNonNull(person, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"1rbg"},"content":"        schedule.addPerson(person, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"1rbg"},"content":"    public void removePersonFromSchedule(Person person, LocalDate date) {","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"1rbg"},"content":"        requireAllNonNull(person, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"1rbg"},"content":"        schedule.deletePerson(person, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"jxunze"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Payroll  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"jxunze"},"content":"    public void generatePayroll(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"jxunze"},"content":"        requireAllNonNull(startDate, endDate);","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"jxunze"},"content":"        payrolls.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"jxunze"},"content":"        List\u003cPayrollWrapper\u003e newPayrolls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"jxunze"},"content":"        Map\u003cPerson, Double\u003e hoursWorked \u003d schedule.getHoursWorked(startDate, endDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"jxunze"},"content":"        for (Map.Entry\u003cPerson, Double\u003e entry : hoursWorked.entrySet()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"jxunze"},"content":"            newPayrolls.add(new PayrollWrapper(entry.getKey(), entry.getValue()));","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"jxunze"},"content":"        payrolls.setAll(newPayrolls);","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"jxunze"},"content":"    public ObservableList\u003cPayrollWrapper\u003e getPayrollList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"jxunze"},"content":"        return payrolls;","lastModifiedDate":"2024-03-30"},{"lineNumber":186,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":187,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":199,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"huekoh"},"content":"     *  Returns an unmodifiable view of the list of unarchived {@code Person} backed by the internal list of","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"huekoh"},"content":"     * {@code addressBook}","lastModifiedDate":"2024-04-01"},{"lineNumber":202,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":204,"author":{"gitId":"huekoh"},"content":"    public ObservableList\u003cPerson\u003e getFilteredUnarchivedPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":205,"author":{"gitId":"huekoh"},"content":"        this.updateFilteredPersonList(PREDICATE_SHOW_ALL_UNARCHIVED_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":206,"author":{"gitId":"huekoh"},"content":"        return filteredPersons;","lastModifiedDate":"2024-04-01"},{"lineNumber":207,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":208,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":209,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"huekoh"},"content":"     * Returns an unmodifiable view of the list of archived {@code Person} backed by the internal list of","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"huekoh"},"content":"     * {@code addressBook}","lastModifiedDate":"2024-04-01"},{"lineNumber":212,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":214,"author":{"gitId":"huekoh"},"content":"    public ObservableList\u003cPerson\u003e getFilteredArchivedPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":215,"author":{"gitId":"huekoh"},"content":"        this.updateFilteredPersonList(PREDICATE_SHOW_ALL_ARCHIVED_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":216,"author":{"gitId":"huekoh"},"content":"        return filteredPersons;","lastModifiedDate":"2024-04-01"},{"lineNumber":217,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":218,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":243,"author":{"gitId":"h4ow3i"},"content":"    public Person getPersonByPhoneNumber(Phone phoneNumber) {","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"h4ow3i"},"content":"        requireNonNull(phoneNumber);","lastModifiedDate":"2024-03-17"},{"lineNumber":245,"author":{"gitId":"h4ow3i"},"content":"        for (Person person : addressBook.getPersonList()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":246,"author":{"gitId":"h4ow3i"},"content":"            if (person.getPhone().equals(phoneNumber)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":247,"author":{"gitId":"h4ow3i"},"content":"                return person;","lastModifiedDate":"2024-03-17"},{"lineNumber":248,"author":{"gitId":"h4ow3i"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":249,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":250,"author":{"gitId":"h4ow3i"},"content":"        return null; // Return null if the person is not found","lastModifiedDate":"2024-03-17"},{"lineNumber":251,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":252,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":253,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":254,"author":{"gitId":"h4ow3i"},"content":"    public void updatePerson(Person personToUpdate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":255,"author":{"gitId":"h4ow3i"},"content":"        requireNonNull(personToUpdate);","lastModifiedDate":"2024-03-17"},{"lineNumber":256,"author":{"gitId":"h4ow3i"},"content":"        addressBook.setPerson(personToUpdate, personToUpdate);","lastModifiedDate":"2024-03-17"},{"lineNumber":257,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":258,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"1rbg":40,"jxunze":28,"h4ow3i":18,"huekoh":31,"-":142}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"    Path getArchiveBookFilePath();","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"1rbg":3,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"    private Path scheduleFilePath \u003d Paths.get(\"data\", \"schedule.json\");","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"    private Path archiveBookFilePath \u003d Paths.get(\"data\", \"archivebook.json\");","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"        setScheduleFilePath(newUserPrefs.getScheduleFilePath());","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"huekoh"},"content":"    public Path getArchiveBookFilePath() {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"huekoh"},"content":"        return archiveBookFilePath;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"        return scheduleFilePath;","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"    public void setScheduleFilePath(Path scheduleFilePath) {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"        requireNonNull(scheduleFilePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"        this.scheduleFilePath \u003d scheduleFilePath;","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"jxunze"},"content":"        sb.append(\"Gui Settings : \").append(guiSettings);","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"jxunze"},"content":"        sb.append(\"\\nLocal data file location : \").append(addressBookFilePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"1rbg":11,"jxunze":2,"huekoh":5,"-":86}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values\";","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"    public static final String VALIDATION_REGEX \u003d \"^.+$\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jxunze":1,"-":63,"martinng01":1}},{"path":"src/main/java/seedu/address/model/person/ArchiveStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huekoh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"huekoh"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"huekoh"},"content":" * Represents the archive status of a person in the contact book.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"huekoh"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"public class ArchiveStatus {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"huekoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Archive status can only be \u00270\u0027 for not archived or \"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"huekoh"},"content":"        + \"\u00271\u0027 for archived.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"huekoh"},"content":"    private boolean isArchived;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"huekoh"},"content":"     * Constructor for ArchiveStatus that initializes the archive status to not archived.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"huekoh"},"content":"    public ArchiveStatus(boolean isArchived) {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"huekoh"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"    public boolean getArchiveStatus() {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"        return isArchived;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"     * Sets the archive status of a person to be archived.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"    public void setArchiveStatusTrue() {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"huekoh"},"content":"        this.isArchived \u003d true;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"huekoh"},"content":"     * Sets the archive status of a person to be not archived.","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"    public void setArchiveStatusFalse() {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"huekoh"},"content":"        this.isArchived \u003d false;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"huekoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"huekoh"},"content":"        return isArchived ? \"Archived\" : \"Not Archived\";","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"huekoh"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"huekoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"huekoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"huekoh"},"content":"            || (other instanceof ArchiveStatus // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"huekoh"},"content":"            \u0026\u0026 isArchived \u003d\u003d ((ArchiveStatus) other).isArchived); // state check","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"huekoh"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"huekoh":48}},{"path":"src/main/java/seedu/address/model/person/BankDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * Represents a Person\u0027s bank details in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBankAccount(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"public class BankDetails {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"huekoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Bank details should be in this format: \"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"huekoh"},"content":"        + \"\u003cbank name\u003e \u003caccount number\u003e \\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"        + \"Accepted banks and corresponding digit length: OCBC {7}, POSB {9}, UOB {10}, DBS {10}, \"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"huekoh"},"content":"        + \"Standard Chartered {10}, HSBC {any length}, Others {any length}\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"huekoh"},"content":"        + \"Examples: -b posb 1234567890/ -b hsbc 172002492/ -b other maybank 712834957521\";","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"    public static final String DBS_UOB_STANDARD_REGEX \u003d \"(?:dbs|uob|standard chartered)\\\\s+\\\\d{10}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"huekoh"},"content":"    public static final String POSB_REGEX \u003d \"posb\\\\s+\\\\d{9}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"    public static final String OCBC_REGEX \u003d \"ocbc\\\\s+\\\\d{7}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"    public static final String HSBC_REGEX \u003d \"hsbc\\\\s+\\\\d+\";","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"    public static final String OTHERS_REGEX \u003d \"other\\\\s+\\\\w+\\\\s+\\\\d+\";","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"huekoh"},"content":"    public static final String BLANK_REGEX \u003d \"\\\\s*\";","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"huekoh"},"content":"    public static final String VALIDATION_REGEX \u003d DBS_UOB_STANDARD_REGEX + \"|\"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"        + POSB_REGEX + \"|\" + OCBC_REGEX + \"|\" + HSBC_REGEX + \"|\" + OTHERS_REGEX + \"|\" + BLANK_REGEX;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"    public final String value;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"     * Constructs an {@code BankDetails}.","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"     * @param bankDetails A valid bank account.","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    public BankDetails(String bankDetails) {","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        requireNonNull(bankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        checkArgument(isValidBankAccount(bankDetails), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        value \u003d bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"     * Returns true if a given string is a valid bank account.","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"    public static boolean isValidBankAccount(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        return value;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        if (!(other instanceof BankDetails)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"        BankDetails otherBankDetails \u003d (BankDetails) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        return value.equals(otherBankDetails.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"huekoh":15,"martinng01":58}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?! )[a-zA-Z0-9 ]*$\";","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    public final String value;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        value \u003d name;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        return value;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        return value.equals(otherName.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":61,"martinng01":6}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().value, keyword));","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":43,"martinng01":1}},{"path":"src/main/java/seedu/address/model/person/PayRate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":" * Represents a person\u0027s pay rate in the contact book","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":" * A pay rate is represented as a floating-point number.","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":" * Pay rates should only contain numeric values.","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":" * Guarantees: immutable","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"public class PayRate {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"            \"Pay rate should only contain numbers\";","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"    public final double value;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a {@code PayRate} with the specified pay rate value.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"     * @param payRate The pay rate value.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"    public PayRate(double payRate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"        this.value \u003d payRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    public double getPayRate() {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"        return value;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"     * Returns a string representation of the pay rate.","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"     * @return A string representing the pay rate.","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        return \"Pay Rate: $ \" + value;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"     * Checks if the given pay rate string is valid.","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"     * @param payRate The pay rate string to be checked for validity.","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"     * @return {@code true} if the pay rate string is valid, {@code false} otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"    public static boolean isValidPayRate(String payRate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"        if (payRate \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"            double rate \u003d Double.parseDouble(payRate);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"            return rate \u003e 0;","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"h4ow3i"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"h4ow3i"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"h4ow3i"},"content":"     * Checks if this pay rate is equal to another object.","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"h4ow3i"},"content":"     * @return {@code true} if the objects are equal, {@code false} otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"h4ow3i"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"h4ow3i"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"h4ow3i"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"h4ow3i"},"content":"        if (!(other instanceof PayRate)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"h4ow3i"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"h4ow3i"},"content":"        PayRate otherPayRate \u003d (PayRate) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"h4ow3i"},"content":"        return value \u003d\u003d otherPayRate.value;","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"h4ow3i"},"content":"     * Returns the hash code of the pay rate.","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"h4ow3i"},"content":"     * @return The hash code of the pay rate.","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"h4ow3i"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"h4ow3i"},"content":"        return Objects.hash(value);","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"h4ow3i":88}},{"path":"src/main/java/seedu/address/model/person/PayrollWrapper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":" * Represents a Person\u0027s payroll in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"public class PayrollWrapper {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"    private final Person person;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"    private double hoursWorked \u003d 0;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"     * Creates a PayrollWrapper with the given {@code Person} and hours worked.","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    public PayrollWrapper(Person person, double hoursWorked) {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"        this.hoursWorked \u003d hoursWorked;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    public String getName() {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"        return person.getName().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"    public double getHoursWorked() {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"        return hoursWorked;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"    public double getPay() {","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"        return hoursWorked * person.getPayRate().value;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"    public Person getPerson() {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"        return person;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"        return person.hashCode();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"        if (!(other instanceof PayrollWrapper)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"jxunze"},"content":"        PayrollWrapper otherPayrollWrapper \u003d (PayrollWrapper) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"        return otherPayrollWrapper.person.equals(this.person);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"jxunze"},"content":"        return person.toString() + \" Hours Worked: \" + hoursWorked;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jxunze":56}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    private final Name firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    private final Name lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    private final Sex sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    private final PayRate payRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"    private final BankDetails bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"    private WorkHours hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"huekoh"},"content":"    private ArchiveStatus archiveStatus;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    public Person(Name firstName, Name lastName, Phone phone, Sex sex,","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"                  PayRate payRate, Address address,","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"huekoh"},"content":"                  BankDetails bankDetails, WorkHours hoursWorked, Set\u003cTag\u003e tags, ArchiveStatus archiveStatus) {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        requireAllNonNull(firstName, lastName, phone, address, bankDetails, tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        this.firstName \u003d firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        this.lastName \u003d lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"        this.payRate \u003d payRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        this.bankDetails \u003d bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"        this.hoursWorked \u003d hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"huekoh"},"content":"        this.archiveStatus \u003d archiveStatus;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        return new Name(firstName + \" \" + lastName);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    public Name getFirstName() {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        return firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"    public Name getLastName() {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"        return lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"    public Sex getSex() {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"        return sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"h4ow3i"},"content":"    public PayRate getPayRate() {","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"h4ow3i"},"content":"        return payRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"    public BankDetails getBankDetails() {","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"        return bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"h4ow3i"},"content":"    public WorkHours getWorkHours() {","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"h4ow3i"},"content":"        return hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"huekoh"},"content":"    public ArchiveStatus getArchiveStatus() {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"huekoh"},"content":"        return archiveStatus;","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"h4ow3i"},"content":"    public void setHoursWorked(WorkHours hoursWorked) {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"h4ow3i"},"content":"        this.hoursWorked \u003d hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"martinng01"},"content":"            \u0026\u0026 otherPerson.phone.equals(phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"        return getName().equals(otherPerson.getName())","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"martinng01"},"content":"            \u0026\u0026 sex.equals(otherPerson.sex)","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"h4ow3i"},"content":"            \u0026\u0026 payRate.equals(otherPerson.payRate)","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"martinng01"},"content":"            \u0026\u0026 bankDetails.equals(otherPerson.bankDetails)","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"huekoh"},"content":"            \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"huekoh"},"content":"            \u0026\u0026 archiveStatus.equals(otherPerson.archiveStatus);","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"h4ow3i"},"content":"        return Objects.hash(firstName, lastName, phone, sex, payRate, address, bankDetails,","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"martinng01"},"content":"            tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"martinng01"},"content":"            .add(\"firstName\", firstName)","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"martinng01"},"content":"            .add(\"lastName\", lastName)","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"martinng01"},"content":"            .add(\"sex\", sex)","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"h4ow3i"},"content":"            .add(\"payRate\", payRate)","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"martinng01"},"content":"            .add(\"bankDetails\", bankDetails)","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"huekoh"},"content":"            .add(\"archiveStatus\", archiveStatus)","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"h4ow3i":18,"huekoh":10,"-":101,"martinng01":36}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"            \"Phone numbers should only contain numbers, and it should be only 8 digits long\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{8}$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":59,"martinng01":2}},{"path":"src/main/java/seedu/address/model/person/Sex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * Represents a Person\u0027s sex in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSex(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"public class Sex {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        \"Sex should only be either \u0027m\u0027 or \u0027f\u0027.\";","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[mf]$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public final String value;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * Constructs an {@code Sex}.","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * @param sex A valid sex.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public Sex(String sex) {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        requireNonNull(sex);","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        checkArgument(isValidSex(sex), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        value \u003d sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     * Returns true if a given string is a valid sex.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    public static boolean isValidSex(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        return value;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        if (!(other instanceof Sex)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        Sex otherSex \u003d (Sex) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        return value.equals(otherSex.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"martinng01":61}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"huekoh"},"content":"     * Archives the equivalent person from the list.","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"huekoh"},"content":"     * The person must exist in the list.","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"huekoh"},"content":"    public void archive(Person target, Person archivedPerson) {","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"huekoh"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"huekoh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"huekoh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"huekoh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"huekoh"},"content":"        if (!target.isSamePerson(archivedPerson) \u0026\u0026 contains(archivedPerson)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"huekoh"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"huekoh"},"content":"        internalList.set(index, archivedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"huekoh"},"content":"     * Unarchives the equivalent person from the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"huekoh"},"content":"     * The person must exist in the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"huekoh"},"content":"    public void unarchive(Person target, Person unarchivedPerson) {","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"huekoh"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"huekoh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"huekoh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"huekoh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"huekoh"},"content":"        if (!target.isSamePerson(unarchivedPerson) \u0026\u0026 contains(unarchivedPerson)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"huekoh"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"huekoh"},"content":"        internalList.set(index, unarchivedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"huekoh"},"content":"     * Returns an ObservableList of unarchived persons.","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"huekoh"},"content":"    public ObservableList\u003cPerson\u003e getUnarchivedPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"huekoh"},"content":"        ObservableList\u003cPerson\u003e unarchivedPersons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"huekoh"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"huekoh"},"content":"            if (!person.getArchiveStatus().getArchiveStatus()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"huekoh"},"content":"                unarchivedPersons.add(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"huekoh"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"huekoh"},"content":"        return FXCollections.unmodifiableObservableList(unarchivedPersons);","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"huekoh"},"content":"     * Returns an ObservableList of archived persons.","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"huekoh"},"content":"    public ObservableList\u003cPerson\u003e getArchivedPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"huekoh"},"content":"        ObservableList\u003cPerson\u003e archivedPersons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"huekoh"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"huekoh"},"content":"            if (person.getArchiveStatus().getArchiveStatus()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"huekoh"},"content":"                archivedPersons.add(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"huekoh"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"huekoh"},"content":"        return FXCollections.unmodifiableObservableList(archivedPersons);","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"huekoh":64,"-":150}},{"path":"src/main/java/seedu/address/model/person/WorkHours.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":" * Represents the work hours of a person.","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"public class WorkHours {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Hours clocked can only contain numbers.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"    public final int hoursWorked;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"     * Constructs a {@code WorkHours} object with zero hours worked.","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"    public WorkHours() {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"        this.hoursWorked \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"    public WorkHours(int hoursWorked) {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"        this.hoursWorked \u003d hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"     * Returns the number of hours worked.","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"     * @return The number of hours worked.","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"    public int getHoursWorked() {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"        return hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"        WorkHours workHours \u003d (WorkHours) o;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        return hoursWorked \u003d\u003d workHours.hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"h4ow3i"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"h4ow3i"},"content":"        return Objects.hash(hoursWorked);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"h4ow3i"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"        return hoursWorked + \" hours clocked\";","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"h4ow3i":54}},{"path":"src/main/java/seedu/address/model/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":" * Represents a Schedule that maps lists of Persons to dates.","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"public interface Schedule {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"     * Returns the schedule as a Map.","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    Set\u003cScheduleDate\u003e getScheduleDates();","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"     * Adds a Person to the schedule on the given date.","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"    void addPerson(Person person, LocalDate date);","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"     * Deletes a Person from the schedule on the given date.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    void deletePerson(Person person, LocalDate date);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"     * Adds a ScheduleDate to the schedule.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"    void addScheduleDate(ScheduleDate scheduleDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"     * Resets the existing data of this {@code Schedule} with {@code newData}.","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"    void resetData(Schedule newData);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"     * Returns the number of hours worked by each person in the schedule between the given dates.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"    Map\u003cPerson, Double\u003e getHoursWorked(LocalDate startDate, LocalDate endDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":36,"jxunze":7}},{"path":"src/main/java/seedu/address/model/schedule/ScheduleDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":" * Represents a date in the schedule.","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"public class ScheduleDate {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"    private final List\u003cPerson\u003e persons;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"     * Constructs a {@code ScheduleDate} with the given {@code LocalDate}.","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"    public ScheduleDate(LocalDate date) {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"        this.persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"     * Constructs a {@code ScheduleDate} with the given {@code LocalDate} and {@code List\u003cPerson\u003e}.","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"        return date;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"     * Returns the list of people working on this date.","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    public List\u003cPerson\u003e getPersons() {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"        return persons;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"     * Adds someone working on this date.","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"        persons.add(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"     * Removes someone working on this date.","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"    public void removePerson(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"        persons.remove(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"     * Returns true if the person is working on this date.","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"        return persons.contains(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"        return date.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"                || (other instanceof ScheduleDate // instanceof handles nulls","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"                \u0026\u0026 date.equals(((ScheduleDate) other).date)) // state check","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"                \u0026\u0026 persons.equals(((ScheduleDate) other).persons);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":71}},{"path":"src/main/java/seedu/address/model/schedule/ScheduleManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":" * Represents a Schedule that maps lists of Persons to dates.","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"public class ScheduleManager implements Schedule {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"    // The schedule is a set of ScheduleDates.","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    private final Set\u003cScheduleDate\u003e schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"     * Creates a MonthSchedule with an empty schedule.","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"    public ScheduleManager() {","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"        this.schedule \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    public Set\u003cScheduleDate\u003e getScheduleDates() {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        return schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"    public void addPerson(Person person, LocalDate date) {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"        for (ScheduleDate scheduleDate : schedule) {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"            if (scheduleDate.getDate().equals(date)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"                if (!scheduleDate.hasPerson(person)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"                    scheduleDate.addPerson(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"                return;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"        ScheduleDate newScheduleDate \u003d new ScheduleDate(date);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"        newScheduleDate.addPerson(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"        schedule.add(newScheduleDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"     * Adds a ScheduleDate to the schedule.","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"     * Used only by JsonAdaptedSchedule to convert JSON data to a Schedule,","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"     * so there is no need to check for duplicates.","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"     * @param scheduleDate the ScheduleDate to add","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"    public void addScheduleDate(ScheduleDate scheduleDate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"        schedule.add(scheduleDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"    public void deletePerson(Person person, LocalDate date) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"        for (ScheduleDate scheduleDate : schedule) {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"            if (scheduleDate.getDate().equals(date)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"                if (scheduleDate.hasPerson(person)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"                    scheduleDate.removePerson(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"                return;","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"jxunze"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"jxunze"},"content":"    public Map\u003cPerson, Double\u003e getHoursWorked(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"jxunze"},"content":"        Map\u003cPerson, Double\u003e hoursWorked \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"jxunze"},"content":"        for (ScheduleDate scheduleDate : schedule) {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"jxunze"},"content":"            if (isAfterOrEqual(scheduleDate.getDate(), startDate) \u0026\u0026 isBeforeOrEqual(scheduleDate.getDate(), endDate)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"jxunze"},"content":"                for (Person person : scheduleDate.getPersons()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"jxunze"},"content":"                    if (!hoursWorked.containsKey(person)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"jxunze"},"content":"                        hoursWorked.put(person, 0.0);","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"jxunze"},"content":"                    }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"jxunze"},"content":"                    hoursWorked.put(person, hoursWorked.get(person) + 8.0);","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"jxunze"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"jxunze"},"content":"        return hoursWorked;","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"1rbg"},"content":"    public void resetData(Schedule newData) {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"1rbg"},"content":"        schedule.clear();","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"1rbg"},"content":"        if (newData !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"1rbg"},"content":"            schedule.addAll(newData.getScheduleDates());","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"1rbg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"1rbg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"1rbg"},"content":"            || (other instanceof ScheduleManager // instanceof handles nulls","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"1rbg"},"content":"            \u0026\u0026 schedule.equals(((ScheduleManager) other).schedule));","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"jxunze"},"content":"    private boolean isAfterOrEqual(LocalDate date1, LocalDate date2) {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"jxunze"},"content":"        if (date1 \u003d\u003d null || date2 \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"jxunze"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"jxunze"},"content":"        return date1.isAfter(date2) || date1.isEqual(date2);","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"jxunze"},"content":"    private boolean isBeforeOrEqual(LocalDate date1, LocalDate date2) {","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"jxunze"},"content":"        if (date1 \u003d\u003d null || date2 \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"jxunze"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"jxunze"},"content":"        return date1.isBefore(date2) || date1.isEqual(date2);","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":80,"jxunze":31}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.ArchiveStatus;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.WorkHours;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"huekoh"},"content":"            new Person(","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"huekoh"},"content":"                new Name(\"Alex\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"huekoh"},"content":"                new Name(\"Yeoh\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"huekoh"},"content":"                new Phone(\"87438807\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"                new Sex(\"m\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"huekoh"},"content":"                new PayRate(14.5),","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"                new BankDetails(\"dbs 1234567890\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"                new WorkHours(),","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"huekoh"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"huekoh"},"content":"                new ArchiveStatus(false)),","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"huekoh"},"content":"            new Person(","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"huekoh"},"content":"                new Name(\"Bernice\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"huekoh"},"content":"                new Name(\"Yu\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"huekoh"},"content":"                new Phone(\"99272758\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"huekoh"},"content":"                new Sex(\"f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"huekoh"},"content":"                new PayRate(16),","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"                new BankDetails(\"ocbc 1234567\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"huekoh"},"content":"                new WorkHours(),","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"huekoh"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"huekoh"},"content":"                new ArchiveStatus(false)),","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"huekoh"},"content":"            new Person(","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"huekoh"},"content":"                new Name(\"Charlotte\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"huekoh"},"content":"                new Name(\"Oliveiro\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"huekoh"},"content":"                new Phone(\"93210283\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"huekoh"},"content":"                new Sex(\"f\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"huekoh"},"content":"                new PayRate(20),","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"                new BankDetails(\"hsbc 0987654321\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"huekoh"},"content":"                new WorkHours(),","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"huekoh"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"huekoh"},"content":"                new ArchiveStatus(false)),","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"huekoh"},"content":"            new Person(","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"huekoh"},"content":"                new Name(\"David\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"huekoh"},"content":"                new Name(\"Li\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"huekoh"},"content":"                new Phone(\"91031282\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"huekoh"},"content":"                new Sex(\"m\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"huekoh"},"content":"                new PayRate(18.5),","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"                new BankDetails(\"uob 8888777700\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"huekoh"},"content":"                new WorkHours(),","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"huekoh"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"huekoh"},"content":"                new ArchiveStatus(false)),","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"huekoh"},"content":"            new Person(","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"huekoh"},"content":"                new Name(\"Irfan\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"huekoh"},"content":"                new Name(\"Ibrahim\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"huekoh"},"content":"                new Phone(\"92492021\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"huekoh"},"content":"                new Sex(\"m\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"huekoh"},"content":"                new PayRate(16.5),","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"1rbg"},"content":"                new BankDetails(\"posb 369369369\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"huekoh"},"content":"                new WorkHours(),","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"huekoh"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"huekoh"},"content":"                new ArchiveStatus(false)),","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"huekoh"},"content":"            new Person(","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"huekoh"},"content":"                new Name(\"Roy\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"huekoh"},"content":"                new Name(\"Balakrishnan\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"huekoh"},"content":"                new Phone(\"92624417\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"huekoh"},"content":"                new Sex(\"m\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"huekoh"},"content":"                new PayRate(10),","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"1rbg"},"content":"                new BankDetails(\"ocbc 7654321\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"huekoh"},"content":"                new WorkHours(),","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"huekoh"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"huekoh"},"content":"                new ArchiveStatus(false))","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":106,"author":{"gitId":"1rbg"},"content":"    public static Schedule getSampleSchedule() {","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"1rbg"},"content":"        Schedule sampleSchedule \u003d new ScheduleManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"1rbg"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"1rbg"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"1rbg"},"content":"            if (count % 3 \u003d\u003d 0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"1rbg"},"content":"                date \u003d date.plusDays(1);","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"1rbg"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"1rbg"},"content":"            sampleSchedule.addPerson(samplePerson, date);","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"1rbg"},"content":"        return sampleSchedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"jxunze"},"content":"        return Arrays.stream(strings).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"1rbg":22,"jxunze":1,"h4ow3i":4,"huekoh":55,"-":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.ArchiveStatus;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.WorkHours;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"    private final String firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    private final String lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    private final String sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"    private final double payRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    private final String bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"    private final int workHours;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"huekoh"},"content":"    private final boolean archiveStatus;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"firstName\") String firstName,","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"lastName\") String lastName,","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"sex\") String sex,","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"h4ow3i"},"content":"                             @JsonProperty(\"payRate\") double payRate,","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"bankDetails\") String bankDetails,","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"h4ow3i"},"content":"                             @JsonProperty(\"workHours\") int workHours,","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"huekoh"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"huekoh"},"content":"                             @JsonProperty(\"archiveStatus\") boolean archiveStatus) {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        this.firstName \u003d firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        this.lastName \u003d lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"        this.payRate \u003d payRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        this.bankDetails \u003d bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"        this.workHours \u003d workHours;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"huekoh"},"content":"        this.archiveStatus \u003d archiveStatus;","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"        firstName \u003d source.getFirstName().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"        lastName \u003d source.getLastName().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        sex \u003d source.getSex().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"h4ow3i"},"content":"        payRate \u003d source.getPayRate().getPayRate();","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"        bankDetails \u003d source.getBankDetails().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"h4ow3i"},"content":"        workHours \u003d source.getWorkHours().getHoursWorked();","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"huekoh"},"content":"        archiveStatus \u003d source.getArchiveStatus().getArchiveStatus();","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"        if (firstName \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"martinng01"},"content":"        if (!Name.isValidName(firstName)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"martinng01"},"content":"        final Name modelFirstName \u003d new Name(firstName);","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"        if (lastName \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"        if (!Name.isValidName(lastName)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"        final Name modelLastName \u003d new Name(lastName);","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"        if (sex \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Sex.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"        if (!Sex.isValidSex(sex)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"        final Sex modelSex \u003d new Sex(sex);","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"h4ow3i"},"content":"        final PayRate modelPayRate \u003d new PayRate(payRate);","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"        if (bankDetails \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"martinng01"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, BankDetails.class.getSimpleName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"martinng01"},"content":"        if (!BankDetails.isValidBankAccount(bankDetails)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(BankDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"martinng01"},"content":"        final BankDetails modelBankDetails \u003d new BankDetails(bankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"h4ow3i"},"content":"        final WorkHours modelWorkHours \u003d new WorkHours(workHours);","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"huekoh"},"content":"        final ArchiveStatus modelArchiveStatus \u003d new ArchiveStatus(archiveStatus);","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"h4ow3i"},"content":"        return new Person(modelFirstName, modelLastName, modelPhone, modelSex, modelPayRate,","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"martinng01"},"content":"            modelAddress,","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"huekoh"},"content":"            modelBankDetails, modelWorkHours, modelTags, modelArchiveStatus);","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"h4ow3i":12,"huekoh":14,"-":90,"martinng01":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedScheduleDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":" * Jackson-friendly version of {@link ScheduleDate}.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"class JsonAdaptedScheduleDate {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"    private final String date;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"     * Constructs a {@code JsonAdaptedScheduleDate} with the given person details.","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    public JsonAdaptedScheduleDate(@JsonProperty(\"date\") String date,","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"                                   @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"        if (persons !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"            this.persons.addAll(persons);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"     * Converts a given {@code ScheduleDate} into this class for Jackson use.","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"    public JsonAdaptedScheduleDate(ScheduleDate source) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"        persons.addAll(source.getPersons().stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"            .map(JsonAdaptedPerson::new)","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code ScheduleDate} object.","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"    public ScheduleDate toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"        final List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"        for (JsonAdaptedPerson person : this.persons) {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"            persons.add(person.toModelType());","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"        final LocalDate modelDate \u003d LocalDate.parse(date);","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"        ScheduleDate scheduleDate \u003d new ScheduleDate(modelDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"        for (Person person : persons) {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"            scheduleDate.addPerson(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"        return scheduleDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":62}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"huekoh"},"content":"    public Path getArchiveBookFilePath() {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"huekoh"},"content":"        return filePath;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"huekoh":4,"-":80}},{"path":"src/main/java/seedu/address/storage/JsonScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"public class JsonScheduleStorage implements ScheduleStorage {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonScheduleStorage.class);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"    private Path filePath;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    public JsonScheduleStorage(Path filePath) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"        return filePath;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"    public Optional\u003cSchedule\u003e readSchedule() throws DataLoadingException {","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"        return readSchedule(filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"     * Similar to {@link #readSchedule()}.","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"    public Optional\u003cSchedule\u003e readSchedule(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"        Optional\u003cJsonSerializableSchedule\u003e jsonSchedule \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"                filePath, JsonSerializableSchedule.class);","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"        if (!jsonSchedule.isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"            return Optional.of(jsonSchedule.get().toModelType());","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"    public void saveSchedule(Schedule schedule) throws IOException {","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"        saveSchedule(schedule, filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"     * Similar to {@link #saveSchedule(Schedule)}.","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"    public void saveSchedule(Schedule schedule, Path filePath) throws IOException {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"1rbg"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSchedule(schedule), filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":" * An Immutable Schedule that is serializable to JSON format.","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"@JsonRootName(value \u003d \"schedule\")","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"class JsonSerializableSchedule {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    private final List\u003cJsonAdaptedScheduleDate\u003e scheduleDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    public JsonSerializableSchedule(@JsonProperty(\"scheduleDates\") List\u003cJsonAdaptedScheduleDate\u003e scheduleDates) {","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"        this.scheduleDates.addAll(scheduleDates);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"    public JsonSerializableSchedule(Schedule source) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"        scheduleDates.addAll(source.getScheduleDates().stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"                .map(JsonAdaptedScheduleDate::new)","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"    public Schedule toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"        Schedule schedule \u003d new ScheduleManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"        for (JsonAdaptedScheduleDate jsonAdaptedScheduleDate : scheduleDates) {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"            ScheduleDate scheduleDate \u003d jsonAdaptedScheduleDate.toModelType();","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"            schedule.addScheduleDate(scheduleDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"        return schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":56}},{"path":"src/main/java/seedu/address/storage/ScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":" * Represents a storage for {@link seedu.address.model.schedule.Schedule}.","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"public interface ScheduleStorage {","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"     * Returns Schedule data as a {@link Schedule}.","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    Optional\u003cSchedule\u003e readSchedule() throws DataLoadingException;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"     * @see #getScheduleFilePath()","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"    Optional\u003cSchedule\u003e readSchedule(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"     * Saves the given {@link Schedule} to the storage.","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"     * @param schedule cannot be null.","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"    void saveSchedule(Schedule schedule) throws IOException;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"     * @see #saveSchedule(Schedule)","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"    void saveSchedule(Schedule schedule, Path filePath) throws IOException;","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"1rbg":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, ScheduleStorage {","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"    Optional\u003cSchedule\u003e readSchedule() throws DataLoadingException;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"    void saveSchedule(Schedule schedule) throws IOException;","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"1rbg":10,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"    private ScheduleStorage scheduleStorage;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}, {@code UserPrefStorage},","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"     * and {@code ScheduleStorage}.","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"                           ScheduleStorage scheduleStorage) {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"        this.scheduleStorage \u003d scheduleStorage;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"1rbg"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Schedule methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"1rbg"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"1rbg"},"content":"        return scheduleStorage.getScheduleFilePath();","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"1rbg"},"content":"    public Optional\u003cSchedule\u003e readSchedule() throws DataLoadingException {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"1rbg"},"content":"        return readSchedule(scheduleStorage.getScheduleFilePath());","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"1rbg"},"content":"    public Optional\u003cSchedule\u003e readSchedule(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"1rbg"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"1rbg"},"content":"        return scheduleStorage.readSchedule(filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"1rbg"},"content":"    public void saveSchedule(Schedule schedule) throws IOException {","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"1rbg"},"content":"        saveSchedule(schedule, scheduleStorage.getScheduleFilePath());","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"1rbg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"1rbg"},"content":"    public void saveSchedule(Schedule schedule, Path filePath) throws IOException {","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"1rbg"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"1rbg"},"content":"        scheduleStorage.saveSchedule(schedule, filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"1rbg":35,"-":75}},{"path":"src/main/java/seedu/address/ui/Calendar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"/*","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":" * Adapted from Da9el00\u0027s Calendar.fxml","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":" * https://gist.github.com/Da9el00/f4340927b8ba6941eb7562a3306e93b6","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import java.time.Month;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import java.util.Locale;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":" * A graphic calendar that displays the schedule of a given month.","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"public class Calendar extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"    private static final String FXML \u003d \"Calendar.fxml\";","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    // Number of weeks to display in the calendar","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"    private static int numberOfWeeks \u003d 4;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"    private final LocalDate today;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"    private final Set\u003cScheduleDate\u003e scheduleDates;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"    private FlowPane calendar;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"     * Creates a calendar with the given schedule dates.","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"     * @param scheduleDates Schedule dates to display in the calendar.","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"    public Calendar(Set\u003cScheduleDate\u003e scheduleDates) {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"        super(FXML);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"        today \u003d LocalDate.now();","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"        this.scheduleDates \u003d scheduleDates;","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"        drawCalendar();","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"     * Creates a calendar with the given schedule dates and today\u0027s date.","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"    private void drawCalendar() {","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"        double calendarWidth \u003d calendar.getPrefWidth();","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"        assert(calendarWidth \u003e\u003d 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"        double calendarHeight \u003d calendar.getPrefHeight();","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"        assert(calendarHeight \u003e\u003d 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"        double strokeWidth \u003d 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"        double spacingH \u003d calendar.getHgap();","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"        assert(spacingH \u003e\u003d 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"        double spacingV \u003d calendar.getVgap();","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"        assert(spacingV \u003e\u003d 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"        // List of activities for a given month","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"        Map\u003cLocalDate, ScheduleDate\u003e scheduleDateMap \u003d createCalendarMap();","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"        Month month \u003d today.getMonth();","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"        int day \u003d today.getDayOfMonth() - today.getDayOfWeek().getValue();","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"        if (day \u003c\u003d 0) {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"            month \u003d today.getMonth().minus(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"            day \u003d month.maxLength() + day;","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"1rbg"},"content":"        int currentMonthMaxDay \u003d month.maxLength();","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"1rbg"},"content":"        for (int i \u003d 0; i \u003c numberOfWeeks; i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"1rbg"},"content":"            for (int j \u003d 0; j \u003c 7; j++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"1rbg"},"content":"                StackPane stackPane \u003d new StackPane();","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"1rbg"},"content":"                Rectangle rectangle \u003d new Rectangle();","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"1rbg"},"content":"                rectangle.setFill(Color.TRANSPARENT);","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"1rbg"},"content":"                rectangle.setStroke(Color.BLACK);","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"1rbg"},"content":"                rectangle.setStrokeWidth(strokeWidth);","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"1rbg"},"content":"                double rectangleWidth \u003d (calendarWidth / 7) - strokeWidth - spacingH;","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"1rbg"},"content":"                rectangle.setWidth(rectangleWidth);","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"1rbg"},"content":"                double rectangleHeight \u003d (calendarHeight / numberOfWeeks) - strokeWidth - spacingV;","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"1rbg"},"content":"                rectangle.setHeight(rectangleHeight);","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"1rbg"},"content":"                stackPane.getChildren().add(rectangle);","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"1rbg"},"content":"                String dayMonth \u003d day + \" \" + month.getDisplayName(TextStyle.FULL, Locale.ENGLISH);","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"1rbg"},"content":"                ScheduleDate scheduleDate \u003d scheduleDateMap.get(LocalDate.of(today.getYear(), month, day));","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"1rbg"},"content":"                Text date \u003d new Text(dayMonth);","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"1rbg"},"content":"                double textTranslationY \u003d -(rectangleHeight / 2) * 0.75;","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"1rbg"},"content":"                date.setTranslateY(textTranslationY);","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"1rbg"},"content":"                stackPane.getChildren().add(date);","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"1rbg"},"content":"                if (scheduleDate !\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"1rbg"},"content":"                    createCalendarActivity(scheduleDate, rectangleHeight, rectangleWidth, stackPane);","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"1rbg"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"1rbg"},"content":"                if (today.getDayOfMonth() \u003d\u003d day \u0026\u0026 today.getMonth() \u003d\u003d month) {","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"1rbg"},"content":"                    rectangle.setStroke(Color.BLUE);","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"1rbg"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"1rbg"},"content":"                calendar.getChildren().add(stackPane);","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"1rbg"},"content":"                day++;","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"1rbg"},"content":"                if (day \u003e currentMonthMaxDay) {","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"1rbg"},"content":"                    day \u003d 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"1rbg"},"content":"                    month \u003d month.plus(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"1rbg"},"content":"                    currentMonthMaxDay \u003d month.maxLength();","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"1rbg"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"1rbg"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"1rbg"},"content":"     * Creates a calendar activity for a given date.","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"1rbg"},"content":"     * @param scheduleDate Schedule date to create the calendar activity for.","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"1rbg"},"content":"     * @param rectangleHeight Height of the rectangle.","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"1rbg"},"content":"     * @param rectangleWidth Width of the rectangle.","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"1rbg"},"content":"     * @param stackPane Stack pane to add the calendar activity to.","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"1rbg"},"content":"    private void createCalendarActivity(ScheduleDate scheduleDate, double rectangleHeight, double rectangleWidth,","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"1rbg"},"content":"                                        StackPane stackPane) {","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"1rbg"},"content":"        VBox calendarActivityBox \u003d new VBox();","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"1rbg"},"content":"        List\u003cPerson\u003e persons \u003d scheduleDate.getPersons();","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"1rbg"},"content":"        List\u003cString\u003e personNames \u003d persons.stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"1rbg"},"content":"                .map(Person::getName)","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"1rbg"},"content":"                .map(x -\u003e x.value)","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"1rbg"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"1rbg"},"content":"        for (int k \u003d 0; k \u003c persons.size(); k++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"1rbg"},"content":"            Text text \u003d new Text(personNames.get(k));","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"1rbg"},"content":"            calendarActivityBox.getChildren().add(text);","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"1rbg"},"content":"        calendarActivityBox.setTranslateY((rectangleHeight / 2) * 0.20);","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"1rbg"},"content":"        calendarActivityBox.setMaxWidth(rectangleWidth * 0.8);","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"1rbg"},"content":"        calendarActivityBox.setMaxHeight(rectangleHeight * 0.65);","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"1rbg"},"content":"        stackPane.getChildren().add(calendarActivityBox);","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"1rbg"},"content":"     * Creates a map of schedule dates with the date as the key.","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"1rbg"},"content":"     * @return Map of schedule dates with the date as the key.","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"1rbg"},"content":"    private Map\u003cLocalDate, ScheduleDate\u003e createCalendarMap() {","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"1rbg"},"content":"        return scheduleDates.stream().collect(","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"1rbg"},"content":"                Collectors.toMap(ScheduleDate::getDate, x -\u003e x));","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"1rbg"},"content":"     * Sets the number of weeks to display in the calendar.","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"1rbg"},"content":"     * @param numberOfWeeks Number of weeks to display in the calendar.","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"1rbg"},"content":"    public static void setNumberOfWeeks(int numberOfWeeks) {","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"1rbg"},"content":"        assert(numberOfWeeks \u003e 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"1rbg"},"content":"        Calendar.numberOfWeeks \u003d numberOfWeeks;","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"1rbg":156}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"        if (\"\".equals(commandText)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"jxunze":1,"-":84}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"    public static final String USERGUIDE_URL \u003d \"https://https://ay2324s2-cs2103t-t17-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"1rbg":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"    private MenuItem showContactsMenuItem;","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"    private StackPane showContactsButton;","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"    private StackPane showScheduleButton;","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"1rbg"},"content":"        Text contactsButtonText \u003d new Text(\"CONTACTS\");","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"1rbg"},"content":"        showContactsButton.getChildren().add(contactsButtonText);","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"1rbg"},"content":"        Text scheduleButtonText \u003d new Text(\"SCHEDULE\");","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"1rbg"},"content":"        showScheduleButton.getChildren().add(scheduleButtonText);","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"1rbg"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"1rbg"},"content":"    private void handleShowContacts() {","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"1rbg"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"1rbg"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"jxunze"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"jxunze"},"content":"    private void handleShowPayroll() {","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"jxunze"},"content":"        PayrollListPanel payrollListPanel \u003d new PayrollListPanel(logic.getPayrollList());","lastModifiedDate":"2024-04-01"},{"lineNumber":188,"author":{"gitId":"jxunze"},"content":"        personListPanelPlaceholder.getChildren().add(payrollListPanel.getRoot());","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":190,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":191,"author":{"gitId":"1rbg"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"1rbg"},"content":"    private void handleShowCalendar() {","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"1rbg"},"content":"        Calendar calendar \u003d new Calendar(logic.getScheduleDates());","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"1rbg"},"content":"        personListPanelPlaceholder.getChildren().add(calendar.getRoot());","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"1rbg"},"content":"            if (commandResult.isShowContacts()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"1rbg"},"content":"                handleShowContacts();","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"1rbg"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"1rbg"},"content":"            if (commandResult.isShowSchedule()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"1rbg"},"content":"                handleShowCalendar();","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"1rbg"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"jxunze"},"content":"            if (commandResult.isShowPayroll()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"jxunze"},"content":"                handleShowPayroll();","lastModifiedDate":"2024-04-01"},{"lineNumber":230,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":231,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"1rbg":34,"jxunze":10,"-":195}},{"path":"src/main/java/seedu/address/ui/PayrollCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.PayrollWrapper;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"public class PayrollCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    private static final String FXML \u003d \"PayrollListCard.fxml\";","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"    public final PayrollWrapper payroll;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"    private VBox vBox;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"    private Label name;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"    private Label id;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"    private FlowPane tags;","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"    private Label phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"    public PayrollCard(PayrollWrapper payroll, int displayedIndex) {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"        super(FXML);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"jxunze"},"content":"        this.payroll \u003d payroll;","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"jxunze"},"content":"        name.setText(payroll.getPerson().getName().value);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"jxunze"},"content":"        phone.setText(payroll.getPerson().getPhone().value);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"        Label bankDetails \u003d new Label(payroll.getPerson().getBankDetails().value);","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"        Label hoursWorked \u003d new Label(payroll.getHoursWorked() + \" hours\");","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"jxunze"},"content":"        Label pay \u003d new Label(\"$\" + payroll.getPay());","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"        vBox.getChildren().addAll(bankDetails, hoursWorked, pay);","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"jxunze":57}},{"path":"src/main/java/seedu/address/ui/PayrollListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.PayrollWrapper;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":" * Panel containing the list of payrolls.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"public class PayrollListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    private static final String FXML \u003d \"PayrollListPanel.fxml\";","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"    private ListView\u003cPayrollWrapper\u003e payrollListView;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"     * Creates a {@code PayrollListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"    public PayrollListPanel(ObservableList\u003cPayrollWrapper\u003e payrollList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"        super(FXML);","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"        payrollListView.setItems(payrollList);","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"        payrollListView.setCellFactory(listView -\u003e new PayrollListViewCell());","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"    class PayrollListViewCell extends ListCell\u003cPayrollWrapper\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"        protected void updateItem(PayrollWrapper payroll, boolean empty) {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"            super.updateItem(payroll, empty);","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"            if (empty || payroll \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"                setGraphic(null);","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"                setText(null);","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"            } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"                setGraphic(new PayrollCard(payroll, getIndex() + 1).getRoot());","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"jxunze":40}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    private VBox vBox;","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    private Label phone;","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"    public PersonCard(Person person, int displayedIndex, boolean isFullView) {","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"        name.setText(person.getName().value);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        if (isFullView) {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"            Label sex \u003d new Label(getFullSexString(person.getSex().value));","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"            Label payRate \u003d new Label(person.getPayRate().toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"            Label address \u003d new Label(person.getAddress().value);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"            Label bankDetails \u003d new Label(person.getBankDetails().value);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"h4ow3i"},"content":"            // Label hoursWorked \u003d new Label(person.getWorkHours().toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"            vBox.getChildren().addAll(new Label[]{sex, payRate, address, bankDetails});","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"     * Returns the full sex string based on the short form string returned from Sex.","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"    private String getFullSexString(String shortFormString) {","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"        if (shortFormString.equals(\"m\")) {","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"            return \"Male\";","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"        } else if (shortFormString.equals(\"f\")) {","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"            return \"Female\";","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"        return \"Invalid Sex\"; // should not reach here","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"1rbg":11,"h4ow3i":2,"-":50,"martinng01":15}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    private int selectedIndex \u003d -1;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    private boolean isFullView \u003d false;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"        personListView.setOnMousePressed(event -\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"            // If the same person is selected, toggle between full view and normal view","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"            if (selectedIndex \u003d\u003d personListView.getSelectionModel().getSelectedIndex()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"                isFullView \u003d !isFullView;","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"                isFullView \u003d true;","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            selectedIndex \u003d personListView.getSelectionModel().getSelectedIndex();","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"            personListView.refresh();","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        });","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1,","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"                    getIndex() \u003d\u003d selectedIndex \u0026\u0026 isFullView).getRoot());","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":44,"martinng01":14}},{"path":"src/main/resources/view/Calendar.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"\u003cStackPane fx:id\u003d\"frame\" style\u003d\"-fx-background-color: #ffffff;\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"      \u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" StackPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"          \u003cFlowPane fx:id\u003d\"calendar\" hgap\u003d\"10.0\" layoutX\u003d\"14.0\" layoutY\u003d\"58.0\" prefHeight\u003d\"524.0\" prefWidth\u003d\"770.0\" vgap\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"          \u003cHBox alignment\u003d\"CENTER\" layoutX\u003d\"50.0\" layoutY\u003d\"14.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"44.0\" prefWidth\u003d\"700.0\" spacing\u003d\"81.0\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"                  \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"SUN\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"                  \u003cText layoutX\u003d\"213.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"MON\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"                  \u003cText layoutX\u003d\"222.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"TUE\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"                  \u003cText layoutX\u003d\"232.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"WED\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"                  \u003cText layoutX\u003d\"241.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"THU\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"                  \u003cText layoutX\u003d\"251.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"FRI\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"                  \u003cText layoutX\u003d\"266.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"SAT\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"              \u003c/children\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"               \u003cInsets right\u003d\"19.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"   \u003c/children\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"1rbg":48}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"huekoh":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"\u003cfx:root minHeight\u003d\"750.0\" minWidth\u003d\"1000.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"FnBuddy\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"            \u003cAnchorPane\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"huekoh"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"huekoh"},"content":"                    \u003cMenuBar fx:id\u003d\"menuBar\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"huekoh"},"content":"                        \u003cmenus\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"huekoh"},"content":"                                \u003citems\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                                    \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"huekoh"},"content":"                                \u003c/items\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"huekoh"},"content":"                                \u003citems\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                                    \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"huekoh"},"content":"                                \u003c/items\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"huekoh"},"content":"                        \u003c/menus\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"huekoh"},"content":"                    \u003cSplitPane dividerPositions\u003d\"0.25\" AnchorPane.bottomAnchor\u003d\"18.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"27.0\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"                        \u003citems\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"                            \u003cVBox alignment\u003d\"BOTTOM_CENTER\" prefHeight\u003d\"673.0\" prefWidth\u003d\"240.0\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"huekoh"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"                           \u003cStackPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"                                 \u003cSplitPane dividerPositions\u003d\"0.5\" maxHeight\u003d\"-Infinity\" prefHeight\u003d\"40.0\" prefWidth\u003d\"222.0\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"                                   \u003citems\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"                                       \u003cStackPane fx:id\u003d\"showContactsButton\" onMouseClicked\u003d\"#handleShowContacts\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"                                       \u003cStackPane fx:id\u003d\"showScheduleButton\" onMouseClicked\u003d\"#handleShowCalendar\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"                                   \u003c/items\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"                                 \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"                                          \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"                                    \u003cStackPane.margin\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"                                       \u003cInsets top\u003d\"40.0\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"                                    \u003c/StackPane.margin\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"                                 \u003c/StackPane\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"                           \u003c/StackPane\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"huekoh"},"content":"                                    \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"huekoh"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"huekoh"},"content":"                            \u003c/VBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"huekoh"},"content":"                            \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"huekoh"},"content":"                                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"huekoh"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"                                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" minHeight\u003d\"600.0\" minWidth\u003d\"800.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"850.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"huekoh"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"huekoh"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"huekoh"},"content":"                    \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"huekoh"},"content":"                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" layoutY\u003d\"436.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"huekoh"},"content":"                \u003c/children\u003e\u003c/AnchorPane\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"1rbg":25,"huekoh":22,"-":21}},{"path":"src/main/resources/view/PayrollListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/21\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"jxunze"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"jxunze"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"jxunze"},"content":"        \u003cVBox fx:id\u003d\"vBox\" alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"jxunze"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"jxunze"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"jxunze"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"jxunze"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"jxunze"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"jxunze"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"jxunze"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"            \u003cRowConstraints/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"jxunze"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"jxunze"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"jxunze":37}},{"path":"src/main/resources/view/PayrollListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxunze"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"jxunze"},"content":"    \u003cListView fx:id\u003d\"payrollListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"jxunze":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/21\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        \u003cVBox fx:id\u003d\"vBox\" alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            \u003cRowConstraints/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":29,"martinng01":9}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"martinng01":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" minHeight\u003d\"200.0\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"huekoh"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" minHeight\u003d\"200.0\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"huekoh":2,"-":6}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKDETAILS_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRSTNAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTNAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PAYRATE_DESC_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SEX_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"import seedu.address.storage.JsonScheduleStorage;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"        JsonScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(temporaryFolder.resolve(\"schedule.json\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"jxunze"},"content":"        String deleteCommand \u003d \"delete 12345678\";","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"jxunze"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"huekoh"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" archive\";","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"1rbg"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"martinng01"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"1rbg"},"content":"        JsonScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(temporaryFolder.resolve(\"schedule.json\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"1rbg"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"martinng01"},"content":"        String addCommand \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"martinng01"},"content":"            AddCommand.COMMAND_WORD + FIRSTNAME_DESC_AMY + LASTNAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"h4ow3i"},"content":"                + SEX_DESC_AMY + PAYRATE_DESC_AMY + BANKDETAILS_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"huekoh"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withArchiveStatus(false).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"1rbg":8,"jxunze":2,"h4ow3i":2,"huekoh":2,"-":161,"martinng01":12}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"1rbg":3,"-":46}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.PayrollWrapper;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"        Person alice \u003d new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Ng\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        Person bob \u003d new PersonBuilder().withFirstName(\"Bob\").withLastName(\"Tan\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"h4ow3i"},"content":"        public void updatePerson(Person personToUpdate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"huekoh"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"huekoh"},"content":"        public void archivePerson(Person personToArchive, Person archivedPerson) {","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"huekoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"h4ow3i"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"h4ow3i"},"content":"        public Person getPersonByPhoneNumber(Phone phoneNumber) {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"h4ow3i"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"h4ow3i"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"martinng01"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"martinng01"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"huekoh"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"huekoh"},"content":"        public void unarchivePerson(Person personToUnarchive, Person unarchivedPerson) {","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"huekoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"huekoh"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"huekoh"},"content":"        public ObservableList\u003cPerson\u003e getFilteredArchivedPersonList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"huekoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"huekoh"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"huekoh"},"content":"        public ObservableList\u003cPerson\u003e getFilteredUnarchivedPersonList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"huekoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"huekoh"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"1rbg"},"content":"        public void setSchedule(Schedule schedule) {","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"1rbg"},"content":"        public Schedule getSchedule() {","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"1rbg"},"content":"        public Set\u003cScheduleDate\u003e getScheduleDates() {","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"1rbg"},"content":"        public void addPersonToSchedule(Person person, LocalDate date) {","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"1rbg"},"content":"        public void removePersonFromSchedule(Person person, LocalDate date) {","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"jxunze"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"jxunze"},"content":"        public void generatePayroll(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"jxunze"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"jxunze"},"content":"        /**","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"jxunze"},"content":"         * Returns the payroll list.","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"jxunze"},"content":"         */","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"jxunze"},"content":"        public ObservableList\u003cPayrollWrapper\u003e getPayrollList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"jxunze"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"jxunze"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"1rbg":29,"jxunze":13,"h4ow3i":6,"huekoh":20,"-":203,"martinng01":5}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"1rbg":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \", showContacts\u003d\" + commandResult.isShowContacts()","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"                + \", showSchedule\u003d\" + commandResult.isShowSchedule() + \"}\";","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"1rbg":2,"-":62}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAYRATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_FIRSTNAME_AMY \u003d \"Amy\";","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_LASTNAME_AMY \u003d \"Bee\";","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_FIRSTNAME_BOB \u003d \"Bob\";","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_LASTNAME_BOB \u003d \"Choo\";","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_SEX_AMY \u003d \"f\";","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_SEX_BOB \u003d \"m\";","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"    public static final double VALID_PAYRATE_AMY \u003d 14.0;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"    public static final double VALID_PAYRATE_BOB \u003d 18.5;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"huekoh"},"content":"    public static final String VALID_BANKDETAILS_AMY \u003d \"ocbc 8374219\";","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"huekoh"},"content":"    public static final String VALID_BANKDETAILS_BOB \u003d \"dbs 7777222201\";","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"    public static final String VALID_TAG_WAITER \u003d \"waiter\";","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"    public static final String VALID_TAG_COOK \u003d \"cook\";","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"h4ow3i"},"content":"    public static final int VALID_WORK_HOURS_AMY \u003d 10;","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"    public static final int VALID_WORK_HOURS_BOB \u003d 20;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    public static final String FIRSTNAME_DESC_AMY \u003d \" \" + PREFIX_FIRSTNAME + VALID_FIRSTNAME_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"    public static final String LASTNAME_DESC_AMY \u003d \" \" + PREFIX_LASTNAME + VALID_LASTNAME_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"    public static final String FIRSTNAME_DESC_BOB \u003d \" \" + PREFIX_FIRSTNAME + VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    public static final String LASTNAME_DESC_BOB \u003d \" \" + PREFIX_LASTNAME + VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    public static final String SEX_DESC_AMY \u003d \" \" + PREFIX_SEX + VALID_SEX_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    public static final String SEX_DESC_BOB \u003d \" \" + PREFIX_SEX + VALID_SEX_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"h4ow3i"},"content":"    public static final String PAYRATE_DESC_AMY \u003d \" \" + PREFIX_PAYRATE + VALID_PAYRATE_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"h4ow3i"},"content":"    public static final String PAYRATE_DESC_BOB \u003d \" \" + PREFIX_PAYRATE + VALID_PAYRATE_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"    public static final String BANKDETAILS_DESC_AMY \u003d \" \" + PREFIX_BANKDETAILS + VALID_BANKDETAILS_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"    public static final String BANKDETAILS_DESC_BOB \u003d \" \" + PREFIX_BANKDETAILS + VALID_BANKDETAILS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"    public static final String TAG_DESC_COOK \u003d \" \" + PREFIX_TAG + VALID_TAG_COOK;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"    public static final String TAG_DESC_WAITER \u003d \" \" + PREFIX_TAG + VALID_TAG_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"    public static final String INVALID_FIRSTNAME_DESC \u003d \" \" + PREFIX_FIRSTNAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"    public static final String INVALID_LASTNAME_DESC \u003d \" \" + PREFIX_LASTNAME + \"Char.les\"; // \u0027\u0026\u0027 not allowed in","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    public static final String INVALID_SEX_DESC \u003d \" \" + PREFIX_SEX + \"u\"; // \u0027u\u0027 is not an allowed sex","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"h4ow3i"},"content":"    public static final String INVALID_PAYRATE_DESC \u003d \" \" + PREFIX_PAYRATE + \"ut\"; //\u0027ut\u0027 is not an allowed payrate","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"jxunze"},"content":"    public static final String INVALID_BANKDETAILS_DESC \u003d \" \" + PREFIX_BANKDETAILS","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"huekoh"},"content":"        + \"3213*421321\"; // \u0027*\u0027 not allowed in bank details","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"jxunze"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"jxunze"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withFirstName(VALID_FIRSTNAME_AMY)","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"jxunze"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"1rbg"},"content":"            .withTags(VALID_TAG_COOK).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"jxunze"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withFirstName(VALID_LASTNAME_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"jxunze"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"1rbg"},"content":"            .withTags(VALID_TAG_WAITER, VALID_TAG_COOK).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"martinng01"},"content":"        final String[] splitName \u003d person.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"1rbg":6,"jxunze":8,"h4ow3i":8,"huekoh":3,"-":104,"martinng01":24}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"    public void execute_validPhoneUnfilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"jxunze"},"content":"        Phone phoneToDelete \u003d personToDelete.getPhone();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(phoneToDelete);","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"jxunze"},"content":"    public void execute_invalidPhoneUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"jxunze"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Phone(\"12345678\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"jxunze"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"    public void execute_validPhoneFilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getPhone());","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"jxunze"},"content":"    public void execute_invalidPhoneFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"jxunze"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Phone(\"12345678\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"jxunze"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"jxunze"},"content":"        Phone firstPhone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"jxunze"},"content":"        Phone secondPhone \u003d new Phone(\"87654321\");","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"jxunze"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(firstPhone);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"jxunze"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(secondPhone);","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"jxunze"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(firstPhone);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"jxunze"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"jxunze"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(phone);","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"jxunze"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetPhone\u003d\" + phone.toString() + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jxunze":20,"1rbg":4,"-":92}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"    private Phone indexFirstPhone \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getPhone();","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"    private Phone indexSecondPhone \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()).getPhone();","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"    private Phone indexLastPhone \u003d model.getFilteredPersonList().get(model.getFilteredPersonList().size() - 1)","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"            .getPhone();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"        EditCommand editCommand \u003d new EditCommand(indexFirstPhone, descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"                new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"        Person editedPerson \u003d personInList.withFirstName(VALID_FIRSTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"                .withLastName(VALID_LASTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"                .withTags(VALID_TAG_WAITER).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withFirstName(VALID_FIRSTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"                .withLastName(VALID_LASTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"                .withTags(VALID_TAG_WAITER).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPhone, descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"1rbg"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"1rbg"},"content":"            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"1rbg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"1rbg"},"content":"                new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"1rbg"},"content":"        EditCommand editCommand \u003d new EditCommand(indexFirstPhone, new EditPersonDescriptor());","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"1rbg"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"1rbg"},"content":"            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"1rbg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"1rbg"},"content":"                new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"1rbg"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withFirstName(VALID_FIRSTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"1rbg"},"content":"                .withLastName(VALID_LASTNAME_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"1rbg"},"content":"        EditCommand editCommand \u003d new EditCommand(indexFirstPhone,","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"1rbg"},"content":"                new EditPersonDescriptorBuilder().withFirstName(VALID_FIRSTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"1rbg"},"content":"                        .withLastName(VALID_LASTNAME_BOB).build());","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"1rbg"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"1rbg"},"content":"            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"1rbg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"1rbg"},"content":"                new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"1rbg"},"content":"        EditCommand editCommand \u003d new EditCommand(indexSecondPhone, descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"1rbg"},"content":"        EditCommand editCommand \u003d new EditCommand(indexFirstPhone,","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"1rbg"},"content":"        Phone phoneNumberNotInBook \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"1rbg"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withFirstName(VALID_FIRSTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"1rbg"},"content":"                .withLastName(VALID_LASTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"1rbg"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"1rbg"},"content":"        EditCommand editCommand \u003d new EditCommand(phoneNumberNotInBook, descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"jxunze"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"1rbg"},"content":"        assertTrue(INDEX_SECOND_PERSON.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"1rbg"},"content":"        EditCommand editCommand \u003d new EditCommand(indexSecondPhone,","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"1rbg"},"content":"                new EditPersonDescriptorBuilder().withFirstName(VALID_FIRSTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"1rbg"},"content":"                        .withLastName(VALID_LASTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"1rbg"},"content":"                        .build());","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"jxunze"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"1rbg"},"content":"        final EditCommand standardCommand \u003d new EditCommand(indexFirstPhone, DESC_AMY);","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"1rbg"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(indexFirstPhone, copyDescriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"1rbg"},"content":"        assertFalse(standardCommand.equals(new EditCommand(indexSecondPhone, DESC_AMY)));","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"1rbg"},"content":"        assertFalse(standardCommand.equals(new EditCommand(indexSecondPhone, DESC_BOB)));","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-17"},{"lineNumber":201,"author":{"gitId":"1rbg"},"content":"        EditCommand editCommand \u003d new EditCommand(indexFirstPhone, editPersonDescriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"1rbg"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + indexFirstPhone","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"1rbg"},"content":"                + \", editPersonDescriptor\u003d\" + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"1rbg":64,"jxunze":2,"-":141}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withFirstName(VALID_FIRSTNAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"                .withLastName(VALID_LASTNAME_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_WAITER).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{firstName\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"                + editPersonDescriptor.getFirstName().orElse(null) + \", lastName\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"                + editPersonDescriptor.getLastName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", sex\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"                + editPersonDescriptor.getSex().orElse(null) + \", payRate\u003d\"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"h4ow3i"},"content":"                + editPersonDescriptor.getPayRate().orElse(null) + \", address\u003d\"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", bankDetails\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"                + editPersonDescriptor.getBankDetails().orElse(null) + \", hoursWorked\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"                + editPersonDescriptor.getHoursWorked().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"1rbg":13,"h4ow3i":2,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"1rbg":3,"-":89}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new ScheduleManager());","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"huekoh"},"content":"        assertCommandSuccess(new ListCommand(\"all\"), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"huekoh"},"content":"        assertCommandSuccess(new ListCommand(\"main\"), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"1rbg":3,"huekoh":2,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.PayrollWrapper;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"        Phone phoneNumber \u003d new Phone(\"92345678\");","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ScheduleCommand(null, null));","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ScheduleCommand(null, date));","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ScheduleCommand(phoneNumber, null));","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"    public void execute_personNotFound_throwsCommandException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"        ModelStubWithGetPersonByPhoneNumber modelStub \u003d new ModelStubWithGetPersonByPhoneNumber(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"        Phone phoneNumber \u003d new Phone(\"92315678\");","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"        assertThrows(CommandException.class, () -\u003e new ScheduleCommand(phoneNumber, date).execute(modelStub));","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"    public void equals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"        Phone phoneNumber1 \u003d new Phone(\"92345678\");","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"        Phone phoneNumber2 \u003d new Phone(\"91345678\");","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"        ScheduleCommand scheduleCommand1 \u003d new ScheduleCommand(phoneNumber1, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"        ScheduleCommand scheduleCommand2 \u003d new ScheduleCommand(phoneNumber2, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"        assertTrue(scheduleCommand1.equals(scheduleCommand1));","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"        ScheduleCommand scheduleCommand1Copy \u003d new ScheduleCommand(phoneNumber1, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"        assertTrue(scheduleCommand1.equals(scheduleCommand1Copy));","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"        assertFalse(scheduleCommand1.equals(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"        assertFalse(scheduleCommand1.equals(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"        assertFalse(scheduleCommand1.equals(scheduleCommand2));","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"1rbg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"1rbg"},"content":"        Phone phoneNumber \u003d new Phone(\"92345678\");","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"1rbg"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(phoneNumber, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"1rbg"},"content":"        String expected \u003d ScheduleCommand.class.getCanonicalName() + \"{phoneNumber\u003d92345678, date\u003d\" + date + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"1rbg"},"content":"        assertEquals(expected, scheduleCommand.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"1rbg"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"1rbg"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"1rbg"},"content":"        public void updatePerson(Person personToUpdate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"1rbg"},"content":"        public Person getPersonByPhoneNumber(Phone phoneNumber) {","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"1rbg"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"1rbg"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"1rbg"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"1rbg"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"1rbg"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"1rbg"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"1rbg"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"1rbg"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"1rbg"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"1rbg"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"1rbg"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"1rbg"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"1rbg"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"1rbg"},"content":"        public ObservableList\u003cPerson\u003e getFilteredUnarchivedPersonList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"1rbg"},"content":"        public ObservableList\u003cPerson\u003e getFilteredArchivedPersonList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"1rbg"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"1rbg"},"content":"        public void setSchedule(Schedule schedule) {","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"1rbg"},"content":"        public Schedule getSchedule() {","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"1rbg"},"content":"        public Set\u003cScheduleDate\u003e getScheduleDates() {","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"1rbg"},"content":"        public void addPersonToSchedule(Person person, LocalDate date) {","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"1rbg"},"content":"        public void removePersonFromSchedule(Person person, LocalDate date) {","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"1rbg"},"content":"        public void archivePerson(Person personToArchive, Person archivedPerson) {","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"1rbg"},"content":"        public void unarchivePerson(Person personToUnarchive, Person unarchivedPerson) {","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"jxunze"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"jxunze"},"content":"        public void generatePayroll(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"jxunze"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"jxunze"},"content":"        };","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"jxunze"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"jxunze"},"content":"        public ObservableList\u003cPayrollWrapper\u003e getPayrollList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"jxunze"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"jxunze"},"content":"        };","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"1rbg"},"content":"    private class ModelStubWithGetPersonByPhoneNumber extends ModelStub {","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"1rbg"},"content":"        private final Person person;","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"1rbg"},"content":"        ModelStubWithGetPersonByPhoneNumber(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"1rbg"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"1rbg"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"1rbg"},"content":"        public Person getPersonByPhoneNumber(Phone phoneNumber) {","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"1rbg"},"content":"            if (!person.getPhone().equals(phoneNumber)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"1rbg"},"content":"                return null;","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"1rbg"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"1rbg"},"content":"            return person;","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"1rbg"},"content":"    private class ModelStubWithScheduleDate extends ModelStub {","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"1rbg"},"content":"        private final Set\u003cScheduleDate\u003e scheduleDates \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"1rbg"},"content":"        ModelStubWithScheduleDate(Person person, LocalDate date) {","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"1rbg"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"1rbg"},"content":"            ScheduleDate scheduleDate \u003d new ScheduleDate(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"1rbg"},"content":"            scheduleDates.add(scheduleDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"1rbg"},"content":"        public void addPersonToSchedule(Person person, LocalDate date) {","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"1rbg"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"1rbg"},"content":"            ScheduleDate scheduleDate \u003d new ScheduleDate(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"1rbg"},"content":"            scheduleDates.add(scheduleDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"1rbg"},"content":"        public Set\u003cScheduleDate\u003e getScheduleDates() {","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"1rbg"},"content":"            return scheduleDates;","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"1rbg"},"content":"     * A Model stub that always accept the person being added to the schedule.","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"1rbg"},"content":"    private class ModelStubAcceptingScheduleUpdate extends ModelStub {","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"1rbg"},"content":"        final Set\u003cScheduleDate\u003e scheduleDates \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":268,"author":{"gitId":"1rbg"},"content":"        final Person person;","lastModifiedDate":"2024-04-02"},{"lineNumber":269,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"1rbg"},"content":"        ModelStubAcceptingScheduleUpdate(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":271,"author":{"gitId":"1rbg"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"1rbg"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"1rbg"},"content":"        public void addPersonToSchedule(Person person, LocalDate date) {","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"1rbg"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"1rbg"},"content":"            ScheduleDate scheduleDate \u003d new ScheduleDate(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"1rbg"},"content":"            scheduleDates.add(scheduleDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":280,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":283,"author":{"gitId":"1rbg"},"content":"        public Set\u003cScheduleDate\u003e getScheduleDates() {","lastModifiedDate":"2024-04-02"},{"lineNumber":284,"author":{"gitId":"1rbg"},"content":"            return scheduleDates;","lastModifiedDate":"2024-04-02"},{"lineNumber":285,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":286,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":287,"author":{"gitId":"1rbg"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"1rbg"},"content":"        public Person getPersonByPhoneNumber(Phone phoneNumber) {","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"1rbg"},"content":"            if (!person.getPhone().equals(phoneNumber)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":290,"author":{"gitId":"1rbg"},"content":"                return null;","lastModifiedDate":"2024-04-02"},{"lineNumber":291,"author":{"gitId":"1rbg"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"1rbg"},"content":"            return person;","lastModifiedDate":"2024-04-02"},{"lineNumber":293,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":296,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":285,"jxunze":11}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKDETAILS_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKDETAILS_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRSTNAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRSTNAME_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FIRSTNAME_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LASTNAME_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PAYRATE_DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SEX_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTNAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTNAME_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PAYRATE_DESC_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PAYRATE_DESC_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SEX_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SEX_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_COOK;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAYRATE_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_COOK;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAYRATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_COOK).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"h4ow3i"},"content":"                + SEX_DESC_BOB + PAYRATE_DESC_BOB + BANKDETAILS_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_COOK,","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_COOK, VALID_TAG_WAITER)","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"            FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB + SEX_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"h4ow3i"},"content":"                + PAYRATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"1rbg"},"content":"                + BANKDETAILS_DESC_BOB + TAG_DESC_WAITER + TAG_DESC_COOK,","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"        String validExpectedPersonString \u003d FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"h4ow3i"},"content":"            + PHONE_DESC_BOB + SEX_DESC_BOB + PAYRATE_DESC_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"1rbg"},"content":"            + ADDRESS_DESC_BOB + BANKDETAILS_DESC_BOB + TAG_DESC_COOK;","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"        // multiple first names","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FIRSTNAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"        // multiple last names","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, LASTNAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LASTNAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"        // multiple sexes","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, SEX_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SEX));","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"        // multiple employment types","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"h4ow3i"},"content":"        assertParseFailure(parser, PAYRATE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"h4ow3i"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PAYRATE));","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"martinng01"},"content":"        // multiple bank details","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, BANKDETAILS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BANKDETAILS));","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"            validExpectedPersonString + PHONE_DESC_AMY + FIRSTNAME_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FIRSTNAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"                PREFIX_ADDRESS, PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"        // invalid first name","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, INVALID_FIRSTNAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FIRSTNAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"        // invalid last name","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, INVALID_LASTNAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LASTNAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":150,"author":{"gitId":"martinng01"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"martinng01"},"content":"            FIRSTNAME_DESC_AMY + LASTNAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"martinng01"},"content":"                + SEX_DESC_AMY + ADDRESS_DESC_AMY + BANKDETAILS_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"h4ow3i"},"content":"                + PAYRATE_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"martinng01"},"content":"        // missing firstname prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, VALID_FIRSTNAME_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"h4ow3i"},"content":"                + SEX_DESC_BOB + PAYRATE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"martinng01"},"content":"            expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"martinng01"},"content":"        // missing lastname prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + VALID_LASTNAME_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"h4ow3i"},"content":"                + SEX_DESC_BOB + PAYRATE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"h4ow3i"},"content":"                + SEX_DESC_BOB + PAYRATE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"martinng01"},"content":"            expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"martinng01"},"content":"        // missing sex prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"h4ow3i"},"content":"                + VALID_SEX_BOB + PAYRATE_DESC_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"martinng01"},"content":"        // missing employment type prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"h4ow3i"},"content":"                + SEX_DESC_BOB + VALID_PAYRATE_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"martinng01"},"content":"                + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, VALID_FIRSTNAME_BOB + VALID_LASTNAME_BOB + VALID_PHONE_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"h4ow3i"},"content":"                + VALID_SEX_BOB + VALID_PAYRATE_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, INVALID_FIRSTNAME_DESC + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"h4ow3i"},"content":"            + SEX_DESC_BOB + PAYRATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"1rbg"},"content":"            + TAG_DESC_WAITER + TAG_DESC_COOK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"martinng01"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + INVALID_LASTNAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"h4ow3i"},"content":"            + SEX_DESC_BOB + PAYRATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"1rbg"},"content":"            + TAG_DESC_WAITER + TAG_DESC_COOK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2024-03-12"},{"lineNumber":210,"author":{"gitId":"h4ow3i"},"content":"            + SEX_DESC_BOB + PAYRATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"1rbg"},"content":"            + TAG_DESC_WAITER + TAG_DESC_COOK, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"martinng01"},"content":"        // invalid sex","lastModifiedDate":"2024-03-12"},{"lineNumber":214,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"h4ow3i"},"content":"            + INVALID_SEX_DESC + PAYRATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"1rbg"},"content":"            + TAG_DESC_WAITER + TAG_DESC_COOK, Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"martinng01"},"content":"        // invalid employment type","lastModifiedDate":"2024-03-12"},{"lineNumber":219,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"h4ow3i"},"content":"            + SEX_DESC_BOB + INVALID_PAYRATE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"h4ow3i"},"content":"            + TAG_DESC_WAITER + TAG_DESC_COOK, PayRate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"h4ow3i"},"content":"                + SEX_DESC_BOB + PAYRATE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"huekoh"},"content":"                + INVALID_TAG_DESC + VALID_TAG_COOK, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, INVALID_FIRSTNAME_DESC + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":230,"author":{"gitId":"h4ow3i"},"content":"                + SEX_DESC_BOB + INVALID_PAYRATE_DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":234,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":235,"author":{"gitId":"h4ow3i"},"content":"                + PHONE_DESC_BOB + SEX_DESC_BOB + PAYRATE_DESC_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"1rbg"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_WAITER + TAG_DESC_COOK,","lastModifiedDate":"2024-03-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"1rbg":13,"h4ow3i":27,"huekoh":1,"-":120,"martinng01":78}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"jxunze"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + PersonBuilder.DEFAULT_PHONE);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"jxunze"},"content":"        assertEquals(new DeleteCommand(new Phone(PersonBuilder.DEFAULT_PHONE)), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"jxunze"},"content":"                + PersonBuilder.DEFAULT_PHONE + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"jxunze"},"content":"        assertEquals(new EditCommand(new Phone(PersonBuilder.DEFAULT_PHONE), descriptor), command);","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"huekoh"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" all\") instanceof ListCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"huekoh"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" main\") instanceof ListCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"huekoh"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" archive\") instanceof ListCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jxunze":5,"huekoh":3,"-":94}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"jxunze"},"content":"        assertParseSuccess(parser, VALID_PHONE_AMY, new DeleteCommand(new Phone(VALID_PHONE_AMY)));","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, \"abc\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jxunze":4,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRSTNAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BANKDETAILS_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FIRSTNAME_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LASTNAME_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PAYRATE_DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SEX_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTNAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PAYRATE_DESC_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_COOK;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"jxunze"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAYRATE_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_COOK;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_FIRSTNAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"jxunze"},"content":"        // invalid number","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, \"0\" + FIRSTNAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + \"some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + \"i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + INVALID_FIRSTNAME_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"jxunze"},"content":"            Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + INVALID_LASTNAME_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"jxunze"},"content":"            Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"jxunze"},"content":"            Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"jxunze"},"content":"            Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + INVALID_TAG_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"jxunze"},"content":"            Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + INVALID_BANKDETAILS_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"jxunze"},"content":"            BankDetails.MESSAGE_CONSTRAINTS); // invalid bank details","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"jxunze"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + INVALID_SEX_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"jxunze"},"content":"            Sex.MESSAGE_CONSTRAINTS); // invalid sex","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"h4ow3i"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + INVALID_PAYRATE_DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"h4ow3i"},"content":"                PayRate.MESSAGE_CONSTRAINTS); // invalid employment type","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"1rbg"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + TAG_DESC_COOK + TAG_DESC_WAITER + TAG_EMPTY,","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"jxunze"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"1rbg"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + TAG_DESC_COOK + TAG_EMPTY + TAG_DESC_WAITER,","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"jxunze"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"1rbg"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + TAG_EMPTY + TAG_DESC_COOK + TAG_DESC_WAITER,","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"jxunze"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"h4ow3i"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + INVALID_FIRSTNAME_DESC + INVALID_PAYRATE_DESC","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"jxunze"},"content":"                + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"jxunze"},"content":"        Phone targetPhone \u003d new Phone(VALID_PHONE_AMY);","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"1rbg"},"content":"        String userInput \u003d VALID_PHONE_AMY + PHONE_DESC_AMY + TAG_DESC_WAITER","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"1rbg"},"content":"                + ADDRESS_DESC_AMY + FIRSTNAME_DESC_AMY + TAG_DESC_COOK + LASTNAME_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"jxunze"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withFirstName(VALID_FIRSTNAME_AMY)","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"jxunze"},"content":"                .withLastName(VALID_LASTNAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"1rbg"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_WAITER, VALID_TAG_COOK).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"jxunze"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"jxunze"},"content":"        Phone targetPhone \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"h4ow3i"},"content":"        String userInput \u003d VALID_PHONE_BOB + PHONE_DESC_BOB + PAYRATE_DESC_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"h4ow3i"},"content":"                .withPayRate(VALID_PAYRATE_BOB).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"jxunze"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"jxunze"},"content":"        Phone targetPhone \u003d new Phone(VALID_PHONE_AMY);","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"jxunze"},"content":"        String userInput \u003d VALID_PHONE_AMY + FIRSTNAME_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"jxunze"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withFirstName(VALID_FIRSTNAME_AMY).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"jxunze"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"jxunze"},"content":"        userInput \u003d VALID_PHONE_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"jxunze"},"content":"        expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"1rbg"},"content":"        userInput \u003d VALID_PHONE_AMY + TAG_DESC_COOK;","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"1rbg"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_COOK).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"jxunze"},"content":"        expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"jxunze"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"jxunze"},"content":"        // phone","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"jxunze"},"content":"        userInput \u003d VALID_PHONE_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"jxunze"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"jxunze"},"content":"        expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"jxunze"},"content":"        Phone targetPhone \u003d new Phone(VALID_PHONE_AMY);","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"jxunze"},"content":"        String userInput \u003d targetPhone + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2024-03-13"},{"lineNumber":180,"author":{"gitId":"jxunze"},"content":"        userInput \u003d targetPhone + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2024-03-13"},{"lineNumber":185,"author":{"gitId":"jxunze"},"content":"        userInput \u003d targetPhone + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"1rbg"},"content":"                + TAG_DESC_COOK + PHONE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_COOK","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"1rbg"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"jxunze"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_ADDRESS));","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"jxunze"},"content":"        userInput \u003d targetPhone + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"jxunze"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-13"},{"lineNumber":197,"author":{"gitId":"jxunze"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_ADDRESS));","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"jxunze"},"content":"        Phone targetPhone \u003d new Phone(VALID_PHONE_AMY);","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"jxunze"},"content":"        String userInput \u003d targetPhone + TAG_EMPTY;","lastModifiedDate":"2024-03-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2024-03-13"},{"lineNumber":206,"author":{"gitId":"jxunze"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetPhone, descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"jxunze":65,"1rbg":14,"h4ow3i":9,"-":122}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_SEX \u003d \"x\";","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    private static final String INVALID_PAYRATE \u003d \"invalid\";","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_PHONE \u003d \"93213213\";","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_SEX \u003d \"f\";","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_EMPLOYMENTTYPE \u003d \"ft\";","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"    public void parseSex_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSex((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"martinng01"},"content":"    public void parseSex_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSex(INVALID_SEX));","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"h4ow3i"},"content":"    public void parsePayRate_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"h4ow3i"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePayRate((String) null));","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"h4ow3i"},"content":"    public void parsePayRate_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"h4ow3i"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePayRate(INVALID_PAYRATE));","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"martinng01"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"martinng01"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"martinng01"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"h4ow3i":5,"-":166,"martinng01":17}},{"path":"src/test/java/seedu/address/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    private final ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"    public void parse_validArgs_returnsScheduleCommand() throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"        String args \u003d \"12345678 2022-12-31\";","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"        ScheduleCommand expectedCommand \u003d new ScheduleCommand(new Phone(\"12345678\"), LocalDate.parse(\"2022-12-31\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        String args \u003d \"12345678\";","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"    public void parse_invalidDate_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"        String args \u003d \"12345678 invalidDate\";","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":36}},{"path":"src/test/java/seedu/address/logic/parser/UnscheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"public class UnscheduleCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"    private final ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"    public void parse_validArgs_returnsScheduleCommand() throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"        String args \u003d \"12345678 2022-12-31\";","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"        ScheduleCommand expectedCommand \u003d new ScheduleCommand(new Phone(\"12345678\"), LocalDate.parse(\"2022-12-31\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"        String args \u003d \"12345678\";","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"    public void parse_invalidDate_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"        String args \u003d \"12345678 invalidDate\";","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":37}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_WAITER)","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_WAITER)","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"1rbg":3,"-":105}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"        assertEquals(new ScheduleManager(), modelManager.getSchedule());","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"1rbg"},"content":"        Schedule schedule \u003d new ScheduleManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"1rbg"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, schedule);","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"1rbg"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, schedule);","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"1rbg"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, schedule)));","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"        String[] keywords \u003d ALICE.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":126,"author":{"gitId":"1rbg"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, schedule)));","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":134,"author":{"gitId":"1rbg"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, schedule)));","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"1rbg":9,"-":126,"martinng01":1}},{"path":"src/test/java/seedu/address/model/person/BankDetailsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public class BankDetailsTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BankDetails(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    public void constructor_invalidBankDetails_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        String invalidBankDetails \u003d \"32132-423421\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BankDetails(invalidBankDetails));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public void isValidBankDetails() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        // null BankDetails number","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e BankDetails.isValidBankAccount(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        // invalid BankDetails numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"        assertFalse(BankDetails.isValidBankAccount(\"mt\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        assertFalse(BankDetails.isValidBankAccount(\"1231-421321\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"huekoh"},"content":"        assertFalse(BankDetails.isValidBankAccount(\"1234567890\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        // valid BankDetails numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"        assertTrue(BankDetails.isValidBankAccount(\"posb 123456789\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"huekoh"},"content":"        assertTrue(BankDetails.isValidBankAccount(\"ocbc 1234567\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"huekoh"},"content":"        assertTrue(BankDetails.isValidBankAccount(\"dbs 1234567890\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"huekoh"},"content":"        assertTrue(BankDetails.isValidBankAccount(\"uob 1234567890\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"        assertTrue(BankDetails.isValidBankAccount(\"standard chartered 1234567890\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"huekoh"},"content":"        assertTrue(BankDetails.isValidBankAccount(\"hsbc 12345678901234\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"huekoh"},"content":"        assertTrue(BankDetails.isValidBankAccount(\"other maybank 1234567890123\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"huekoh"},"content":"        BankDetails bankDetails \u003d new BankDetails(\"posb 123123123\");","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"huekoh"},"content":"        assertTrue(bankDetails.equals(new BankDetails(\"posb 123123123\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        assertTrue(bankDetails.equals(bankDetails));","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        assertFalse(bankDetails.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        assertFalse(bankDetails.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"huekoh"},"content":"        assertFalse(bankDetails.equals(new BankDetails(\"uob 3987398782\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"huekoh":11,"martinng01":50}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Carol\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"        // Keywords match phone and address, but does not match name","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").withPhone(\"93232321\")","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"            .withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":75,"martinng01":10}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        String invalidName \u003d \"g*3\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        assertTrue(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":58,"martinng01":2}},{"path":"src/test/java/seedu/address/model/person/PayRateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"h4ow3i"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"h4ow3i"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"h4ow3i"},"content":"public class PayRateTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"    public void isValidPayRate() {","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"h4ow3i"},"content":"        // invalid pay rates","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"h4ow3i"},"content":"        assertFalse(PayRate.isValidPayRate(\"\")); // empty string","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"h4ow3i"},"content":"        assertFalse(PayRate.isValidPayRate(\" \")); // spaces only","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"h4ow3i"},"content":"        assertFalse(PayRate.isValidPayRate(\"abc\")); // non-numeric string","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"h4ow3i"},"content":"        assertFalse(PayRate.isValidPayRate(\"-5.0\")); // negative pay rate","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"        // valid pay rates","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"        assertTrue(PayRate.isValidPayRate(\"5.0\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"h4ow3i"},"content":"        assertTrue(PayRate.isValidPayRate(\"10.5\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"h4ow3i"},"content":"        assertTrue(PayRate.isValidPayRate(\"100.75\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"        PayRate payRate \u003d new PayRate(15);","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"        assertTrue(payRate.equals(new PayRate(15)));","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"h4ow3i"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"h4ow3i"},"content":"        assertTrue(payRate.equals(payRate));","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"        assertFalse(payRate.equals(\"abc\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        assertFalse(payRate.equals(new PayRate(14)));","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"h4ow3i":42}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_WAITER).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        // different first name, same phone number -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withFirstName(VALID_FIRSTNAME_AMY).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        // different first name, same phone number -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        editedBob \u003d new PersonBuilder(BOB).withFirstName(VALID_FIRSTNAME_BOB).withLastName(VALID_LASTNAME_AMY).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"        // different first name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withFirstName(VALID_FIRSTNAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"        // different last name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLastName(VALID_LASTNAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"1rbg"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_WAITER).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"        String expected \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"            Person.class.getCanonicalName() + \"{firstName\u003d\" + ALICE.getFirstName()","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"                + \", lastName\u003d\" + ALICE.getLastName()","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"                + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"                + \", sex\u003d\" + ALICE.getSex()","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"h4ow3i"},"content":"                + \", payRate\u003d\" + ALICE.getPayRate()","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"                + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"                + \", bankDetails\u003d\" + ALICE.getBankDetails()","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"huekoh"},"content":"                + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"huekoh"},"content":"                + \", archiveStatus\u003d\" + ALICE.getArchiveStatus() + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"1rbg":3,"h4ow3i":1,"huekoh":2,"-":75,"martinng01":23}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        Phone phone \u003d new Phone(\"99943213\");","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        assertTrue(phone.equals(new Phone(\"99943213\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        assertFalse(phone.equals(new Phone(\"99943233\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":55,"martinng01":3}},{"path":"src/test/java/seedu/address/model/person/SexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public class SexTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Sex(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    public void constructor_invalidSex_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        String invalidSex \u003d \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidSex));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public void isValidSex() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        // null Sex number","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e Sex.isValidSex(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        // invalid Sex numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"        assertFalse(Sex.isValidSex(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        assertFalse(Sex.isValidSex(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        assertFalse(Sex.isValidSex(\"mf\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        assertFalse(Sex.isValidSex(\"3\")); // numeric","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        // valid Sex numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        assertTrue(Sex.isValidSex(\"f\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        assertTrue(Sex.isValidSex(\"m\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        Sex sex \u003d new Sex(\"f\");","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        assertTrue(sex.equals(new Sex(\"f\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        assertTrue(sex.equals(sex));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        assertFalse(sex.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        assertFalse(sex.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        assertFalse(sex.equals(new Sex(\"m\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"martinng01":57}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_WAITER)","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"1rbg"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_WAITER)","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"1rbg":3,"-":172}},{"path":"src/test/java/seedu/address/model/schedule/ScheduleDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"public class ScheduleDateTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"    public void constructor_validDate_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"        ScheduleDate scheduleDate \u003d new ScheduleDate(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"        assertEquals(date, scheduleDate.getDate());","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"        assertTrue(scheduleDate.getPersons().isEmpty());","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"    public void addPerson_validPerson_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        ScheduleDate scheduleDate \u003d new ScheduleDate(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"        scheduleDate.addPerson(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"        assertTrue(scheduleDate.hasPerson(person));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"        assertEquals(1, scheduleDate.getPersons().size());","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"        assertEquals(person, scheduleDate.getPersons().get(0));","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"    public void removePerson_validPerson_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"        ScheduleDate scheduleDate \u003d new ScheduleDate(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"        scheduleDate.addPerson(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"        scheduleDate.removePerson(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"        assertFalse(scheduleDate.hasPerson(person));","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"        assertTrue(scheduleDate.getPersons().isEmpty());","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"        ScheduleDate scheduleDate \u003d new ScheduleDate(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"        assertTrue(scheduleDate.equals(scheduleDate));","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"    public void equals_sameValues_true() {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"        ScheduleDate scheduleDate1 \u003d new ScheduleDate(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"        ScheduleDate scheduleDate2 \u003d new ScheduleDate(date);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"        assertTrue(scheduleDate1.equals(scheduleDate2));","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"    public void equals_differentValues_false() {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"        LocalDate date1 \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"        LocalDate date2 \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"        ScheduleDate scheduleDate1 \u003d new ScheduleDate(date1);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"        ScheduleDate scheduleDate2 \u003d new ScheduleDate(date2);","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"        assertFalse(scheduleDate1.equals(scheduleDate2));","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":69}},{"path":"src/test/java/seedu/address/model/schedule/ScheduleManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"public class ScheduleManagerTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"    private ScheduleManager scheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"        scheduleManager \u003d new ScheduleManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"    public void addPerson_validPersonAndDate_personAddedToSchedule() {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"        scheduleManager.addPerson(person, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"        assertTrue(scheduleManager.getScheduleDates().stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"                .anyMatch(scheduleDate -\u003e scheduleDate.getDate().equals(date)","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"                        \u0026\u0026 scheduleDate.hasPerson(person)));","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"    public void addPerson_existingPersonAndDate_personNotAddedToSchedule() {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"        scheduleManager.addPerson(person, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"        scheduleManager.addPerson(person, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"        assertEquals(1, scheduleManager.getScheduleDates().stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"                .filter(scheduleDate -\u003e scheduleDate.getDate().equals(date)","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"                        \u0026\u0026 scheduleDate.hasPerson(person))","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"                .count());","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"    public void deletePerson_existingPersonAndDate_personRemovedFromSchedule() {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"        scheduleManager.addPerson(person, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"        scheduleManager.deletePerson(person, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"        assertFalse(scheduleManager.getScheduleDates().stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"                .anyMatch(scheduleDate -\u003e scheduleDate.getDate().equals(date)","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"                        \u0026\u0026 scheduleDate.hasPerson(person)));","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"    public void resetData_nullData_scheduleCleared() {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"        scheduleManager.addPerson(person, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"        scheduleManager.resetData(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"        assertTrue(scheduleManager.getScheduleDates().isEmpty());","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"    public void resetData_nonNullData_scheduleUpdated() {","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"1rbg"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"1rbg"},"content":"        ScheduleManager newData \u003d new ScheduleManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"1rbg"},"content":"        newData.addPerson(person, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"1rbg"},"content":"        scheduleManager.addPerson(person, date);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"1rbg"},"content":"        scheduleManager.resetData(newData);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"1rbg"},"content":"        assertEquals(newData.getScheduleDates(), scheduleManager.getScheduleDates());","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":86}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_FIRSTNAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_LASTNAME \u003d \"T4.n\";","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_SEX \u003d \"h\";","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"h4ow3i"},"content":"    private static final String INVALID_PAYRATE \u003d \"abc\";","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_BANK_DETAILS \u003d \"057-3213-4123\";","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_FIRSTNAME \u003d BENSON.getFirstName().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_LASTNAME \u003d BENSON.getLastName().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_SEX \u003d BENSON.getSex().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"h4ow3i"},"content":"    private static final double VALID_PAYRATE \u003d BENSON.getPayRate().getPayRate();","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_BANK_DETAILS \u003d BENSON.getBankDetails().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"h4ow3i"},"content":"    private static final int VALID_WORK_HOURS \u003d BENSON.getWorkHours().getHoursWorked();","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"huekoh"},"content":"    private static final boolean VALID_ARCHIVE_STATUS \u003d BENSON.getArchiveStatus().getArchiveStatus();","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"    public void toModelType_invalidFirstName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"            new JsonAdaptedPerson(INVALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE, VALID_SEX, VALID_PAYRATE,","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"huekoh"},"content":"                VALID_ADDRESS, VALID_BANK_DETAILS, VALID_WORK_HOURS, VALID_TAGS, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"    public void toModelType_invalidLastName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, INVALID_LASTNAME, VALID_PHONE, VALID_SEX, VALID_PAYRATE,","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"huekoh"},"content":"                VALID_ADDRESS, VALID_BANK_DETAILS, VALID_WORK_HOURS, VALID_TAGS, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullFirstName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_LASTNAME, VALID_PHONE, VALID_SEX,","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"huekoh"},"content":"            VALID_PAYRATE, VALID_ADDRESS, VALID_BANK_DETAILS, VALID_WORK_HOURS, VALID_TAGS, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullLastName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, null, VALID_PHONE, VALID_SEX,","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"huekoh"},"content":"            VALID_PAYRATE, VALID_ADDRESS, VALID_BANK_DETAILS, VALID_WORK_HOURS, VALID_TAGS, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"h4ow3i"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, INVALID_PHONE, VALID_SEX, VALID_PAYRATE,","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"huekoh"},"content":"                    VALID_ADDRESS, VALID_BANK_DETAILS, VALID_WORK_HOURS, VALID_TAGS, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, null,","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"huekoh"},"content":"            VALID_SEX, VALID_PAYRATE, VALID_ADDRESS, VALID_BANK_DETAILS, VALID_WORK_HOURS, VALID_TAGS,","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"huekoh"},"content":"            VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"martinng01"},"content":"    public void toModelType_invalidSex_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"h4ow3i"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE, INVALID_SEX, VALID_PAYRATE,","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"huekoh"},"content":"                VALID_ADDRESS, VALID_BANK_DETAILS, VALID_WORK_HOURS, VALID_TAGS, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d Sex.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullSex_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"h4ow3i"},"content":"            VALID_PHONE, null, VALID_PAYRATE, VALID_ADDRESS, VALID_BANK_DETAILS, VALID_WORK_HOURS,","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"huekoh"},"content":"            VALID_TAGS, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Sex.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE,","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"huekoh"},"content":"            VALID_SEX, VALID_PAYRATE, null, VALID_BANK_DETAILS, VALID_WORK_HOURS, VALID_TAGS,","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"huekoh"},"content":"            VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"    public void toModelType_invalidBankDetails_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"martinng01"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE, VALID_SEX,","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"huekoh"},"content":"                VALID_PAYRATE, VALID_ADDRESS, INVALID_BANK_DETAILS, VALID_WORK_HOURS, VALID_TAGS, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d BankDetails.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullBankDetails_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE,","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"huekoh"},"content":"            VALID_SEX, VALID_PAYRATE, VALID_ADDRESS, null, VALID_WORK_HOURS, VALID_TAGS, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BankDetails.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"h4ow3i"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE, VALID_SEX, VALID_PAYRATE,","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"huekoh"},"content":"                    VALID_ADDRESS, VALID_BANK_DETAILS, VALID_WORK_HOURS, invalidTags, VALID_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"h4ow3i":9,"huekoh":15,"-":93,"martinng01":41}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"jxunze"},"content":"    private Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jxunze":2,"-":109}},{"path":"src/test/java/seedu/address/storage/JsonScheduleStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"import static seedu.address.testutil.TypicalSchedule.getTypicalSchedule;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"public class JsonScheduleStorageTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonScheduleStorageTest\");","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    @TempDir","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"    public Path testFolder;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"    public void readSchedule_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSchedule(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"1rbg"},"content":"    private Optional\u003cSchedule\u003e readSchedule(String filePath) throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"1rbg"},"content":"        return new JsonScheduleStorage(Paths.get(filePath)).readSchedule(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"1rbg"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"1rbg"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"1rbg"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"1rbg"},"content":"                : null;","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"1rbg"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"1rbg"},"content":"        assertFalse(readSchedule(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"1rbg"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"1rbg"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readSchedule(\"notJsonFormatSchedule.json\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"1rbg"},"content":"    public void readSchedule_invalidDateSchedule_throwDataLoadingException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"1rbg"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e readSchedule(\"invalidDateSchedule.json\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"1rbg"},"content":"    public void readAndSaveSchedule_allInOrder_success() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"1rbg"},"content":"        LocalDate april1 \u003d LocalDate.parse(\"2024-04-01\");","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"1rbg"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"1rbg"},"content":"        Schedule original \u003d getTypicalSchedule();","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"1rbg"},"content":"        JsonScheduleStorage jsonScheduleStorage \u003d new JsonScheduleStorage(filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"1rbg"},"content":"        // Save in new file and read back","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"1rbg"},"content":"        jsonScheduleStorage.saveSchedule(original, filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"1rbg"},"content":"        Schedule readBack \u003d jsonScheduleStorage.readSchedule(filePath).get();","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"1rbg"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"1rbg"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"1rbg"},"content":"        original.addPerson(HOON, april1);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"1rbg"},"content":"        original.deletePerson(ALICE, april1.minusDays(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"1rbg"},"content":"        jsonScheduleStorage.saveSchedule(original, filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"1rbg"},"content":"        readBack \u003d jsonScheduleStorage.readSchedule(filePath).get();","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"1rbg"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"1rbg"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"1rbg"},"content":"        original.addPerson(IDA, april1);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"1rbg"},"content":"        jsonScheduleStorage.saveSchedule(original); // file path not specified","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"1rbg"},"content":"        readBack \u003d jsonScheduleStorage.readSchedule().get(); // file path not specified","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"1rbg"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"1rbg"},"content":"    public void saveSchedule_nullSchedule_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"1rbg"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSchedule(null, \"SomeFile.json\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"1rbg"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"1rbg"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"1rbg"},"content":"    private void saveSchedule(Schedule schedule, String filePath) {","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"1rbg"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"1rbg"},"content":"            new JsonScheduleStorage(Paths.get(filePath))","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"1rbg"},"content":"                    .saveSchedule(schedule, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"1rbg"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"1rbg"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"1rbg"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"1rbg"},"content":"    public void saveSchedule_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"1rbg"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSchedule(new ScheduleManager(), null));","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":108}},{"path":"src/test/java/seedu/address/storage/JsonSerializableScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"public class JsonSerializableScheduleTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableScheduleTest\");","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    private static final Path INVALID_DATE_SCHEDULE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidDateSchedule.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"    private static final Path INVALID_PERSON_SCHEDULE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidDateSchedule.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"    public void toModelType_invalidDateFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"        JsonSerializableSchedule dataFromFile \u003d JsonUtil.readJsonFile(INVALID_DATE_SCHEDULE_FILE,","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"                JsonSerializableSchedule.class).get();","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"        JsonSerializableSchedule dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_SCHEDULE_FILE,","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"                JsonSerializableSchedule.class).get();","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":33}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"        JsonScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(getTempFilePath(\"sched\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"1rbg":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"jxunze"},"content":"        descriptor.setFirstName(person.getFirstName());","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"jxunze"},"content":"        descriptor.setLastName(person.getLastName());","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"jxunze"},"content":"        descriptor.setSex(person.getSex());","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"        descriptor.setPayRate(person.getPayRate());","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"jxunze"},"content":"        descriptor.setBankDetails(person.getBankDetails());","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"jxunze"},"content":"     * Sets the {@code FirstName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"jxunze"},"content":"    public EditPersonDescriptorBuilder withFirstName(String name) {","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"jxunze"},"content":"        descriptor.setFirstName(new Name(name));","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"     * Sets the {@code LastName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"jxunze"},"content":"    public EditPersonDescriptorBuilder withLastName(String name) {","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"jxunze"},"content":"        descriptor.setLastName(new Name(name));","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"jxunze"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"jxunze"},"content":"     * Sets the {@code Sex} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"jxunze"},"content":"    public EditPersonDescriptorBuilder withSex(String sex) {","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"jxunze"},"content":"        descriptor.setSex(new Sex(sex));","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"jxunze"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"jxunze"},"content":"     * Sets the {@code EmploymentType} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"jxunze"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"h4ow3i"},"content":"    public EditPersonDescriptorBuilder withPayRate(double payRate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"h4ow3i"},"content":"        descriptor.setPayRate(new PayRate(payRate));","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"jxunze"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"jxunze"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"jxunze"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"jxunze"},"content":"     * Sets the {@code BankDetails} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"jxunze"},"content":"    public EditPersonDescriptorBuilder withBankDetails(String bankDetails) {","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"jxunze"},"content":"        descriptor.setBankDetails(new BankDetails(bankDetails));","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"jxunze":36,"h4ow3i":4,"-":78}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.ArchiveStatus;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.PayRate;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"huekoh"},"content":"import seedu.address.model.person.WorkHours;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public static final String DEFAULT_FIRSTNAME \u003d \"Amy\";","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    public static final String DEFAULT_LASTNAME \u003d \"Bee\";","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"    public static final String DEFAULT_SEX \u003d \"f\";","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"    public static final double DEFAULT_PAY_RATE \u003d 15;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"huekoh"},"content":"    public static final String DEFAULT_BANK_ADDRESS \u003d \"ocbc 8374219\";","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"    public static final int DEFAULT_WORK_HOURS \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"huekoh"},"content":"    public static final boolean DEFAULT_ARCHIVE_STATUS \u003d false;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    private Name firstName;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    private Name lastName;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    private Sex sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"h4ow3i"},"content":"    private PayRate payRate;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    private BankDetails bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"    private WorkHours hoursWorked;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"huekoh"},"content":"    private ArchiveStatus archiveStatus;","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        firstName \u003d new Name(DEFAULT_FIRSTNAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        lastName \u003d new Name(DEFAULT_LASTNAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"        sex \u003d new Sex(DEFAULT_SEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"h4ow3i"},"content":"        payRate \u003d new PayRate(DEFAULT_PAY_RATE);","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        bankDetails \u003d new BankDetails(DEFAULT_BANK_ADDRESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"h4ow3i"},"content":"        hoursWorked \u003d new WorkHours(DEFAULT_WORK_HOURS);","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"huekoh"},"content":"        archiveStatus \u003d new ArchiveStatus(DEFAULT_ARCHIVE_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"        firstName \u003d personToCopy.getFirstName();","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        lastName \u003d personToCopy.getLastName();","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"        sex \u003d personToCopy.getSex();","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"h4ow3i"},"content":"        payRate \u003d personToCopy.getPayRate();","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        bankDetails \u003d personToCopy.getBankDetails();","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"huekoh"},"content":"        archiveStatus \u003d personToCopy.getArchiveStatus();","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code firstName} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"    public PersonBuilder withFirstName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"        this.firstName \u003d new Name(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code lastName} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"    public PersonBuilder withLastName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"        this.lastName \u003d new Name(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code Sex} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"martinng01"},"content":"    public PersonBuilder withSex(String sex) {","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"        this.sex \u003d new Sex(sex);","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code EmploymentType} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"h4ow3i"},"content":"    public PersonBuilder withPayRate(double payRate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"h4ow3i"},"content":"        this.payRate \u003d new PayRate(payRate);","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code BankDetails} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":135,"author":{"gitId":"martinng01"},"content":"    public PersonBuilder withBankDetails(String bankDetails) {","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"martinng01"},"content":"        this.bankDetails \u003d new BankDetails(bankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":140,"author":{"gitId":"h4ow3i"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"h4ow3i"},"content":"     * Sets the {@code WorkHours} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"h4ow3i"},"content":"    public PersonBuilder withWorkedHours(int hoursWorked) {","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"h4ow3i"},"content":"        this.hoursWorked \u003d new WorkHours(hoursWorked);","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"huekoh"},"content":"     * Sets the {@code ArchiveStatus} of the {@code Person} that we are building.","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"huekoh"},"content":"    public PersonBuilder withArchiveStatus(boolean archiveStatus) {","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"huekoh"},"content":"        this.archiveStatus \u003d new ArchiveStatus(archiveStatus);","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"huekoh"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"huekoh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"huekoh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"huekoh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"huekoh"},"content":"     * Builds the person object.","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"huekoh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":160,"author":{"gitId":"huekoh"},"content":"        return new Person(firstName, lastName, phone, sex, payRate, address, bankDetails, hoursWorked,","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"huekoh"},"content":"                tags, archiveStatus);","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"h4ow3i":13,"huekoh":23,"-":86,"martinng01":42}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAYRATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        sb.append(PREFIX_FIRSTNAME + person.getFirstName().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        sb.append(PREFIX_LASTNAME + person.getLastName().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        sb.append(PREFIX_SEX + person.getSex().value + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"h4ow3i"},"content":"        sb.append(PREFIX_PAYRATE);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"h4ow3i"},"content":"        sb.append(person.getPayRate().value);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"h4ow3i"},"content":"        sb.append(\" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        sb.append(PREFIX_BANKDETAILS + person.getBankDetails().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"jxunze"},"content":"        descriptor.getFirstName().ifPresent(name -\u003e sb.append(PREFIX_FIRSTNAME).append(name.value).append(","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"            \" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"jxunze"},"content":"        descriptor.getLastName().ifPresent(name -\u003e sb.append(PREFIX_LASTNAME).append(name.value).append(","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"            \" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"jxunze"},"content":"        descriptor.getSex().ifPresent(sex -\u003e sb.append(PREFIX_SEX).append(sex.value).append(\" \"));","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"h4ow3i"},"content":"        descriptor.getPayRate().ifPresent(payRate -\u003e sb.append(PREFIX_PAYRATE).append(","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"h4ow3i"},"content":"            payRate.value).append(\" \"));","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"jxunze"},"content":"        descriptor.getBankDetails().ifPresent(bankDetails -\u003e sb.append(PREFIX_BANKDETAILS).append(bankDetails.value)","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"jxunze"},"content":"                .append(\" \"));","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jxunze":5,"h4ow3i":6,"-":56,"martinng01":10}},{"path":"src/test/java/seedu/address/testutil/ScheduleDateBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":" * A utility class to help with building ScheduleDate objects.","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"public class ScheduleDateBuilder {","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"    private ScheduleDate scheduleDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"    public ScheduleDateBuilder(LocalDate localDate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"        scheduleDate \u003d new ScheduleDate(localDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"    public ScheduleDateBuilder(ScheduleDate scheduleDate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"        this.scheduleDate \u003d scheduleDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"    * Adds a new {@code Person} to the {@code ScheduleDate} that we are building.","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"    */","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"    public ScheduleDateBuilder withPerson(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"        scheduleDate.addPerson(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"        return this;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"    public ScheduleDate build() {","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"        return scheduleDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":33}},{"path":"src/test/java/seedu/address/testutil/ScheduleManagerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":" * A utility class to help with building ScheduleManager objects.","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"public class ScheduleManagerBuilder {","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"    private ScheduleManager scheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"    public ScheduleManagerBuilder() {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"        scheduleManager \u003d new ScheduleManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"    public ScheduleManagerBuilder(ScheduleManager scheduleManager) {","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"        this.scheduleManager \u003d scheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"    * Adds a new {@code ScheduleDate} to the {@code ScheduleManager} that we are building.","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    */","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"    public ScheduleManagerBuilder withScheduleDate(ScheduleDate scheduleDate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"        scheduleManager.addScheduleDate(scheduleDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"        return this;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"1rbg"},"content":"    public ScheduleManager build() {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"1rbg"},"content":"        return scheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":31}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"jxunze"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jxunze":1,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKDETAILS_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKDETAILS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAYRATE_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PAYRATE_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_COOK;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WAITER;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WORK_HOURS_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"h4ow3i"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WORK_HOURS_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Alice\")","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Pauline\")","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        .withSex(\"f\")","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(14.5)","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        .withTags(\"friends\")","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"huekoh"},"content":"        .withBankDetails(\"dbs 1234567890\")","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Benson\")","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Meier\")","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(14.5)","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"98765432\")","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"huekoh"},"content":"        .withBankDetails(\"ocbc 1234567\")","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Carl\")","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Kurz\")","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"95352563\")","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(14.5)","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"wall street\")","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"huekoh"},"content":"        .withBankDetails(\"hsbc 0987654321\")","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Daniel\")","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Meier\")","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"87652533\")","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(14.5)","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"10th street\")","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"        .withTags(\"friends\")","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"huekoh"},"content":"        .withBankDetails(\"uob 8888777700\")","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Elle\")","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Meyer\")","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"94823224\")","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"        .withSex(\"f\")","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(14.5)","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"michegan ave\")","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"huekoh"},"content":"        .withBankDetails(\"posb 369369369\")","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Fiona\")","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Kunz\")","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"94823427\")","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"        .withSex(\"f\")","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(14.5)","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"little tokyo\")","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"huekoh"},"content":"        .withBankDetails(\"ocbc 7654321\")","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"George\")","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Best\")","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"93482442\")","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(14.5)","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"4th street\")","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"huekoh"},"content":"        .withBankDetails(\"other maybank 5554443332\")","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Hoon\")","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Meier\")","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"84832424\")","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(14.5)","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"little india\")","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"martinng01"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Ida\")","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Mueller\")","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"84821331\")","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"        .withSex(\"f\")","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(14.5)","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"chicago ave\")","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"martinng01"},"content":"        .withFirstName(VALID_FIRSTNAME_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"        .withLastName(VALID_LASTNAME_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"        .withSex(VALID_SEX_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(VALID_PAYRATE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"martinng01"},"content":"        .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"h4ow3i"},"content":"        .withBankDetails(VALID_BANKDETAILS_AMY).withWorkedHours(VALID_WORK_HOURS_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"huekoh"},"content":"        .withTags(VALID_TAG_COOK)","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"huekoh"},"content":"        .build();","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"        .withFirstName(VALID_FIRSTNAME_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"        .withLastName(VALID_LASTNAME_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"martinng01"},"content":"        .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"        .withSex(VALID_SEX_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"h4ow3i"},"content":"        .withPayRate(VALID_PAYRATE_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"martinng01"},"content":"        .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"h4ow3i"},"content":"        .withBankDetails(VALID_BANKDETAILS_BOB).withWorkedHours(VALID_WORK_HOURS_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"1rbg"},"content":"        .withTags(VALID_TAG_WAITER, VALID_TAG_COOK)","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"huekoh"},"content":"        .withArchiveStatus(false)","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":154,"author":{"gitId":"martinng01"},"content":"    private TypicalPersons() {","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"martinng01"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"1rbg":3,"h4ow3i":17,"huekoh":20,"-":45,"martinng01":86}},{"path":"src/test/java/seedu/address/testutil/TypicalSchedule.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"1rbg"},"content":"import seedu.address.model.schedule.ScheduleManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"public class TypicalSchedule {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"    private static final LocalDate april1 \u003d LocalDate.parse(\"2024-04-01\");","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"    public static final ScheduleManager SCHEDULE \u003d new ScheduleManagerBuilder()","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"            .withScheduleDate(new ScheduleDateBuilder(april1.minusDays(1))","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"1rbg"},"content":"                    .withPerson(TypicalPersons.ALICE)","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"                    .withPerson(TypicalPersons.BENSON).build())","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"            .withScheduleDate(new ScheduleDateBuilder(april1).withPerson(TypicalPersons.BENSON).build())","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"            .build();","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"    private TypicalSchedule() {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"1rbg"},"content":"    public static ScheduleManager getTypicalSchedule() {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"1rbg"},"content":"        return SCHEDULE;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"1rbg"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"1rbg"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"1rbg":25}}]
