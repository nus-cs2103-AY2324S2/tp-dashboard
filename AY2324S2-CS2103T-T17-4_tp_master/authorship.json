[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"1rbg"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T17-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T17-4/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T17-4/tp/graph/badge.svg?token\u003dLPV8FKMOGM)](https://codecov.io/gh/AY2324S2-CS2103T-T17-4/tp)","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"1rbg"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"1rbg"},"content":"# BistroBoss","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"1rbg"},"content":"BistroBoss is a desktop application for managing staff and operations in a restaurant.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"1rbg"},"content":"It streamlines the process of salary distribution, shift scheduling, and manpower allocation for various staff roles.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"1rbg"},"content":"With the high turnover rate in the F\u0026B industry, particularly among part-time student employees,","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"the tool also features an archiving function to retain ex-staff records for potential future reemployment.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"1rbg"},"content":"  * As a bistro manager, I can store the contact and banking details of my employees for easy referral when I want to contact them or transfer their salary.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"  * As a bistro manager, I can remove the details of my employees so that I can free up space in my address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"  * As a bistro manager, I can view the contacts of all my employees so that I can have an overview of all contacts in my address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"  * As a bistro manager, I can use the application to store the accumulated work hours of my employee for later use of salary calculation.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"1rbg"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"For the detailed documentation of this project, see the **[BistroBoss Product Website](https://ay2324s2-cs2103t-t17-4.github.io/tp/)**.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"1rbg":15,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"1rbg"},"content":"### Chua Joon Peng, Gabriel","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jxunze"},"content":"\u003cimg src\u003d\"images/1rbg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"1rbg"},"content":"[[homepage](https://www.linkedin.com/in/gabriel-chua-087543229/)]","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"1rbg"},"content":"[[github](https://github.com/1rbg)]","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"1rbg"},"content":"[[portfolio](team/gabrielchua.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"1rbg"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"1rbg"},"content":"* Responsibilities: Documentation + UI","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"h4ow3i"},"content":"### Teo Hao Wei","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jxunze"},"content":"\u003cimg src\u003d\"images/h4ow3i.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"h4ow3i"},"content":"[[github](http://github.com/h4ow3i)]","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"h4ow3i"},"content":"[[portfolio](team/teohaowei.md)]","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"h4ow3i"},"content":"* Role: Developer","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"h4ow3i"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"huekoh"},"content":"### Hue Koh","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"huekoh"},"content":"\u003cimg src\u003d\"images/huekoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"huekoh"},"content":"[[github](http://github.com/huekoh)] ","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"huekoh"},"content":"[[portfolio](team/huekoh.md)]","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"huekoh"},"content":"* Responsibilities: Task Scheduling + UI","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"huekoh"},"content":"### Martin Ng Jinn Kai","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jxunze"},"content":"\u003cimg src\u003d\"images/martinng01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"huekoh"},"content":"[[github](http://github.com/martinng01)]","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"huekoh"},"content":"[[portfolio](team/martinng.md)]","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"huekoh"},"content":"* Responsibilities: Testing","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### James Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jxunze"},"content":"\u003cimg src\u003d\"images/jxunze.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jxunze"},"content":"[[github](http://github.com/jxunze)]","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"jxunze"},"content":"[[portfolio](team/jinxunze.md)]","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"jxunze"},"content":"* Responsibilities: Integration","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"1rbg":6,"jxunze":7,"h4ow3i":5,"huekoh":9,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"  original source as well}","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"and edit diagrams.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"**`Main`** (consisting of","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"the command `delete 1`.","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"The **API** of this component is specified","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"visible GUI.","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"is specified","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"**API","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"martinng01"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"call as an example.","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"   several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"martinng01"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"  a `Command` object.","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"martinng01"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"martinng01"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"martinng01"},"content":"**API","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"martinng01"},"content":"** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"martinng01"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"martinng01"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"martinng01"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"martinng01"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"martinng01"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"martinng01"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"martinng01"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"martinng01"},"content":"**API","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"martinng01"},"content":"** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"martinng01"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"martinng01"},"content":"  objects.","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"martinng01"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"martinng01"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"martinng01"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"martinng01"},"content":"  that belong to the `Model`)","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"martinng01"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"martinng01"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"martinng01"},"content":"following operations:","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"martinng01"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"martinng01"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"martinng01"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"martinng01"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"martinng01"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"martinng01"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"martinng01"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"martinng01"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"martinng01"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"martinng01"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"martinng01"},"content":"state.","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"martinng01"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"martinng01"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"martinng01"},"content":"the `addressBookStateList`.","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"martinng01"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"martinng01"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"martinng01"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":261,"author":{"gitId":"martinng01"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"martinng01"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2024-03-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"martinng01"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2024-03-11"},{"lineNumber":269,"author":{"gitId":"martinng01"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"martinng01"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"martinng01"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"martinng01"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"martinng01"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"martinng01"},"content":"desktop applications follow.","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"huekoh"},"content":"* has a need to manage a significant number of employee contacts and banking details","lastModifiedDate":"2024-03-10"},{"lineNumber":324,"author":{"gitId":"huekoh"},"content":"* has a need to track employee worked hours","lastModifiedDate":"2024-03-10"},{"lineNumber":325,"author":{"gitId":"huekoh"},"content":"* has a need to tabulate payroll for employees with different pay rates","lastModifiedDate":"2024-03-10"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"huekoh"},"content":"**Value proposition**: manage employee salary disbursement faster than a typical exel sheet with manual calculations.","lastModifiedDate":"2024-03-10"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                        | I want to …​                                       | So that I can…​                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"huekoh"},"content":"|----------|----------------------------------------------------------------|----------------------------------------------------|-----------------------------------------------------------------------|","lastModifiedDate":"2024-03-10"},{"lineNumber":339,"author":{"gitId":"huekoh"},"content":"| `* *`    | new user                                                       | see a tutorial and usage instructions              | familiarise with BistroBoss\u0027 features                                 |","lastModifiedDate":"2024-03-10"},{"lineNumber":340,"author":{"gitId":"huekoh"},"content":"| `* * *`  | user                                                           | add an employee contact with banking details       | quickly access the employee\u0027s banking details for salary disbursement |","lastModifiedDate":"2024-03-10"},{"lineNumber":341,"author":{"gitId":"huekoh"},"content":"| `* * *`  | user                                                           | delete an employee contact                         | remove entries that I no longer need                                  |","lastModifiedDate":"2024-03-10"},{"lineNumber":342,"author":{"gitId":"huekoh"},"content":"| `* * *`  | user                                                           | view all employee contacts                         |                                                                       |","lastModifiedDate":"2024-03-10"},{"lineNumber":343,"author":{"gitId":"huekoh"},"content":"| `* *`    | user                                                           | track an employee\u0027s weekly worked hours            | access it for employee salary calculation                             |","lastModifiedDate":"2024-03-10"},{"lineNumber":344,"author":{"gitId":"huekoh"},"content":"| `* *`    | user handling employees with a variety of employment contracts | tag an employee contact with their employment type | retrieve the salary rate of the employee                              |","lastModifiedDate":"2024-03-10"},{"lineNumber":345,"author":{"gitId":"huekoh"},"content":"| `* *`    | user with human error tendencies                               | retrieve an employee\u0027s calculated pay              | avoid paying out an incorrect salary amount                           |","lastModifiedDate":"2024-03-10"},{"lineNumber":346,"author":{"gitId":"huekoh"},"content":"| `* *`    | user                                                           | edit an employee contact details                   | keep the employee\u0027s details up to date                                |","lastModifiedDate":"2024-03-10"},{"lineNumber":347,"author":{"gitId":"huekoh"},"content":"| `*`      | user with many employees                                       | sort employees contacts by name                    | locate the employee contact easily                                    |","lastModifiedDate":"2024-03-10"},{"lineNumber":348,"author":{"gitId":"huekoh"},"content":"| `*`      | user with potential returning employees                        | archive an employee contact                        | reopen the employee\u0027s details when they return easily                 |","lastModifiedDate":"2024-03-10"},{"lineNumber":349,"author":{"gitId":"huekoh"},"content":"| `*`      | user with forgetfulness                                        | search for contacts by keyword                     | find contacts without needing to provide their full name              |","lastModifiedDate":"2024-03-10"},{"lineNumber":350,"author":{"gitId":"huekoh"},"content":"| `*`      | user with many employees                                       | filter employee contacts by tag(s)                 | identify which employee(s) are of that employment type                |","lastModifiedDate":"2024-03-10"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"h4ow3i"},"content":"(For all use cases below, the **System** is the `BistroBoss` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-10"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"h4ow3i"},"content":"**Use case: Add an employee**","lastModifiedDate":"2024-03-10"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"h4ow3i"},"content":"1.  User requests to add employee contact","lastModifiedDate":"2024-03-10"},{"lineNumber":363,"author":{"gitId":"h4ow3i"},"content":"2.  BistroBoss requests contact information of employee","lastModifiedDate":"2024-03-10"},{"lineNumber":364,"author":{"gitId":"h4ow3i"},"content":"3.  User provides required information","lastModifiedDate":"2024-03-10"},{"lineNumber":365,"author":{"gitId":"h4ow3i"},"content":"4.  BistroBoss adds the employee contact","lastModifiedDate":"2024-03-10"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"h4ow3i"},"content":"* 3a. The given contact information is invalid.","lastModifiedDate":"2024-03-10"},{"lineNumber":372,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":373,"author":{"gitId":"h4ow3i"},"content":"    * 3a1. BistroBoss shows an error message.","lastModifiedDate":"2024-03-10"},{"lineNumber":374,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":375,"author":{"gitId":"h4ow3i"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-10"},{"lineNumber":376,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":377,"author":{"gitId":"h4ow3i"},"content":"**Use case: Delete an employee**","lastModifiedDate":"2024-03-10"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":379,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-10"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":381,"author":{"gitId":"h4ow3i"},"content":"1.  User requests to delete an employee contact","lastModifiedDate":"2024-03-10"},{"lineNumber":382,"author":{"gitId":"h4ow3i"},"content":"2.  BistroBoss requests employee contact ","lastModifiedDate":"2024-03-10"},{"lineNumber":383,"author":{"gitId":"h4ow3i"},"content":"3.  User provides required information","lastModifiedDate":"2024-03-10"},{"lineNumber":384,"author":{"gitId":"h4ow3i"},"content":"4.  BistroBoss deletes the employee contact","lastModifiedDate":"2024-03-10"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-10"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"h4ow3i"},"content":"* 2a. The contact book is empty.","lastModifiedDate":"2024-03-10"},{"lineNumber":391,"author":{"gitId":"h4ow3i"},"content":"    * 2a1. BistroBoss shows an error message.","lastModifiedDate":"2024-03-10"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":393,"author":{"gitId":"h4ow3i"},"content":"        Use case ends","lastModifiedDate":"2024-03-10"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":396,"author":{"gitId":"h4ow3i"},"content":"* 3a. The given contact information is invalid.","lastModifiedDate":"2024-03-10"},{"lineNumber":397,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":398,"author":{"gitId":"h4ow3i"},"content":"    * 3a1. BistroBoss shows an error message.","lastModifiedDate":"2024-03-10"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"h4ow3i"},"content":"**Use case: List all employee contacts**","lastModifiedDate":"2024-03-10"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":404,"author":{"gitId":"h4ow3i"},"content":"**MSS**","lastModifiedDate":"2024-03-10"},{"lineNumber":405,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":406,"author":{"gitId":"h4ow3i"},"content":"1.  User requests to list all employee contacts","lastModifiedDate":"2024-03-10"},{"lineNumber":407,"author":{"gitId":"h4ow3i"},"content":"2.  BistroBoss lists all employee contacts","lastModifiedDate":"2024-03-10"},{"lineNumber":408,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":409,"author":{"gitId":"h4ow3i"},"content":"    Use case ends.","lastModifiedDate":"2024-03-10"},{"lineNumber":410,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":411,"author":{"gitId":"h4ow3i"},"content":"**Extensions**","lastModifiedDate":"2024-03-10"},{"lineNumber":412,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":413,"author":{"gitId":"h4ow3i"},"content":"* 2a. The contact book is empty.","lastModifiedDate":"2024-03-10"},{"lineNumber":414,"author":{"gitId":"h4ow3i"},"content":"    * 2a1. BistroBoss shows an error message.","lastModifiedDate":"2024-03-10"},{"lineNumber":415,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":416,"author":{"gitId":"h4ow3i"},"content":"      Use case ends","lastModifiedDate":"2024-03-10"},{"lineNumber":417,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":418,"author":{"gitId":"h4ow3i"},"content":"**Use case: Track employee\u0027s work hours**","lastModifiedDate":"2024-03-10"},{"lineNumber":419,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":420,"author":{"gitId":"h4ow3i"},"content":"**MSS**","lastModifiedDate":"2024-03-10"},{"lineNumber":421,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":422,"author":{"gitId":"h4ow3i"},"content":"1.  User requests to add employee\u0027s work hours","lastModifiedDate":"2024-03-10"},{"lineNumber":423,"author":{"gitId":"h4ow3i"},"content":"2.  BistroBoss requests employee contact and work hours","lastModifiedDate":"2024-03-10"},{"lineNumber":424,"author":{"gitId":"h4ow3i"},"content":"3.  User provides required information","lastModifiedDate":"2024-03-10"},{"lineNumber":425,"author":{"gitId":"h4ow3i"},"content":"4.  BistroBoss tracks the employee\u0027s work hours","lastModifiedDate":"2024-03-10"},{"lineNumber":426,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":427,"author":{"gitId":"h4ow3i"},"content":"    Use case ends.","lastModifiedDate":"2024-03-10"},{"lineNumber":428,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":429,"author":{"gitId":"h4ow3i"},"content":"**Extensions**","lastModifiedDate":"2024-03-10"},{"lineNumber":430,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":431,"author":{"gitId":"h4ow3i"},"content":"* 2a. The contact book is empty.","lastModifiedDate":"2024-03-10"},{"lineNumber":432,"author":{"gitId":"h4ow3i"},"content":"    * 2a1. BistroBoss shows an error message.","lastModifiedDate":"2024-03-10"},{"lineNumber":433,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":434,"author":{"gitId":"h4ow3i"},"content":"      Use case ends","lastModifiedDate":"2024-03-10"},{"lineNumber":435,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":436,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":437,"author":{"gitId":"h4ow3i"},"content":"* 3a. The given contact information or working hours is invalid.","lastModifiedDate":"2024-03-10"},{"lineNumber":438,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":439,"author":{"gitId":"h4ow3i"},"content":"    * 3a1. BistroBoss shows an error message.","lastModifiedDate":"2024-03-10"},{"lineNumber":440,"author":{"gitId":"h4ow3i"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":441,"author":{"gitId":"h4ow3i"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-10"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":444,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"martinng01"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2024-03-11"},{"lineNumber":451,"author":{"gitId":"martinng01"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-11"},{"lineNumber":452,"author":{"gitId":"martinng01"},"content":"4. The app should be highly reliable, minimizing downtime and ensuring continuous availability during operational hours.","lastModifiedDate":"2024-03-11"},{"lineNumber":453,"author":{"gitId":"martinng01"},"content":"5. It should have built-in mechanisms for data backup and recovery to prevent loss of employee contact information.","lastModifiedDate":"2024-03-11"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"jxunze"},"content":"* **Worked hours**: The number of hours an employee has spent working in a month","lastModifiedDate":"2024-03-14"},{"lineNumber":460,"author":{"gitId":"jxunze"},"content":"* **Bank Details**: Account number for salary disbursement, 7-11 digits in length.","lastModifiedDate":"2024-03-14"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"martinng01"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2024-03-11"},{"lineNumber":480,"author":{"gitId":"martinng01"},"content":"       optimum.","lastModifiedDate":"2024-03-11"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"martinng01"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-03-11"},{"lineNumber":499,"author":{"gitId":"martinng01"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2024-03-11"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jxunze":2,"h4ow3i":62,"huekoh":17,"-":331,"martinng01":103}},{"path":"docs/team/gabrielchua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"1rbg"},"content":"title: Gabriel Chua\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"1rbg":1,"-":45}},{"path":"docs/team/huekoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"huekoh"},"content":"title: Hue Koh\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"huekoh"},"content":"### Project: BistroBoss","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"huekoh":2,"-":44}},{"path":"docs/team/jinxunze.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jxunze"},"content":"title: Jin Xunze\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jxunze":1,"-":45}},{"path":"docs/team/martinng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"title: Martin Ng\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"      by using the redo command.","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"      commands.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"      requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":39,"martinng01":14}},{"path":"docs/team/teohaowei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"h4ow3i"},"content":"title: Teo Hao Wei\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"h4ow3i"},"content":"### Project: BistroBoss","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"h4ow3i":2,"-":44}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":37,"martinng01":4}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"                .append(\"; Sex: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"                .append(person.getSex())","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"                .append(\"; Employment Type: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"                .append(person.getEmploymentType())","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"                .append(\"; Bank Details: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"                .append(person.getBankDetails())","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":49,"martinng01":6}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENTTYPE;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"            + PREFIX_FIRSTNAME + \"FIRST NAME \"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"            + PREFIX_LASTNAME + \"LAST NAME \"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            + PREFIX_SEX + \"SEX \"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            + PREFIX_EMPLOYMENTTYPE + \"EMPLOYMENT TYPE \"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            + \"[\" + PREFIX_BANKDETAILS + \"BANK DETAILS] \"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            + PREFIX_FIRSTNAME + \"John \"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"            + PREFIX_LASTNAME + \"Doe \"","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"            + PREFIX_SEX + \"m \"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"            + PREFIX_EMPLOYMENTTYPE + \"ft \"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":77,"martinng01":16}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person\"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            + \" identified \"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"        return new Person(new Name(\"\"), new Name(\"\"), new Phone(\"\"), new Sex(\"\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"                new EmploymentType(\"\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"                new Address(\"\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"                new BankDetails(\"\"), new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"martinng01"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, address, tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"martinng01"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"martinng01"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"martinng01"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"martinng01"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"martinng01"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"martinng01"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"martinng01"},"content":"        /**","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"martinng01"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"martinng01"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"martinng01"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"martinng01"},"content":"         */","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"martinng01"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"martinng01"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":190,"martinng01":40}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENTTYPE;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_FIRSTNAME, PREFIX_LASTNAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"                PREFIX_SEX, PREFIX_EMPLOYMENTTYPE, PREFIX_ADDRESS, PREFIX_BANKDETAILS,","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"                PREFIX_TAG);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FIRSTNAME, PREFIX_LASTNAME,","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"            PREFIX_PHONE, PREFIX_SEX, PREFIX_EMPLOYMENTTYPE)","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_FIRSTNAME, PREFIX_LASTNAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"            PREFIX_SEX, PREFIX_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"            PREFIX_ADDRESS, PREFIX_BANKDETAILS);","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        Name firstName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_FIRSTNAME).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"        Name lastName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_LASTNAME).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        Sex sex \u003d ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"        EmploymentType employmentType \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"            ParserUtil.parseEmploymentType(argMultimap.getValue(PREFIX_EMPLOYMENTTYPE).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"        BankDetails bankDetails \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"            ParserUtil.parseBankDetails(argMultimap.getValue(PREFIX_BANKDETAILS).orElse(\"\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"        Person person \u003d new Person(firstName, lastName, phone, sex, employmentType, address,","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"            bankDetails,","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"            tagList);","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":43,"martinng01":37}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        private int startPosition;","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":146,"martinng01":2}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_FIRSTNAME \u003d new Prefix(\"-fn \");","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_LASTNAME \u003d new Prefix(\"-ln \");","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-m \");","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_SEX \u003d new Prefix(\"-s \");","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_EMPLOYMENTTYPE \u003d new Prefix(\"-e \");","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-a \");","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_BANKDETAILS \u003d new Prefix(\"-b \");","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-t \");","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":10,"martinng01":8}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        /*ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        return new EditCommand(index, editPersonDescriptor);*/","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        return null;","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":76,"martinng01":4}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"     * Parses a {@code String sex} into a {@code Sex}.","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"     * @throws ParseException if the given {@code sex} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"    public static Sex parseSex(String sex) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"        requireNonNull(sex);","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"        String trimmedSex \u003d sex.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"        if (!Sex.isValidSex(trimmedSex)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"            throw new ParseException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"        return new Sex(trimmedSex);","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"     * Parses a {@code String employmentType} into a {@code EmploymentType}.","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"     * @throws ParseException if the given {@code employmentType} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"    public static EmploymentType parseEmploymentType(String employmentType) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"        requireNonNull(employmentType);","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"        String trimmedEmploymentType \u003d employmentType.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"        if (!EmploymentType.isValidEmploymentType(trimmedEmploymentType)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"            throw new ParseException(EmploymentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"        return new EmploymentType(trimmedEmploymentType);","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"     * Parses a {@code String bankDetails} into an {@code BankDetails}.","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"     * @throws ParseException if the given {@code bankDetails} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"    public static BankDetails parseBankDetails(String bankDetails) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"        requireNonNull(bankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"        String trimmedBankDetails \u003d bankDetails.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"martinng01"},"content":"        if (!BankDetails.isValidBankAccount(trimmedBankDetails)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"            throw new ParseException(BankDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"        return new BankDetails(trimmedBankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":115,"martinng01":42}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values\";","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^.*$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":63,"martinng01":2}},{"path":"src/main/java/seedu/address/model/person/BankDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * Represents a Person\u0027s bank details in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBankAccount(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"public class BankDetails {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Bank details can only contain numbers \"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        + \"and it should not contain a dash (-)\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d*$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    public final String value;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * Constructs an {@code BankDetails}.","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * @param bankDetails A valid bank account.","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public BankDetails(String bankDetails) {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        requireNonNull(bankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        checkArgument(isValidBankAccount(bankDetails), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        value \u003d bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     * Returns true if a given string is a valid bank account.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    public static boolean isValidBankAccount(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        return value;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        if (!(other instanceof BankDetails)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        BankDetails otherBankDetails \u003d (BankDetails) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        return value.equals(otherBankDetails.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"martinng01":61}},{"path":"src/main/java/seedu/address/model/person/EmploymentType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * Represents a Person\u0027s employment type in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmploymentType(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"public class EmploymentType {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"            \"Employment type should only be either \u0027pt\u0027 or \u0027ft\u0027.\";","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(pt|ft)$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public final String value;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * Constructs an {@code EmploymentType}.","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * @param employmentType A valid employment type.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public EmploymentType(String employmentType) {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        requireNonNull(employmentType);","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        checkArgument(isValidEmploymentType(employmentType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        value \u003d employmentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     * Returns true if a given string is a valid employment type.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    public static boolean isValidEmploymentType(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        return value;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        if (!(other instanceof EmploymentType)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        EmploymentType otherEmploymentType \u003d (EmploymentType) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        return value.equals(otherEmploymentType.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"martinng01":61}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?! )[a-zA-Z0-9 ]*$\";","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    public final String value;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        value \u003d name;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        return value;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        return value.equals(otherName.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":61,"martinng01":6}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().value, keyword));","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":43,"martinng01":1}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    private final Name firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    private final Name lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    private final Sex sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"    private final EmploymentType employmentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"    private final BankDetails bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    public Person(Name firstName, Name lastName, Phone phone, Sex sex,","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"                  EmploymentType employmentType, Address address,","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"                  BankDetails bankDetails, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        requireAllNonNull(firstName, lastName, phone, address, bankDetails, tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        this.firstName \u003d firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        this.lastName \u003d lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        this.employmentType \u003d employmentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        this.bankDetails \u003d bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        return new Name(firstName + \" \" + lastName);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"    public Name getFirstName() {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        return firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    public Name getLastName() {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        return lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"    public Sex getSex() {","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        return sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"    public EmploymentType getEmploymentType() {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"        return employmentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"    public BankDetails getBankDetails() {","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        return bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"                \u0026\u0026 otherPerson.firstName.equals(firstName)","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"                \u0026\u0026 otherPerson.lastName.equals(lastName)","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"                \u0026\u0026 otherPerson.phone.equals(phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"martinng01"},"content":"        return getName().equals(otherPerson.getName())","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"                \u0026\u0026 sex.equals(otherPerson.sex)","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"                \u0026\u0026 employmentType.equals(otherPerson.employmentType)","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"                \u0026\u0026 bankDetails.equals(otherPerson.bankDetails)","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"        return Objects.hash(firstName, lastName, phone, sex, employmentType, address, bankDetails,","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"                tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"martinng01"},"content":"                .add(\"firstName\", firstName)","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"martinng01"},"content":"                .add(\"lastName\", lastName)","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"                .add(\"sex\", sex)","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"                .add(\"employmentType\", employmentType)","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"                .add(\"bankDetails\", bankDetails)","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":102,"martinng01":47}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"            \"Phone numbers should only contain numbers, and it should be only 8 digits long\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{8}$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":59,"martinng01":2}},{"path":"src/main/java/seedu/address/model/person/Sex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * Represents a Person\u0027s sex in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSex(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"public class Sex {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        \"Sex should only be either \u0027m\u0027 or \u0027f\u0027.\";","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[mf]$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public final String value;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * Constructs an {@code Sex}.","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * @param sex A valid sex.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public Sex(String sex) {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        requireNonNull(sex);","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        checkArgument(isValidSex(sex), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        value \u003d sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     * Returns true if a given string is a valid sex.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    public static boolean isValidSex(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        return value;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        if (!(other instanceof Sex)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        Sex otherSex \u003d (Sex) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        return value.equals(otherSex.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"martinng01":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"            new Person(new Name(\"Alex\"), new Name(\"Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"                new Sex(\"m\"), new EmploymentType(\"ft\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new BankDetails(\"9102031012\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"            new Person(new Name(\"Bernice\"), new Name(\"Yu\"), new Phone(\"99272758\"), new Sex(\"f\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"                new EmploymentType(\"pt\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new BankDetails(\"084102395\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            new Person(new Name(\"Charlotte\"), new Name(\"Oliveiro\"), new Phone(\"93210283\"), new Sex(\"f\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"                new EmploymentType(\"ft\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"                new BankDetails(\"146172002492\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            new Person(new Name(\"David\"), new Name(\"Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"                new Sex(\"m\"), new EmploymentType(\"ft\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new BankDetails(\"1803645852\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"            new Person(new Name(\"Irfan\"), new Name(\"Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"                new Sex(\"m\"), new EmploymentType(\"ft\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new BankDetails(\"0052312891\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"            new Person(new Name(\"Roy\"), new Name(\"Balakrishnan\"), new Phone(\"92624417\"), new Sex(\"m\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"                new EmploymentType(\"pt\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new BankDetails(\"5501089550\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":46,"martinng01":21}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    private final String firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    private final String lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    private final String sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    private final String employmentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    private final String bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"firstName\") String firstName,","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"lastName\") String lastName,","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"sex\") String sex,","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"employmentType\") String employmentType,","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"                             @JsonProperty(\"bankDetails\") String bankDetails,","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        this.firstName \u003d firstName;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"        this.lastName \u003d lastName;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        this.employmentType \u003d employmentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        this.bankDetails \u003d bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"        firstName \u003d source.getFirstName().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"        lastName \u003d source.getLastName().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"        sex \u003d source.getSex().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        employmentType \u003d source.getEmploymentType().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        bankDetails \u003d source.getBankDetails().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"        if (firstName \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"        if (!Name.isValidName(firstName)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"        final Name modelFirstName \u003d new Name(firstName);","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"        if (lastName \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"        if (!Name.isValidName(lastName)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"        final Name modelLastName \u003d new Name(lastName);","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"        if (sex \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Sex.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"martinng01"},"content":"        if (!Sex.isValidSex(sex)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"martinng01"},"content":"        final Sex modelSex \u003d new Sex(sex);","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"        if (employmentType \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, EmploymentType.class.getSimpleName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"martinng01"},"content":"        if (!EmploymentType.isValidEmploymentType(employmentType)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(EmploymentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"        final EmploymentType modelEmploymentType \u003d new EmploymentType(employmentType);","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"martinng01"},"content":"        if (bankDetails \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, BankDetails.class.getSimpleName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"        if (!BankDetails.isValidBankAccount(bankDetails)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"martinng01"},"content":"            throw new IllegalValueException(BankDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"martinng01"},"content":"        final BankDetails modelBankDetails \u003d new BankDetails(bankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"martinng01"},"content":"        return new Person(modelFirstName, modelLastName, modelPhone, modelSex, modelEmploymentType,","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"martinng01"},"content":"            modelAddress,","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"martinng01"},"content":"            modelBankDetails, modelTags);","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":93,"martinng01":60}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    private Label sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    private Label employmentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        name.setText(person.getName().value);","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        sex.setText(person.getSex().value);","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        employmentType.setText(person.getEmploymentType().value);","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":56,"martinng01":7}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\"\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"            \u003cLabel fx:id\u003d\"sex\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$sex\"/\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"            \u003cLabel fx:id\u003d\"employmentType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$employmentType\"/\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":26,"martinng01":5}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKDETAILS_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPLOYMENTTYPE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRSTNAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTNAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SEX_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"martinng01"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"martinng01"},"content":"        String addCommand \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"martinng01"},"content":"            AddCommand.COMMAND_WORD + FIRSTNAME_DESC_AMY + LASTNAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"martinng01"},"content":"                + SEX_DESC_AMY + EMPLOYMENTTYPE_DESC_AMY + BANKDETAILS_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"martinng01"},"content":"        System.out.println(expectedPerson.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"martinng01"},"content":"        System.out.println(addCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":169,"martinng01":19}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        Person alice \u003d new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Ng\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        Person bob \u003d new PersonBuilder().withFirstName(\"Bob\").withLastName(\"Tan\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":198,"martinng01":6}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENTTYPE;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_FIRSTNAME_AMY \u003d \"Amy\";","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_LASTNAME_AMY \u003d \"Bee\";","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_FIRSTNAME_BOB \u003d \"Bob\";","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_LASTNAME_BOB \u003d \"Choo\";","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_SEX_AMY \u003d \"f\";","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_SEX_BOB \u003d \"m\";","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_EMPLOYMENTTYPE_AMY \u003d \"ft\";","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_EMPLOYMENTTYPE_BOB \u003d \"pt\";","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_BANKDETAILS_AMY \u003d \"8374219837\";","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"    public static final String VALID_BANKDETAILS_BOB \u003d \"3214213212\";","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"    public static final String FIRSTNAME_DESC_AMY \u003d \" \" + PREFIX_FIRSTNAME + VALID_FIRSTNAME_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"    public static final String LASTNAME_DESC_AMY \u003d \" \" + PREFIX_LASTNAME + VALID_LASTNAME_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    public static final String FIRSTNAME_DESC_BOB \u003d \" \" + PREFIX_FIRSTNAME + VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"    public static final String LASTNAME_DESC_BOB \u003d \" \" + PREFIX_LASTNAME + VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"    public static final String SEX_DESC_AMY \u003d \" \" + PREFIX_SEX + VALID_SEX_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    public static final String SEX_DESC_BOB \u003d \" \" + PREFIX_SEX + VALID_SEX_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    public static final String EMPLOYMENTTYPE_DESC_AMY \u003d \" \" + PREFIX_EMPLOYMENTTYPE + VALID_EMPLOYMENTTYPE_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    public static final String EMPLOYMENTTYPE_DESC_BOB \u003d \" \" + PREFIX_EMPLOYMENTTYPE + VALID_EMPLOYMENTTYPE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"    public static final String BANKDETAILS_DESC_AMY \u003d \" \" + PREFIX_BANKDETAILS + VALID_BANKDETAILS_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"    public static final String BANKDETAILS_DESC_BOB \u003d \" \" + PREFIX_BANKDETAILS + VALID_BANKDETAILS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"    public static final String INVALID_FIRSTNAME_DESC \u003d \" \" + PREFIX_FIRSTNAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"    public static final String INVALID_LASTNAME_DESC \u003d \" \" + PREFIX_LASTNAME + \"Char.les\"; // \u0027\u0026\u0027 not allowed in","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"    public static final String INVALID_SEX_DESC \u003d \" \" + PREFIX_SEX + \"u\"; // \u0027u\u0027 is not an allowed sex","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"    public static final String INVALID_EMPLOYMENTTYPE_DESC \u003d \" \" + PREFIX_EMPLOYMENTTYPE + \"ut\";","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    //\u0027ut\u0027 is not an allowed employment type","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"    public static final String INVALID_BANKDETAILS_DESC \u003d \" \" + PREFIX_PHONE","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"        + \"3213-421321\"; // \u0027-\u0027 not allowed in bank details","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"    /*","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"    }*/","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"        final String[] splitName \u003d person.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":112,"martinng01":38}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"//import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"///**","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"// */","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"//public class EditCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"//        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"//        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"//            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"//        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"//        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"//                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"//        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"//        EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"//        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"//        EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"//        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"//        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"//        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"//        EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"martinng01"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"martinng01"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"martinng01"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"martinng01"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"//        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"martinng01"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"martinng01"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"//                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"martinng01"},"content":"//    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"martinng01"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"martinng01"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"martinng01"},"content":"//     */","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"martinng01"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"martinng01"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"martinng01"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"martinng01"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"martinng01"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"martinng01"},"content":"//    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"martinng01"},"content":"//        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"martinng01"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"martinng01"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"martinng01"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"martinng01"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"martinng01"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"martinng01"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"martinng01"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"martinng01"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"martinng01"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"martinng01"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"martinng01"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"martinng01"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"martinng01"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"martinng01"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"martinng01"},"content":"//        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"martinng01"},"content":"//        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"martinng01"},"content":"//        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"martinng01"},"content":"//                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"martinng01"},"content":"//        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"martinng01"},"content":"//}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"martinng01":186}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"//public class EditPersonDescriptorTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"//    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"//        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"//        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"//        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"//        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"//        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"//        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"//    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"//        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"//                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"//                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"//                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"//                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"//                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"//        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"//}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"martinng01":71}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKDETAILS_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BANKDETAILS_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPLOYMENTTYPE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPLOYMENTTYPE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRSTNAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FIRSTNAME_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMPLOYMENTTYPE_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FIRSTNAME_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LASTNAME_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SEX_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTNAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTNAME_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SEX_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SEX_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYMENTTYPE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENTTYPE;","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"                + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB + BANKDETAILS_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"            FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB + SEX_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"                + EMPLOYMENTTYPE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"                + BANKDETAILS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"        String validExpectedPersonString \u003d FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"            + PHONE_DESC_BOB + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"            + ADDRESS_DESC_BOB + BANKDETAILS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"        // multiple first names","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FIRSTNAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"        // multiple last names","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, LASTNAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LASTNAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"        // multiple sexes","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, SEX_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SEX));","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"        // multiple employment types","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, EMPLOYMENTTYPE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMPLOYMENTTYPE));","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"martinng01"},"content":"        // multiple bank details","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, BANKDETAILS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BANKDETAILS));","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"            validExpectedPersonString + PHONE_DESC_AMY + FIRSTNAME_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FIRSTNAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"                PREFIX_ADDRESS, PREFIX_PHONE));","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"        // invalid first name","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, INVALID_FIRSTNAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FIRSTNAME));","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"        // invalid last name","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, INVALID_LASTNAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LASTNAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":150,"author":{"gitId":"martinng01"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"martinng01"},"content":"            FIRSTNAME_DESC_AMY + LASTNAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"martinng01"},"content":"                + SEX_DESC_AMY + ADDRESS_DESC_AMY + BANKDETAILS_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"martinng01"},"content":"                + EMPLOYMENTTYPE_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"martinng01"},"content":"        // missing firstname prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, VALID_FIRSTNAME_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"martinng01"},"content":"                + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"martinng01"},"content":"            expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"martinng01"},"content":"        // missing lastname prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + VALID_LASTNAME_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"martinng01"},"content":"                + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"martinng01"},"content":"                + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"martinng01"},"content":"            expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"martinng01"},"content":"        // missing sex prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"martinng01"},"content":"                + VALID_SEX_BOB + EMPLOYMENTTYPE_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"martinng01"},"content":"        // missing employment type prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"martinng01"},"content":"                + SEX_DESC_BOB + VALID_EMPLOYMENTTYPE_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"martinng01"},"content":"                + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, VALID_FIRSTNAME_BOB + VALID_LASTNAME_BOB + VALID_PHONE_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"martinng01"},"content":"                + VALID_SEX_BOB + VALID_EMPLOYMENTTYPE_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, INVALID_FIRSTNAME_DESC + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"martinng01"},"content":"            + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"martinng01"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"martinng01"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + INVALID_LASTNAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"martinng01"},"content":"            + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2024-03-12"},{"lineNumber":210,"author":{"gitId":"martinng01"},"content":"            + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"martinng01"},"content":"        // invalid sex","lastModifiedDate":"2024-03-12"},{"lineNumber":214,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"martinng01"},"content":"            + INVALID_SEX_DESC + EMPLOYMENTTYPE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":216,"author":{"gitId":"martinng01"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"martinng01"},"content":"        // invalid employment type","lastModifiedDate":"2024-03-12"},{"lineNumber":219,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"martinng01"},"content":"            + SEX_DESC_BOB + INVALID_EMPLOYMENTTYPE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":221,"author":{"gitId":"martinng01"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, EmploymentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"martinng01"},"content":"            + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, INVALID_FIRSTNAME_DESC + LASTNAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":230,"author":{"gitId":"martinng01"},"content":"                + SEX_DESC_BOB + INVALID_EMPLOYMENTTYPE_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":234,"author":{"gitId":"martinng01"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + FIRSTNAME_DESC_BOB + LASTNAME_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":235,"author":{"gitId":"martinng01"},"content":"                + PHONE_DESC_BOB + SEX_DESC_BOB + EMPLOYMENTTYPE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":130,"martinng01":109}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    /*@Test","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"    }*/","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":96,"martinng01":5}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"//import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"//public class EditCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"//    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"//    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"//        // no index specified","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"//        // no field specified","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"//        // no index and no field specified","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"//        // negative index","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"//        // zero index","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"//        // invalid phone followed by valid email","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"//        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"//        // parsing it together with a valid tag results in error","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"martinng01"},"content":"//        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"martinng01"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"//                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"martinng01"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"//    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"martinng01"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"martinng01"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"//                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"martinng01"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"//    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"martinng01"},"content":"//        // name","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"//        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"martinng01"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"martinng01"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"martinng01"},"content":"//        // phone","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"martinng01"},"content":"//        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"martinng01"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"martinng01"},"content":"//        // email","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"martinng01"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"martinng01"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"martinng01"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"martinng01"},"content":"//        // address","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"martinng01"},"content":"//        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"martinng01"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"martinng01"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"martinng01"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"martinng01"},"content":"//        // tags","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"martinng01"},"content":"//        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"martinng01"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"martinng01"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"martinng01"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"martinng01"},"content":"//    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"martinng01"},"content":"//        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"martinng01"},"content":"//        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"martinng01"},"content":"//        // valid followed by invalid","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"martinng01"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"martinng01"},"content":"//        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"martinng01"},"content":"//        // invalid followed by valid","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"martinng01"},"content":"//        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"martinng01"},"content":"//        // mulltiple valid fields repeated","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"martinng01"},"content":"//        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"martinng01"},"content":"//                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"martinng01"},"content":"//                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"martinng01"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"martinng01"},"content":"//        // multiple invalid values","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"martinng01"},"content":"//        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"martinng01"},"content":"//                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":190,"author":{"gitId":"martinng01"},"content":"//        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"martinng01"},"content":"//                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"martinng01"},"content":"//    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"martinng01"},"content":"//    public void parse_resetTags_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"martinng01"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"martinng01"},"content":"//        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"martinng01"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"martinng01"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"martinng01"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"martinng01"},"content":"//}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"martinng01":204}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_SEX \u003d \"x\";","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_EMPLOYMENTTYPE \u003d \"invalid\";","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_PHONE \u003d \"93213213\";","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_SEX \u003d \"f\";","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_EMPLOYMENTTYPE \u003d \"ft\";","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"    public void parseSex_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSex((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"martinng01"},"content":"    public void parseSex_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSex(INVALID_SEX));","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"martinng01"},"content":"    public void parseEmploymentType_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmploymentType((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"    public void parseEmploymentType_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmploymentType(INVALID_EMPLOYMENTTYPE));","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"martinng01"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"martinng01"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"martinng01"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":166,"martinng01":22}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"        String[] keywords \u003d ALICE.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":131,"martinng01":1}},{"path":"src/test/java/seedu/address/model/person/BankDetailsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public class BankDetailsTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BankDetails(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    public void constructor_invalidBankDetails_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        String invalidBankDetails \u003d \"32132-423421\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BankDetails(invalidBankDetails));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public void isValidBankDetails() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        // null BankDetails number","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e BankDetails.isValidBankAccount(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        // invalid BankDetails numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"        assertFalse(BankDetails.isValidBankAccount(\"mt\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        assertFalse(BankDetails.isValidBankAccount(\"1231-421321\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        // valid BankDetails numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        assertTrue(BankDetails.isValidBankAccount(\"1231421421\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        assertTrue(BankDetails.isValidBankAccount(\"3987398782\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        BankDetails bankDetails \u003d new BankDetails(\"1231421421\");","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        assertTrue(bankDetails.equals(new BankDetails(\"1231421421\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        assertTrue(bankDetails.equals(bankDetails));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        assertFalse(bankDetails.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        assertFalse(bankDetails.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        assertFalse(bankDetails.equals(new BankDetails(\"3987398782\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"martinng01":55}},{"path":"src/test/java/seedu/address/model/person/EmploymentTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public class EmploymentTypeTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EmploymentType(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    public void constructor_invalidEmploymentType_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        String invalidEmploymentType \u003d \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EmploymentType(invalidEmploymentType));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public void isValidEmploymentType() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        // null EmploymentType number","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e EmploymentType.isValidEmploymentType(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        // invalid EmploymentType numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"        assertFalse(EmploymentType.isValidEmploymentType(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        assertFalse(EmploymentType.isValidEmploymentType(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        assertFalse(EmploymentType.isValidEmploymentType(\"mt\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        assertFalse(EmploymentType.isValidEmploymentType(\"3\")); // numeric","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        // valid EmploymentType numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        assertTrue(EmploymentType.isValidEmploymentType(\"pt\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        assertTrue(EmploymentType.isValidEmploymentType(\"ft\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        EmploymentType employmentType \u003d new EmploymentType(\"ft\");","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        assertTrue(employmentType.equals(new EmploymentType(\"ft\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        assertTrue(employmentType.equals(employmentType));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        assertFalse(employmentType.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        assertFalse(employmentType.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        assertFalse(employmentType.equals(new EmploymentType(\"pt\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"martinng01":57}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Carol\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").build()));","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"        // Keywords match phone and address, but does not match name","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFirstName(\"Alice\").withLastName(\"Bob\").withPhone(\"93232321\")","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"            .withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":75,"martinng01":10}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        String invalidName \u003d \"g*3\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        assertTrue(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":58,"martinng01":2}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        // different first name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withFirstName(VALID_FIRSTNAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withFirstName(VALID_FIRSTNAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        String nameWithTrailingSpaces \u003d VALID_FIRSTNAME_BOB + \" \";","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        editedBob \u003d new PersonBuilder(BOB).withFirstName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        // different first name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withFirstName(VALID_FIRSTNAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"        // different last name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLastName(VALID_LASTNAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"        String expected \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"            Person.class.getCanonicalName() + \"{firstName\u003d\" + ALICE.getFirstName()","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"                + \", lastName\u003d\" + ALICE.getLastName()","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"                + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"                + \", sex\u003d\" + ALICE.getSex()","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"                + \", employmentType\u003d\" + ALICE.getEmploymentType()","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"                + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"martinng01"},"content":"                + \", bankDetails\u003d\" + ALICE.getBankDetails()","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":85,"martinng01":21}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        Phone phone \u003d new Phone(\"99943213\");","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        assertTrue(phone.equals(new Phone(\"99943213\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        assertFalse(phone.equals(new Phone(\"99943233\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":55,"martinng01":3}},{"path":"src/test/java/seedu/address/model/person/SexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public class SexTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Sex(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    public void constructor_invalidSex_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        String invalidSex \u003d \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidSex));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public void isValidSex() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        // null Sex number","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        assertThrows(NullPointerException.class, () -\u003e Sex.isValidSex(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        // invalid Sex numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"        assertFalse(Sex.isValidSex(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        assertFalse(Sex.isValidSex(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        assertFalse(Sex.isValidSex(\"mf\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        assertFalse(Sex.isValidSex(\"3\")); // numeric","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        // valid Sex numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        assertTrue(Sex.isValidSex(\"f\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        assertTrue(Sex.isValidSex(\"m\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        Sex sex \u003d new Sex(\"f\");","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        assertTrue(sex.equals(new Sex(\"f\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        assertTrue(sex.equals(sex));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        assertFalse(sex.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        assertFalse(sex.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        assertFalse(sex.equals(new Sex(\"m\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"martinng01":57}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_FIRSTNAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_LASTNAME \u003d \"T4.n\";","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_SEX \u003d \"h\";","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_EMPLOYMENTTYPE \u003d \"ew\";","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_BANK_DETAILS \u003d \"057-3213-4123\";","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_FIRSTNAME \u003d BENSON.getFirstName().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_LASTNAME \u003d BENSON.getLastName().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_SEX \u003d BENSON.getSex().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_EMPLOYMENTTYPE \u003d BENSON.getEmploymentType().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    private static final String VALID_BANK_DETAILS \u003d BENSON.getBankDetails().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    public void toModelType_invalidFirstName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"            new JsonAdaptedPerson(INVALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE, VALID_SEX, VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"                VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"    public void toModelType_invalidLastName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, INVALID_LASTNAME, VALID_PHONE, VALID_SEX, VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"                VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullFirstName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_LASTNAME, VALID_PHONE, VALID_SEX,","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"            VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"            VALID_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"            VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullLastName_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, null, VALID_PHONE, VALID_SEX,","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"            VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"            VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"            VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, INVALID_PHONE, VALID_SEX, VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"                VALID_ADDRESS, VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, null,","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"martinng01"},"content":"            VALID_SEX, VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"            VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"martinng01"},"content":"            VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"    public void toModelType_invalidSex_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE, INVALID_SEX, VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"                VALID_ADDRESS, VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d Sex.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullSex_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME,","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"            VALID_PHONE, null, VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"            VALID_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"            VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Sex.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"martinng01"},"content":"    public void toModelType_invalidEmploymentType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"martinng01"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE, VALID_SEX,","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"                INVALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"                VALID_ADDRESS, VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d EmploymentType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"martinng01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullEmploymentType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE,","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"martinng01"},"content":"            VALID_SEX, null,","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"martinng01"},"content":"            VALID_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"martinng01"},"content":"            VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EmploymentType.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE,","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"martinng01"},"content":"            VALID_SEX, VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"martinng01"},"content":"            null,","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"martinng01"},"content":"            VALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"martinng01"},"content":"    public void toModelType_invalidBankDetails_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"martinng01"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE, VALID_SEX,","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"martinng01"},"content":"                VALID_EMPLOYMENTTYPE, VALID_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"martinng01"},"content":"                INVALID_BANK_DETAILS, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d BankDetails.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"martinng01"},"content":"    public void toModelType_nullBankDetails_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"martinng01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE,","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"martinng01"},"content":"            VALID_SEX,","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"martinng01"},"content":"            VALID_EMPLOYMENTTYPE,","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"martinng01"},"content":"            VALID_ADDRESS, null, VALID_TAGS);","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"martinng01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BankDetails.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"martinng01"},"content":"            new JsonAdaptedPerson(VALID_FIRSTNAME, VALID_LASTNAME, VALID_PHONE, VALID_SEX,","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"martinng01"},"content":"                VALID_EMPLOYMENTTYPE, VALID_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"martinng01"},"content":"                VALID_BANK_DETAILS, invalidTags);","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":97,"martinng01":92}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.person.*;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"//import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"//import java.util.stream.Stream;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"///**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"// * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"// */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"//public class EditPersonDescriptorBuilder {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"//    private EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"//    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"//    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"//        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"//    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"//     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"//     */","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"//    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"//        descriptor.setName(person.getName());","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"//        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"//        descriptor.setSex(person.getSex());","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"//        descriptor.setEmploymentType(person.getEmploymentType());","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"//        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"//        descriptor.setTags(person.getTags());","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"//    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"//     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"//     */","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"//    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"//        descriptor.setName(new Name(name));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"//        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"//    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"//     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"//     */","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"//    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"//        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"//        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"//    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"//     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"//     */","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"//    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"//        descriptor.setEmail(new Email(email));","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"//        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"//    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"//     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"//     */","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"//    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"//        descriptor.setAddress(new Address(address));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"//        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"//    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"//     * that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"//     */","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"//    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"//        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"//        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"//        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"//","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"//    public EditPersonDescriptor build() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"//        return descriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"//    }","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"//}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"martinng01":84}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.BankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    public static final String DEFAULT_FIRSTNAME \u003d \"Amy\";","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    public static final String DEFAULT_LASTNAME \u003d \"Bee\";","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    public static final String DEFAULT_SEX \u003d \"f\";","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    public static final String DEFAULT_EMPLOYMENT_TYPE \u003d \"ft\";","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    public static final String DEFAULT_BANK_ADDRESS \u003d \"12345678\";","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    private Name firstName;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    private Name lastName;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    private Sex sex;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    private EmploymentType employmentType;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    private BankDetails bankDetails;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        firstName \u003d new Name(DEFAULT_FIRSTNAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        lastName \u003d new Name(DEFAULT_LASTNAME);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        sex \u003d new Sex(DEFAULT_SEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        employmentType \u003d new EmploymentType(DEFAULT_EMPLOYMENT_TYPE);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        bankDetails \u003d new BankDetails(DEFAULT_BANK_ADDRESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        firstName \u003d personToCopy.getFirstName();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        lastName \u003d personToCopy.getLastName();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        sex \u003d personToCopy.getSex();","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"        employmentType \u003d personToCopy.getEmploymentType();","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        bankDetails \u003d personToCopy.getBankDetails();","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code firstName} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"    public PersonBuilder withFirstName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"        this.firstName \u003d new Name(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        return this;","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code lastName} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"    public PersonBuilder withLastName(String name) {","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"        this.lastName \u003d new Name(name);","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code Sex} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"    public PersonBuilder withSex(String sex) {","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"martinng01"},"content":"        this.sex \u003d new Sex(sex);","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code EmploymentType} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"martinng01"},"content":"    public PersonBuilder withEmploymentType(String employmentType) {","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"martinng01"},"content":"        this.employmentType \u003d new EmploymentType(employmentType);","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"     * Sets the {@code BankDetails} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"    public PersonBuilder withBankDetails(String bankDetails) {","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"        this.bankDetails \u003d new BankDetails(bankDetails);","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":132,"author":{"gitId":"martinng01"},"content":"        return new Person(firstName, lastName, phone, sex, employmentType, address, bankDetails, tags);","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":80,"martinng01":55}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BANKDETAILS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENTTYPE;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIRSTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTNAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        sb.append(PREFIX_FIRSTNAME + person.getFirstName().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        sb.append(PREFIX_LASTNAME + person.getLastName().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        sb.append(PREFIX_SEX + person.getSex().value + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        sb.append(PREFIX_EMPLOYMENTTYPE + person.getEmploymentType().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        sb.append(PREFIX_BANKDETAILS + person.getBankDetails().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_FIRSTNAME).append(name.value).append(","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"            \" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_LASTNAME).append(name.value).append(","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"            \" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":56,"martinng01":14}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKDETAILS_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BANKDETAILS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYMENTTYPE_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYMENTTYPE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRSTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LASTNAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SEX_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Alice\")","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Pauline\")","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        .withSex(\"f\")","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(\"ft\")","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        .withTags(\"friends\")","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Benson\")","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Meier\")","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(\"pt\")","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"98765432\")","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Carl\")","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Kurz\")","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"95352563\")","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(\"ft\")","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"wall street\")","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Daniel\")","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Meier\")","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"87652533\")","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(\"ft\")","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"10th street\")","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        .withTags(\"friends\")","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Elle\")","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Meyer\")","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"94823224\")","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"        .withSex(\"f\")","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(\"ft\")","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"michegan ave\")","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Fiona\")","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Kunz\")","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"94823427\")","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"        .withSex(\"f\")","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(\"ft\")","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"little tokyo\")","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"George\")","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Best\")","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"93482442\")","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(\"ft\")","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"4th street\")","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Hoon\")","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Meier\")","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"84832424\")","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"        .withSex(\"m\")","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(\"ft\")","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"little india\")","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"martinng01"},"content":"        .withFirstName(\"Ida\")","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"        .withLastName(\"Mueller\")","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"martinng01"},"content":"        .withPhone(\"84821331\")","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"martinng01"},"content":"        .withSex(\"f\")","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(\"ft\")","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"        .withAddress(\"chicago ave\")","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"martinng01"},"content":"        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":111,"author":{"gitId":"martinng01"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"martinng01"},"content":"        .withFirstName(VALID_FIRSTNAME_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"martinng01"},"content":"        .withLastName(VALID_LASTNAME_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"martinng01"},"content":"        .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"martinng01"},"content":"        .withSex(VALID_SEX_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(VALID_EMPLOYMENTTYPE_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"martinng01"},"content":"        .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"martinng01"},"content":"        .withBankDetails(VALID_BANKDETAILS_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"martinng01"},"content":"        .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"martinng01"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"martinng01"},"content":"        .withFirstName(VALID_FIRSTNAME_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"martinng01"},"content":"        .withLastName(VALID_LASTNAME_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"martinng01"},"content":"        .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"martinng01"},"content":"        .withSex(VALID_SEX_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"martinng01"},"content":"        .withEmploymentType(VALID_EMPLOYMENTTYPE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"martinng01"},"content":"        .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"martinng01"},"content":"        .withBankDetails(VALID_BANKDETAILS_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"martinng01"},"content":"        .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":133,"author":{"gitId":"martinng01"},"content":"    private TypicalPersons() {","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"martinng01"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":47,"martinng01":103}}]
