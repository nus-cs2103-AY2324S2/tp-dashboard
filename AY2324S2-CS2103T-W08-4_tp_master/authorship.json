[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-W08-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-W08-4/tp/actions)","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W08-4/tp/graph/badge.svg?token\u003dJRBJM9DOXE)](https://codecov.io/gh/AY2324S2-CS2103T-W08-4/tp)","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"    \u003ch3 align\u003d\"center\"\u003eDevPlan Pro\u003c/h3\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"        Keep track of your projects in a single app","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"        \u003cbr/\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"        \u003ca href\u003d\"https://github.com/othneildrew/Best-README-Template\"\u003eProject Website\u003c/a\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"        Â·","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"        \u003ca href\u003d\"https://github.com/othneildrew/Best-README-Template/issues\"\u003ePlanned Features\u003c/a\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"### About The Project","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"**Devplan Pro** is a project management app that is catered towards project managers who love typing. It allows the user to keep track of their various projects, the ongoing tasks within the projects, and people who are responsible for those tasks. Every action is executed through the input box using an intuitive [list of commands](https://github.com/othneildrew/Best-README-Template). Download now get a boost to your productivity.","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"### Installation","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"- Still in development","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"### Acknowledgement","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"- This README is based on the [Best-README-Template](https://github.com/othneildrew/Best-README-Template) template.","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"modembcc":25,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"    archiveFileName \u003d \u0027tp_new.jar\u0027","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"ananya21":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"### Lin Shuang Shuang","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"\u003cimg src\u003d\"images/lin-shuang-shuang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"- Role: Team Lead","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"- Responsibilities: UI","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"### Ananya Shahi","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"\u003cimg src\u003d\"images/ananya21.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"[[github](http://github.com/ananya21)]","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"- Role: Developer","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThitipatC"},"content":"- Responsibilities: Data","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ThitipatC"},"content":"### Thitipat Chaiyakul","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ThitipatC"},"content":"\u003cimg src\u003d\"images/thitipatc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"ThitipatC"},"content":"[[github](http://github.com/ThitipatC)]","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"- Role: Developer","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"- Responsibilities: Dev Ops + Threading","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"### Pawirunsiri Thanakorn (Modem)","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"\u003cimg src\u003d\"images/modembcc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"[[github](http://github.com/modembcc)]","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"\u003c!-- [[portfolio](team/johndoe.md)] --\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"- Role: Developer","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"- Responsibilities: UI","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"modembcc":16,"ThitipatC":4,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"- Table of Contents","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"modembcc"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"modembcc"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"modembcc"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"modembcc"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"modembcc"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"modembcc"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"modembcc"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"modembcc"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"modembcc"},"content":"- stores a `UserPref` object that represents the userâs preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"modembcc"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"modembcc"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"modembcc"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"modembcc"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"modembcc"},"content":"- `VersionedAddressBook#commit()`âââSaves the current address book state in its history.","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"modembcc"},"content":"- `VersionedAddressBook#undo()`âââRestores the previous address book state from its history.","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"modembcc"},"content":"- `VersionedAddressBook#redo()`âââRestores a previously undone address book state from its history.","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â¦â` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâââit calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â¦â` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"modembcc"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"modembcc"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2024-03-12"},{"lineNumber":238,"author":{"gitId":"modembcc"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-03-12"},{"lineNumber":239,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":240,"author":{"gitId":"modembcc"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2024-03-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"modembcc"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2024-03-12"},{"lineNumber":243,"author":{"gitId":"modembcc"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-03-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"modembcc"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":256,"author":{"gitId":"modembcc"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":257,"author":{"gitId":"modembcc"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":258,"author":{"gitId":"modembcc"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":259,"author":{"gitId":"modembcc"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"ananya21"},"content":"- has a need to organise various projects and people","lastModifiedDate":"2024-03-13"},{"lineNumber":270,"author":{"gitId":"modembcc"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2024-03-12"},{"lineNumber":271,"author":{"gitId":"modembcc"},"content":"- can type fast","lastModifiedDate":"2024-03-12"},{"lineNumber":272,"author":{"gitId":"modembcc"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2024-03-12"},{"lineNumber":273,"author":{"gitId":"modembcc"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2024-03-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"ananya21"},"content":"**Value proposition**: manage projects and tasks faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| Priority | As a â¦â                                     | I want to â¦â                                                   | So that I canâ¦â                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"ananya21"},"content":"|----------|---------------------------------------------|----------------------------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2024-03-13"},{"lineNumber":283,"author":{"gitId":"ananya21"},"content":"| `* * *`  | software developer                          | keep track of all my projectsâ tasks in the app                | meet all my deadlines on time                                             |","lastModifiedDate":"2024-03-13"},{"lineNumber":284,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | sort my tasks by their deadlines                               | see what is the next pending task to complete                             |","lastModifiedDate":"2024-03-13"},{"lineNumber":285,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | see what my tasks are due next week                            | schedule my timetable accordingly                                         |","lastModifiedDate":"2024-03-13"},{"lineNumber":286,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | see who are my teammates for each project                      | know who to contact if I have any questions for that project              |","lastModifiedDate":"2024-03-13"},{"lineNumber":287,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | mark my completed tasks as completed                           | keep them out of sight to prevent confusion                               |","lastModifiedDate":"2024-03-13"},{"lineNumber":288,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | mark my tasks as in progress                                   | remind myself to come back to it once I have a clearer idea of what to do |","lastModifiedDate":"2024-03-13"},{"lineNumber":289,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | keep track of all my ongoing projects                          | be reminded of what I need to do for the next few weeks/months            |","lastModifiedDate":"2024-03-13"},{"lineNumber":290,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | see what are the categories for each of my projects           | know what knowledge I need to learn and utilize for each of their tasks   |","lastModifiedDate":"2024-03-13"},{"lineNumber":291,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | delete projects that have been discontinued or completed       | know what to focus on                                                     |","lastModifiedDate":"2024-03-13"},{"lineNumber":292,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | update the deadline of my tasks if it has been brought forward | know exactly when it is due                                               |","lastModifiedDate":"2024-03-13"},{"lineNumber":293,"author":{"gitId":"ananya21"},"content":"| `* *`    | project manager user                        | keep track of the team members                                 |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":294,"author":{"gitId":"ananya21"},"content":"| `* * *`  | user                                        | create new projects         | manage various tasks and activities                                       |","lastModifiedDate":"2024-03-13"},{"lineNumber":295,"author":{"gitId":"ananya21"},"content":"| `* * *`  | user                                        | add team members to projects and assign them specific roles and tasks |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":296,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | set deadlines and milestones for subtasks within a project    |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":297,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | track the progress of tasks and projects through visual representations such as charts or graphs |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":298,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | prioritize tasks within a project    | ensure timely completion                                                  |","lastModifiedDate":"2024-03-13"},{"lineNumber":299,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | collaborate with team members by sharing files, comments, and updates within the software |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":300,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | receive notifications and reminders for upcoming deadlines or overdue tasks |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":301,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | generate reports  | analyze project performance and identify areas for improvement            |","lastModifiedDate":"2024-03-13"},{"lineNumber":302,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | integrate the software with other tools or platforms | have seamless workflow management                                         |","lastModifiedDate":"2024-03-13"},{"lineNumber":303,"author":{"gitId":"ananya21"},"content":"| `* * *`  | user                                        | access the software from any device with an internet connection | for convenience                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":304,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | customize project templates or workflows  | suit the specific needs of my team or organization                        |","lastModifiedDate":"2024-03-13"},{"lineNumber":305,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | securely store project-related documents and files within the software |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":306,"author":{"gitId":"ananya21"},"content":"| `* * *`  | user                                        | communicate with clients or stakeholders and provide them with updates on project progress |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":307,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | search for specific tasks, projects, or documents within the software | for quick access                                                          |","lastModifiedDate":"2024-03-13"},{"lineNumber":308,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | archive completed projects or tasks for future reference      |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":309,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | export data from the software in various formats | employ further analysis or sharing                                        |","lastModifiedDate":"2024-03-13"},{"lineNumber":310,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | invite external collaborators  | they can participate in specific projects or tasks                        |","lastModifiedDate":"2024-03-13"},{"lineNumber":311,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | monitor team workload and redistribute tasks  | balance workloads                                                         |","lastModifiedDate":"2024-03-13"},{"lineNumber":312,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | access historical data and project archives  | learn from past experiences and make informed decisions                                                                       |","lastModifiedDate":"2024-03-13"},{"lineNumber":313,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | provide feedback or suggestions for improving the software  |      better meet the needs of myself and my team                                                                     |","lastModifiedDate":"2024-03-13"},{"lineNumber":314,"author":{"gitId":"ananya21"},"content":"| `* * *`  | user                                        | set the status of a project to be completed or incompleted    |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":315,"author":{"gitId":"ananya21"},"content":"| `* * *`  | user                                        | set the deadline of a project to a specific date              |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":316,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | edit the details of a project                                 |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":317,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | filter the projects by their status                           |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":318,"author":{"gitId":"ananya21"},"content":"| `* * *`  | user                                        | add tasks to a project (ADD)                                  |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":319,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | remove tasks from a project                                   |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":320,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | edit the details of a task                                    |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":321,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | mark task as not done or completed                            |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":322,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | assign tasks to a person                                      |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":323,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | filter tasks by completion status                             |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":324,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | filter tasks by the person responsible                        |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":325,"author":{"gitId":"ananya21"},"content":"| `* * *`  | user                                        | save the project list on my hard drive                        |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":326,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | share the project list so that other users can import the same list |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":327,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | import lists from others while keeping my own list or discarding my old list |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":328,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | limit the amount of projects I can see on one page            |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":329,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | search for projects by name                                   |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":330,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | search for tasks by name                                      |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":331,"author":{"gitId":"ananya21"},"content":"| `* * *`  | user                                        | access the user guide / command list                          |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":332,"author":{"gitId":"ananya21"},"content":"| `* *`    | forgetful user                              | easily use the commands with guidance from the program        |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":333,"author":{"gitId":"ananya21"},"content":"| `* *`    | user                                        | change font sizes                                             |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":334,"author":{"gitId":"ananya21"},"content":"| `* * *`  | typely user                                 | use type commands to do everything a user does                |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":335,"author":{"gitId":"ananya21"},"content":"| `*`      | user                                        | edit details of a person (Optional)                           |                                                                           |","lastModifiedDate":"2024-03-13"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"modembcc"},"content":"(For all use cases below, the **System** is the `DevPlan Pro` and the **Actor** is the `project manager`, unless specified otherwise)","lastModifiedDate":"2024-03-12"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":342,"author":{"gitId":"modembcc"},"content":"**Use case: UC01 - Create a project**","lastModifiedDate":"2024-03-12"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":346,"author":{"gitId":"modembcc"},"content":"1.  User inputs the project name to be added.","lastModifiedDate":"2024-03-12"},{"lineNumber":347,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro creates a new project with the specified name and adds it to the project list.","lastModifiedDate":"2024-03-12"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":353,"author":{"gitId":"modembcc"},"content":"- 1a. The name is not unique.","lastModifiedDate":"2024-03-12"},{"lineNumber":354,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":355,"author":{"gitId":"modembcc"},"content":"  - 1a1. DevPlan Pro rejects the project creation.","lastModifiedDate":"2024-03-12"},{"lineNumber":356,"author":{"gitId":"modembcc"},"content":"  - 1a2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":358,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":359,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":360,"author":{"gitId":"modembcc"},"content":"**Use case: UC02 - Delete a project**","lastModifiedDate":"2024-03-12"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":362,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":364,"author":{"gitId":"modembcc"},"content":"1.  User inputs the project name to be deleted.","lastModifiedDate":"2024-03-12"},{"lineNumber":365,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro deletes the project with the specified name and removes it from the project list. (Along with the project\u0027s tasks and members)","lastModifiedDate":"2024-03-12"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":367,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":369,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":371,"author":{"gitId":"modembcc"},"content":"- 1a. The name is not valid. (No project with such name)","lastModifiedDate":"2024-03-12"},{"lineNumber":372,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":373,"author":{"gitId":"modembcc"},"content":"  - 1a1. DevPlan Pro rejects the project deletion.","lastModifiedDate":"2024-03-12"},{"lineNumber":374,"author":{"gitId":"modembcc"},"content":"  - 1a2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":375,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":376,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":377,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":378,"author":{"gitId":"modembcc"},"content":"**Use case: UC03 - Add task to project**","lastModifiedDate":"2024-03-12"},{"lineNumber":379,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":380,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":381,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":382,"author":{"gitId":"modembcc"},"content":"1.  User inputs the task and the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":383,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro creates a new task with the specified name and adds it to the specified project.","lastModifiedDate":"2024-03-12"},{"lineNumber":384,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":385,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":386,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":387,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":388,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":389,"author":{"gitId":"modembcc"},"content":"- 1a. The task name is not unique.","lastModifiedDate":"2024-03-12"},{"lineNumber":390,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":391,"author":{"gitId":"modembcc"},"content":"  - 1a1. DevPlan Pro rejects the task creation.","lastModifiedDate":"2024-03-12"},{"lineNumber":392,"author":{"gitId":"modembcc"},"content":"  - 1a2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":393,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":394,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":395,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":396,"author":{"gitId":"modembcc"},"content":"- 1b. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":397,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":398,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the task creation.","lastModifiedDate":"2024-03-12"},{"lineNumber":399,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":400,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":401,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"modembcc"},"content":"**Use case: UC04 - Remove task from project**","lastModifiedDate":"2024-03-12"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"modembcc"},"content":"1.  User inputs the task and the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":408,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro removes the task with the specified name from the specified project.","lastModifiedDate":"2024-03-12"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"modembcc"},"content":"- 1a. The task name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":415,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":416,"author":{"gitId":"modembcc"},"content":"  - 1a1. DevPlan Pro rejects the task deletion.","lastModifiedDate":"2024-03-12"},{"lineNumber":417,"author":{"gitId":"modembcc"},"content":"  - 1a2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":418,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":419,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":420,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":421,"author":{"gitId":"modembcc"},"content":"- 1b. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":422,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":423,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the task deletion.","lastModifiedDate":"2024-03-12"},{"lineNumber":424,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":425,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":426,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":427,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":428,"author":{"gitId":"modembcc"},"content":"**Use case: UC05 - View a project**","lastModifiedDate":"2024-03-12"},{"lineNumber":429,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":430,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":431,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":432,"author":{"gitId":"modembcc"},"content":"1.  User inputs the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":433,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro shows the information of the specified project.","lastModifiedDate":"2024-03-12"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":438,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":439,"author":{"gitId":"modembcc"},"content":"- 1a. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects showing the project.","lastModifiedDate":"2024-03-12"},{"lineNumber":442,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"modembcc"},"content":"**Use case: UC06 - Add team member to project**","lastModifiedDate":"2024-03-12"},{"lineNumber":447,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":448,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":449,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":450,"author":{"gitId":"modembcc"},"content":"1.  User inputs the member name and the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":451,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro adds a person with the specified name to the specified project\u0027s team.","lastModifiedDate":"2024-03-12"},{"lineNumber":452,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":453,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":454,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":455,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":456,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":457,"author":{"gitId":"modembcc"},"content":"- 1a. The member name is not unique.","lastModifiedDate":"2024-03-12"},{"lineNumber":458,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":459,"author":{"gitId":"modembcc"},"content":"  - 1a1. DevPlan Pro rejects the member addition.","lastModifiedDate":"2024-03-12"},{"lineNumber":460,"author":{"gitId":"modembcc"},"content":"  - 1a2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":461,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":462,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":463,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":464,"author":{"gitId":"modembcc"},"content":"- 1b. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":465,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":466,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the member addition.","lastModifiedDate":"2024-03-12"},{"lineNumber":467,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":468,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":469,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":470,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":471,"author":{"gitId":"modembcc"},"content":"**Use case: UC07 - Remove team member from project**","lastModifiedDate":"2024-03-12"},{"lineNumber":472,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":473,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":474,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":475,"author":{"gitId":"modembcc"},"content":"1.  User inputs the member name and the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":476,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro removes a person with the specified name from the specified project\u0027s team.","lastModifiedDate":"2024-03-12"},{"lineNumber":477,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":478,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":479,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":480,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":482,"author":{"gitId":"modembcc"},"content":"- 1a. The member name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":484,"author":{"gitId":"modembcc"},"content":"  - 1a1. DevPlan Pro rejects the member deletion.","lastModifiedDate":"2024-03-12"},{"lineNumber":485,"author":{"gitId":"modembcc"},"content":"  - 1a2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":486,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":487,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":488,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":489,"author":{"gitId":"modembcc"},"content":"- 1b. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":490,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":491,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the member deletion.","lastModifiedDate":"2024-03-12"},{"lineNumber":492,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":493,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":494,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":495,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":496,"author":{"gitId":"modembcc"},"content":"**Use case: UC08 - Assign member to task of project**","lastModifiedDate":"2024-03-12"},{"lineNumber":497,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":498,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":499,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":500,"author":{"gitId":"modembcc"},"content":"1.  User inputs the member name, the task name, and the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":501,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro assign the specified member to the specified task in the specified project.","lastModifiedDate":"2024-03-12"},{"lineNumber":502,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":503,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":504,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":505,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":506,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":507,"author":{"gitId":"modembcc"},"content":"- 1a. The member name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":508,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":509,"author":{"gitId":"modembcc"},"content":"  - 1a1. DevPlan Pro rejects the task assignment.","lastModifiedDate":"2024-03-12"},{"lineNumber":510,"author":{"gitId":"modembcc"},"content":"  - 1a2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":511,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":512,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":513,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":514,"author":{"gitId":"modembcc"},"content":"- 1b. The task name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":515,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":516,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the task assignment.","lastModifiedDate":"2024-03-12"},{"lineNumber":517,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":518,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":519,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":520,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":521,"author":{"gitId":"modembcc"},"content":"- 1c. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":522,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":523,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the task assignment.","lastModifiedDate":"2024-03-12"},{"lineNumber":524,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":525,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":526,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":527,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":528,"author":{"gitId":"modembcc"},"content":"**Use case: UC09 - Assign deadline to task of project**","lastModifiedDate":"2024-03-12"},{"lineNumber":529,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":530,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":531,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":532,"author":{"gitId":"modembcc"},"content":"1.  User inputs the deadline, the task name, and the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":533,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro assign deadline to the specified task in the specified project.","lastModifiedDate":"2024-03-12"},{"lineNumber":534,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":535,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":536,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":537,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":538,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":539,"author":{"gitId":"modembcc"},"content":"- 1a. Deadline is not in the âMMM D YYYYâ format.","lastModifiedDate":"2024-03-12"},{"lineNumber":540,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":541,"author":{"gitId":"modembcc"},"content":"  - 1a1. DevPlan Pro rejects the deadline assignment.","lastModifiedDate":"2024-03-12"},{"lineNumber":542,"author":{"gitId":"modembcc"},"content":"  - 1a2. DevPlan Pro informs the user of the rejection and the correct format.","lastModifiedDate":"2024-03-12"},{"lineNumber":543,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":544,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":545,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":546,"author":{"gitId":"modembcc"},"content":"- 1b. The task name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":547,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":548,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the deadline assignment.","lastModifiedDate":"2024-03-12"},{"lineNumber":549,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":550,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":551,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":552,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":553,"author":{"gitId":"modembcc"},"content":"- 1c. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":554,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":555,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the deadline assignment.","lastModifiedDate":"2024-03-12"},{"lineNumber":556,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":557,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":558,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":559,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":560,"author":{"gitId":"modembcc"},"content":"**Use case: UC10 - Assign deadline to project**","lastModifiedDate":"2024-03-12"},{"lineNumber":561,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":562,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":563,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":564,"author":{"gitId":"modembcc"},"content":"1.  User inputs the deadline and the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":565,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro assign deadline to the specified project.","lastModifiedDate":"2024-03-12"},{"lineNumber":566,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":567,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":568,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":569,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":570,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":571,"author":{"gitId":"modembcc"},"content":"- 1a. Deadline is not in the âMMM D YYYYâ format.","lastModifiedDate":"2024-03-12"},{"lineNumber":572,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":573,"author":{"gitId":"modembcc"},"content":"  - 1a1. DevPlan Pro rejects the deadline assignment.","lastModifiedDate":"2024-03-12"},{"lineNumber":574,"author":{"gitId":"modembcc"},"content":"  - 1a2. DevPlan Pro informs the user of the rejection and the correct format.","lastModifiedDate":"2024-03-12"},{"lineNumber":575,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":576,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":577,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":578,"author":{"gitId":"modembcc"},"content":"- 1b. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":579,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":580,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the deadline assignment.","lastModifiedDate":"2024-03-12"},{"lineNumber":581,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":582,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":583,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":584,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":585,"author":{"gitId":"modembcc"},"content":"**Use case: UC11 - Set project status**","lastModifiedDate":"2024-03-12"},{"lineNumber":586,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":587,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":588,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":589,"author":{"gitId":"modembcc"},"content":"1.  User inputs the status and the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":590,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro set the status of the specified project.","lastModifiedDate":"2024-03-12"},{"lineNumber":591,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":592,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":593,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":594,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":595,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":596,"author":{"gitId":"modembcc"},"content":"- 1a. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":597,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":598,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the status change.","lastModifiedDate":"2024-03-12"},{"lineNumber":599,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":600,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":601,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":602,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":603,"author":{"gitId":"modembcc"},"content":"**Use case: UC11 - Set task status**","lastModifiedDate":"2024-03-12"},{"lineNumber":604,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":605,"author":{"gitId":"modembcc"},"content":"**MSS**","lastModifiedDate":"2024-03-12"},{"lineNumber":606,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":607,"author":{"gitId":"modembcc"},"content":"1.  User inputs the status, the task name, and the project name.","lastModifiedDate":"2024-03-12"},{"lineNumber":608,"author":{"gitId":"modembcc"},"content":"2.  DevPlan Pro set the status of the specified task in the specified project.","lastModifiedDate":"2024-03-12"},{"lineNumber":609,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":610,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":611,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":612,"author":{"gitId":"modembcc"},"content":"**Extensions**","lastModifiedDate":"2024-03-12"},{"lineNumber":613,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":614,"author":{"gitId":"modembcc"},"content":"- 1a. The task name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":615,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":616,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the status change.","lastModifiedDate":"2024-03-12"},{"lineNumber":617,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":618,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":619,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":620,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":621,"author":{"gitId":"modembcc"},"content":"- 1b. The project name is not valid.","lastModifiedDate":"2024-03-12"},{"lineNumber":622,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":623,"author":{"gitId":"modembcc"},"content":"  - 1b1. DevPlan Pro rejects the status change.","lastModifiedDate":"2024-03-12"},{"lineNumber":624,"author":{"gitId":"modembcc"},"content":"  - 1b2. DevPlan Pro informs the user of the rejection.","lastModifiedDate":"2024-03-12"},{"lineNumber":625,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":626,"author":{"gitId":"modembcc"},"content":"    Use case ends.","lastModifiedDate":"2024-03-12"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"modembcc"},"content":"- Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2024-03-12"},{"lineNumber":631,"author":{"gitId":"modembcc"},"content":"- Should be able to hold up to 1000 projects without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-12"},{"lineNumber":632,"author":{"gitId":"modembcc"},"content":"- Should be able to hold up to 1000 tasks per project without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-12"},{"lineNumber":633,"author":{"gitId":"modembcc"},"content":"- A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-12"},{"lineNumber":634,"author":{"gitId":"modembcc"},"content":"- Should respond to user commands within 2 seconds.","lastModifiedDate":"2024-03-12"},{"lineNumber":635,"author":{"gitId":"modembcc"},"content":"- Should be usable by a novice who has never used DevPlan Pro before.","lastModifiedDate":"2024-03-12"},{"lineNumber":636,"author":{"gitId":"modembcc"},"content":"- Documentation should be understandable for a novice user who has never used DevPlan Pro, or any other similar project management application.","lastModifiedDate":"2024-03-12"},{"lineNumber":637,"author":{"gitId":"modembcc"},"content":"- The user interface should be intuitive enough for users who are not IT-savvy.","lastModifiedDate":"2024-03-12"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"ThitipatC"},"content":"- **Project Manager**:The individual supervising a project whose role may include planning, executing, and closing a project.","lastModifiedDate":"2024-03-12"},{"lineNumber":642,"author":{"gitId":"ThitipatC"},"content":"- **Task Status**: A status of a task whether done or not done","lastModifiedDate":"2024-03-12"},{"lineNumber":643,"author":{"gitId":"ThitipatC"},"content":"- **Project Status**: A status of a project whether Completed or not Completed","lastModifiedDate":"2024-03-12"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"1. _{ more test cases â¦â }_","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"1. _{ more test cases â¦â }_","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"1. _{ more test cases â¦â }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"modembcc":319,"ThitipatC":3,"-":318,"ananya21":56}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"AddressBook Level 3 (AB3) is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"- Table of Contents","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"   - `list` : Lists all contacts.","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"   - `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"   - `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"   - `clear` : Deletes all contacts.","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"   - `exit` : Exits the app.","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"- Items with `â¦`â after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â¦â` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"### Adding a project: `add project`","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"Adds a project to the project manager.","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"Format: `add project \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"modembcc"},"content":"- `add project CS2103T Duke Chatbot Project`","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"modembcc"},"content":"- `add project CS2101 Presentation`","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"Expected output:","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"modembcc"},"content":"- Success: `\u003cPROJECT_NAME\u003e has been added to the project list.`","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"modembcc"},"content":"- Failure: `Project \u003cPROJECT_NAME\u003e already exists.`","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â¦â`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"modembcc"},"content":"- Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, â¦â","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"modembcc"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"modembcc"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"modembcc"},"content":"- When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"modembcc"},"content":"- You can remove all the personâs tags by typing `t/` without","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"modembcc"},"content":"- `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"modembcc"},"content":"- `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"modembcc"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"modembcc"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"modembcc"},"content":"- Only the name is searched.","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"modembcc"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"modembcc"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"modembcc"},"content":"- `find John` returns `john` and `John Doe`","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"modembcc"},"content":"- `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"### Deleting a project : `delete project`","lastModifiedDate":"2024-02-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"Deletes the specified project from the project list.","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"Format: `delete project \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"modembcc"},"content":"- The specified project name must exist in the project list.","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"modembcc"},"content":"- `delete project CS2101 Presentation`","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"modembcc"},"content":"Expected output:","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"modembcc"},"content":"- Successful deletion: `\u003cPROJECT_NAME\u003e has been deleted from the project list.`","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"modembcc"},"content":"- Failed deletion: `Project \u003cPROJECT_NAME\u003e not found: Please make sure the project exists.`","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"modembcc"},"content":"### Assign member to task : `add person`","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"modembcc"},"content":"Assigns a team member to a task within a project.","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"modembcc"},"content":"Format: `add person \u003cPERSON_NAME\u003e /to \u003cTASK_NAME\u003e /in \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"modembcc"},"content":"- The specified project name must exist in the project list.","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"modembcc"},"content":"- The specified task name must exist in the project\u0027s task.","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"modembcc"},"content":"- The specified member name must be a member of the project team.","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"modembcc"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"modembcc"},"content":"- `add person Joe /to unit test /in CS2103_TP`","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"modembcc"},"content":"Expected output:","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"modembcc"},"content":"- Successful assignment: `\u003cPERSON_NAME\u003e has been assigned to \u003cPROJECT_NAME\u003e: \u003cTASK_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"modembcc"},"content":"- Failed assignment (example): `Person \u003cPERSON_NAME\u003e is not a team member.`","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"modembcc"},"content":"### Assign deadline to project : `add deadline`","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"modembcc"},"content":"Assigns a deadline to a project.","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"modembcc"},"content":"Format: `add deadline \u003cDEADLINE\u003e /to \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"modembcc"},"content":"- The specified project name must exist in the project list.","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"modembcc"},"content":"- The deadline must be in `MMM D YYYY` format","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"modembcc"},"content":"- `add deadline Feb 25 2024 /to CS2103_TP`","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":182,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"Expected output:","lastModifiedDate":"2024-02-28"},{"lineNumber":183,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"modembcc"},"content":"- Successful assignment: `Deadline \u003cDEADLINE\u003e has been assigned to \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"modembcc"},"content":"- Failed assignment (example): `Deadline needs to be in MMM D YYYY format.`","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"modembcc"},"content":"### Assign deadline to task : `add deadline`","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"modembcc"},"content":"Assigns a deadline to a task in a project.","lastModifiedDate":"2024-03-12"},{"lineNumber":190,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"modembcc"},"content":"Format: `add deadline \u003cDEADLINE\u003e /to \u003cTASK_NAME\u003e /in \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"modembcc"},"content":"- The specified project name must exist in the project list.","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"modembcc"},"content":"- The specified task name must exist in the project\u0027s tasks.","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"modembcc"},"content":"- The deadline must be in `MMM D YYYY` format","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"modembcc"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"modembcc"},"content":"- `add deadline Feb 25 2024 /to submit feature list /in CS2103_TP`","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"modembcc"},"content":"Expected output:","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"modembcc"},"content":"- Successful assignment: `Deadline \u003cDEADLINE\u003e has been assigned to \u003cPROJECT_NAME\u003e:\u003cTASK_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"modembcc"},"content":"- Failed assignment (example): `Deadline needs to be in MMM D YYYY format.`","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"ThitipatC"},"content":"### Add task : `add task`","lastModifiedDate":"2024-03-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"ThitipatC"},"content":"Add the specified task to a project.","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"ThitipatC"},"content":"Format: `add task \u003cTASK_NAME\u003e /to \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"modembcc"},"content":"- The specified project name must exist in the project list.","lastModifiedDate":"2024-03-15"},{"lineNumber":213,"author":{"gitId":"modembcc"},"content":"- The task\u0027s name must be unique","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"ThitipatC"},"content":"  Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"modembcc"},"content":"- `add task add deadline command /to CS2103T Duke Chatbot Project`","lastModifiedDate":"2024-03-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"ThitipatC"},"content":"Expected output:","lastModifiedDate":"2024-03-12"},{"lineNumber":218,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":219,"author":{"gitId":"modembcc"},"content":"- Successful add command: `\u003cTASK_NAME\u003e has been added to \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"modembcc"},"content":"- Failed commands:","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"ThitipatC"},"content":"  - invalid project name: `Project \u003cPROJECT_NAME\u003e not found: Please make sure the project exists.`","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"ThitipatC"},"content":"  - repeated task: `Task \u003cTASK_NAME\u003e already exists in \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"ThitipatC"},"content":"### Remove task : `delete task`","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"ThitipatC"},"content":"Deletes the specified task from a project.","lastModifiedDate":"2024-03-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"ThitipatC"},"content":"Format: `delete task \u003cTASK_NAME\u003e /in \u003cPROJECT_NAME\u003e `","lastModifiedDate":"2024-03-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":230,"author":{"gitId":"modembcc"},"content":"- The specified project name must exist in the project list.","lastModifiedDate":"2024-03-15"},{"lineNumber":231,"author":{"gitId":"modembcc"},"content":"- The task name must exist","lastModifiedDate":"2024-03-15"},{"lineNumber":232,"author":{"gitId":"ThitipatC"},"content":"  Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":233,"author":{"gitId":"modembcc"},"content":"- `delete task add deadline command /in CS2103T Duke Chatbot Project`","lastModifiedDate":"2024-03-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":235,"author":{"gitId":"ThitipatC"},"content":"Expected output:","lastModifiedDate":"2024-03-12"},{"lineNumber":236,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":237,"author":{"gitId":"modembcc"},"content":"- Successful deletion: `\u003cTASK_NAME\u003e has been deleted from \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-15"},{"lineNumber":238,"author":{"gitId":"modembcc"},"content":"- Failed commands:","lastModifiedDate":"2024-03-15"},{"lineNumber":239,"author":{"gitId":"ThitipatC"},"content":"  - invalid project name: `Project \u003cPROJECT_NAME\u003e not found: Please make sure the project exists.`","lastModifiedDate":"2024-03-12"},{"lineNumber":240,"author":{"gitId":"ThitipatC"},"content":"  - invalid task name: `Task \u003cTASK_NAME\u003e not found: Please make sure the task exists`","lastModifiedDate":"2024-03-12"},{"lineNumber":241,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":242,"author":{"gitId":"ananya21"},"content":"### Set Task Status : `set status of Task`","lastModifiedDate":"2024-03-12"},{"lineNumber":243,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":244,"author":{"gitId":"ananya21"},"content":"sets the status of a task as finished or unfinished","lastModifiedDate":"2024-03-12"},{"lineNumber":245,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":246,"author":{"gitId":"ananya21"},"content":"Format: `set status \u003cSTATUS\u003e /to task \u003cTASK_NAME\u003e /in \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-13"},{"lineNumber":247,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":248,"author":{"gitId":"modembcc"},"content":"- The specified task name must exist in the task list.","lastModifiedDate":"2024-03-15"},{"lineNumber":249,"author":{"gitId":"modembcc"},"content":"- The task status can either be `done` or `undone`","lastModifiedDate":"2024-03-15"},{"lineNumber":250,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":251,"author":{"gitId":"ananya21"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":252,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":253,"author":{"gitId":"modembcc"},"content":"- `set status done /to unit test /in CS2103T Duke Chatbot Project`","lastModifiedDate":"2024-03-15"},{"lineNumber":254,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":255,"author":{"gitId":"ananya21"},"content":"Expected output:","lastModifiedDate":"2024-03-12"},{"lineNumber":256,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":257,"author":{"gitId":"modembcc"},"content":"- Successful status update: `Task \u003cTASK_NAME\u003e is set as \u003cSTATUS\u003e`","lastModifiedDate":"2024-03-15"},{"lineNumber":258,"author":{"gitId":"modembcc"},"content":"- Failed commands: `Task \u003cTASK_NAME\u003e not found: Please make sure the task exists.`","lastModifiedDate":"2024-03-15"},{"lineNumber":259,"author":{"gitId":"modembcc"},"content":"- `Project \u003cPROJECT_NAME\u003e not found: Please make sure the project exists.`","lastModifiedDate":"2024-03-15"},{"lineNumber":260,"author":{"gitId":"modembcc"},"content":"- `Status was entered incorrectly.`,","lastModifiedDate":"2024-03-15"},{"lineNumber":261,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":262,"author":{"gitId":"ananya21"},"content":"### Set Project Status : `set status of Project`","lastModifiedDate":"2024-03-12"},{"lineNumber":263,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":264,"author":{"gitId":"ananya21"},"content":"sets the status of a project as finished or unfinished","lastModifiedDate":"2024-03-12"},{"lineNumber":265,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":266,"author":{"gitId":"ananya21"},"content":"Format: `set status \u003cSTATUS\u003e project \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":267,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":268,"author":{"gitId":"modembcc"},"content":"- The specified project name must exist in the project list.","lastModifiedDate":"2024-03-15"},{"lineNumber":269,"author":{"gitId":"modembcc"},"content":"- The project status can either be `done` or `undone`","lastModifiedDate":"2024-03-15"},{"lineNumber":270,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":271,"author":{"gitId":"ananya21"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":272,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":273,"author":{"gitId":"modembcc"},"content":"- `set status done project CS2103T Duke Chatbot Project`","lastModifiedDate":"2024-03-15"},{"lineNumber":274,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":275,"author":{"gitId":"ananya21"},"content":"Expected output:","lastModifiedDate":"2024-03-12"},{"lineNumber":276,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":277,"author":{"gitId":"modembcc"},"content":"- Successful status update: `Project \u003cPROJECT_NAME\u003e is set as \u003cSTATUS\u003e`","lastModifiedDate":"2024-03-15"},{"lineNumber":278,"author":{"gitId":"modembcc"},"content":"- Failed commands: `Project \u003cPROJECT_NAME\u003e not found: Please make sure the project exists.`","lastModifiedDate":"2024-03-15"},{"lineNumber":279,"author":{"gitId":"modembcc"},"content":"- `Status was entered incorrectly.`","lastModifiedDate":"2024-03-15"},{"lineNumber":280,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":281,"author":{"gitId":"ThitipatC"},"content":"### Show Project : `show project`","lastModifiedDate":"2024-03-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":283,"author":{"gitId":"ThitipatC"},"content":"shows the projectâs details","lastModifiedDate":"2024-03-12"},{"lineNumber":284,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":285,"author":{"gitId":"ThitipatC"},"content":"Format: `show project \u003cPROJECT_NAME\u003e`","lastModifiedDate":"2024-03-12"},{"lineNumber":286,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":287,"author":{"gitId":"modembcc"},"content":"- The specified project name must exist in the project list.","lastModifiedDate":"2024-03-15"},{"lineNumber":288,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":289,"author":{"gitId":"ThitipatC"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":290,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":291,"author":{"gitId":"modembcc"},"content":"- `show project CS2103T Duke Chatbot Project`","lastModifiedDate":"2024-03-15"},{"lineNumber":292,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":293,"author":{"gitId":"ThitipatC"},"content":"Expected output:","lastModifiedDate":"2024-03-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"modembcc"},"content":"- Successful display: `The ui now shows the projectâs information`","lastModifiedDate":"2024-03-15"},{"lineNumber":296,"author":{"gitId":"modembcc"},"content":"- Failed commands: `Project \u003cPROJECT_NAME\u003e not found: Please make sure the project exists.`","lastModifiedDate":"2024-03-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":311,"author":{"gitId":"modembcc"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"modembcc"},"content":"| Action     | Format, Examples                                                                                                            |","lastModifiedDate":"2024-03-12"},{"lineNumber":316,"author":{"gitId":"modembcc"},"content":"| ---------- | --------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2024-03-12"},{"lineNumber":317,"author":{"gitId":"modembcc"},"content":"| **Add**    | `add project \u003cPROJECT_NAME\u003e` \u003cbr\u003e e.g., `add project CS2101 Presentation`                                                   |","lastModifiedDate":"2024-03-12"},{"lineNumber":318,"author":{"gitId":"modembcc"},"content":"| **Clear**  | `clear`                                                                                                                     |","lastModifiedDate":"2024-03-12"},{"lineNumber":319,"author":{"gitId":"modembcc"},"content":"| **Delete** | `delete project \u003cPROJECT_NAME\u003e`\u003cbr\u003e e.g., `delete project CS2101 Presentation`                                              |","lastModifiedDate":"2024-03-12"},{"lineNumber":320,"author":{"gitId":"modembcc"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]â¦â`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com` |","lastModifiedDate":"2024-03-12"},{"lineNumber":321,"author":{"gitId":"modembcc"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                  |","lastModifiedDate":"2024-03-12"},{"lineNumber":322,"author":{"gitId":"modembcc"},"content":"| **List**   | `list`                                                                                                                      |","lastModifiedDate":"2024-03-12"},{"lineNumber":323,"author":{"gitId":"modembcc"},"content":"| **Help**   | `help`                                                                                                                      |","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"modembcc":129,"ThitipatC":25,"Lin-Shuang-Shuang":9,"-":138,"ananya21":22}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"body,","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"h1,","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"h2,","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"h3,","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"h4,","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"h5,","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"h6,","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"p,","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"blockquote,","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"pre,","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"hr,","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"dl,","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"dd,","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"ol,","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"ul,","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"figure {","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height}","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"    $base-font-family;","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"h1,","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"h2,","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"h3,","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"h4,","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"h5,","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"h6,","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"p,","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"blockquote,","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"pre,","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"ul,","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"ol,","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"dl,","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"figure,","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"modembcc"},"content":"ul,","lastModifiedDate":"2024-03-03"},{"lineNumber":103,"author":{"gitId":"modembcc"},"content":"ol {","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"modembcc"},"content":"h1,","lastModifiedDate":"2024-03-03"},{"lineNumber":118,"author":{"gitId":"modembcc"},"content":"h2,","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"modembcc"},"content":"h3,","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"modembcc"},"content":"h4,","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"modembcc"},"content":"h5,","lastModifiedDate":"2024-03-03"},{"lineNumber":122,"author":{"gitId":"modembcc"},"content":"h6 {","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"modembcc"},"content":"  i,","lastModifiedDate":"2024-03-03"},{"lineNumber":166,"author":{"gitId":"modembcc"},"content":"  em {","lastModifiedDate":"2024-03-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"modembcc"},"content":"  th,","lastModifiedDate":"2024-03-03"},{"lineNumber":263,"author":{"gitId":"modembcc"},"content":"  td {","lastModifiedDate":"2024-03-03"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":299,"author":{"gitId":"modembcc"},"content":"    content: \"DevPlan Pro\";","lastModifiedDate":"2024-03-03"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"modembcc":44,"-":258}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"title: DevPlan Pro","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-W08-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-W08-4/tp/actions)","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W08-4/tp/graph/badge.svg?token\u003dJRBJM9DOXE)](https://codecov.io/gh/AY2324S2-CS2103T-W08-4/tp)","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"**Devplan Pro** is a project management app that is catered towards project managers who love typing. It allows the user to keep track of their various projects, the ongoing tasks within the projects, and people who are responsible for those tasks. Every action is executed through the input box using an intuitive [list of commands](https://github.com/othneildrew/Best-README-Template).","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"- If you are interested in using DevPlan Pro, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"- If you are interested about developing DevPlan Pro, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"modembcc":7,"-":11}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        builder.append(person.getName());","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"     * Formats the {@code task} for display to the user.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"    public static String format(Task task) {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"        builder.append(task.getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"modembcc":3,"Lin-Shuang-Shuang":1,"-":45,"ananya21":4}},{"path":"src/main/java/seedu/address/logic/commands/AddProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Lin-Shuang-Shuang"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Lin-Shuang-Shuang"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"public class AddProjectCommand extends Command {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public static final String COMMAND_WORD \u003d \"add project\";","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            + \"PROJECT_NAME \";","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s has been added to the project list.\";","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Project %1$s already exists\";","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    private final Person toAdd;","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public AddProjectCommand(Person person) {","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        toAdd \u003d person;","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_PERSON, Messages.format(toAdd)));","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            return true;","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        if (!(other instanceof AddProjectCommand)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            return false;","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        AddProjectCommand otherAddProjectCommand \u003d (AddProjectCommand) other;","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return toAdd.equals(otherAddProjectCommand.toAdd);","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public String toString() {","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                .toString();","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Lin-Shuang-Shuang":68}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":" * Adds a task to a project.","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    public static final String COMMAND_WORD \u003d \"add task\";","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task in a project \"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"            + \"PROJECT_NAME, TASK_NAME\";","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s has been added to the project %2$s.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"    public static final String MESSAGE_PROJECT_NOT_FOUND \u003d \"Project %2$s not found: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"            + \"Please make sure the project exists.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task %1$s already exists in project %2$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    private final Task toAdd;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    private final Person taskProject;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"    public AddTaskCommand(Task task, Person taskProject) {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        requireNonNull(task);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        requireNonNull(taskProject);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        this.toAdd \u003d task;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        this.taskProject \u003d taskProject;","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        if (!model.hasPerson(taskProject)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"                MESSAGE_PROJECT_NOT_FOUND,","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"                Messages.format(toAdd),","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"                Messages.format(taskProject)));","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ThitipatC"},"content":"        Person combineTask \u003d model.findPerson(taskProject.getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ThitipatC"},"content":"        combineTask.addTask(toAdd);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ThitipatC"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd), Messages.format(combineTask)));","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"        AddTaskCommand otherAddTaskCommand \u003d (AddTaskCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return toAdd.equals(otherAddTaskCommand.toAdd)","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                \u0026\u0026 taskProject.equals(otherAddTaskCommand.taskProject);","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"                .toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"modembcc":10,"ThitipatC":3,"Lin-Shuang-Shuang":2,"ananya21":65}},{"path":"src/main/java/seedu/address/logic/commands/AssignPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Member;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":" * Adds a task to a project.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"public class AssignPersonCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    public static final String COMMAND_WORD \u003d \"assign person\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": assigns a person to a task in a project \"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"            + \"TASK_NAME, PERSON_NAME, PROJECT_NAME\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The person %1$s has been assigned to the following task %2$s.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    private final Task task;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    private final Person project;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    private final Member member;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    public AssignPersonCommand(String member, Task task, Person project) {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        requireNonNull(task);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        this.project \u003d project;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        this.member \u003d new Member(member);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        Person projectAssign \u003d model.findPerson(project.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"        Task assignTask \u003d projectAssign.findTask(task.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        assignTask.assignPerson(this.member);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, member, Messages.format(task)));","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"                .add(\"set Member\", member)","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"                .toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ananya21":59}},{"path":"src/main/java/seedu/address/logic/commands/DeleteProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":" * Deletes a project identified using it\u0027s name from the project list.","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"public class DeleteProjectCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"    public static final String COMMAND_WORD \u003d \"delete project\";","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"            + \": Deletes the specified project. \"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"            + \"Parameters: PROJECT_NAME\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS2103\";","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"    public static final String MESSAGE_DELETE_PROJECT_SUCCESS \u003d \"[%1$s] has been deleted from the project list.\";","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"    private final String targetName;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"    public DeleteProjectCommand(String targetName) {","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"        this.targetName \u003d targetName;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"        Person targetProject \u003d new Person(new Name(targetName));","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"        Person projectToDelete \u003d null;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"            if (person.isSamePerson(targetProject)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"                projectToDelete \u003d person;","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"                break;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"        if (projectToDelete \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"        model.deletePerson(projectToDelete);","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROJECT_SUCCESS, Messages.format(projectToDelete)));","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"        if (!(other instanceof DeleteProjectCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"        DeleteProjectCommand otherDeleteCommand \u003d (DeleteProjectCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"        return targetName.equals(otherDeleteCommand.targetName);","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"                .add(\"targetName\", targetName)","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"modembcc":27,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThitipatC"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ThitipatC"},"content":" * Adds a task to a project.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ThitipatC"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ThitipatC"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ThitipatC"},"content":"    public static final String COMMAND_WORD \u003d \"delete task\";","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ThitipatC"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Delete a task in a project \"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ThitipatC"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ThitipatC"},"content":"            + \"PROJECT_NAME, TASK_NAME\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ThitipatC"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s  has been deleted from %2$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"    public static final String MESSAGE_PROJECT_NOT_FOUND \u003d \"Project %2$s not found: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"            + \"Please make sure the project exists.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"    public static final String MESSAGE_TASK_NOT_FOUND \u003d \"Task %1$s not found: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"            + \"Please make sure the task exists in project %2$s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ThitipatC"},"content":"    private final Task toDelete;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ThitipatC"},"content":"    private final Person taskProject;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ThitipatC"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ThitipatC"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ThitipatC"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ThitipatC"},"content":"    public DeleteTaskCommand(Task task, Person taskProject) {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ThitipatC"},"content":"        requireNonNull(task);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ThitipatC"},"content":"        requireNonNull(taskProject);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ThitipatC"},"content":"        this.toDelete \u003d task;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ThitipatC"},"content":"        this.taskProject \u003d taskProject;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ThitipatC"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ThitipatC"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ThitipatC"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ThitipatC"},"content":"        if (!model.hasPerson(taskProject)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"                MESSAGE_PROJECT_NOT_FOUND,","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"                Messages.format(toDelete),","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"                Messages.format(taskProject)));","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"        Person combineTask \u003d model.findPerson(taskProject.getName());","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"        if (!combineTask.hasTask(toDelete)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"                MESSAGE_TASK_NOT_FOUND,","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"                Messages.format(toDelete),","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"                Messages.format(taskProject)));","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"ThitipatC"},"content":"        combineTask.removeTask(toDelete);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"            MESSAGE_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"            Messages.format(toDelete),","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"            Messages.format(taskProject)));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ThitipatC"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ThitipatC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ThitipatC"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ThitipatC"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ThitipatC"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ThitipatC"},"content":"        if (!(other instanceof DeleteTaskCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ThitipatC"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ThitipatC"},"content":"        DeleteTaskCommand otherDeleteTaskCommand \u003d (DeleteTaskCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return toDelete.equals(otherDeleteTaskCommand.toDelete)","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                \u0026\u0026 taskProject.equals(otherDeleteTaskCommand.taskProject);","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"ThitipatC"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"ThitipatC"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"ThitipatC"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"ThitipatC"},"content":"                .add(\"toDelete\", toDelete)","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"ThitipatC"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"ThitipatC"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"modembcc":19,"ThitipatC":67,"Lin-Shuang-Shuang":2}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return new Person(updatedName);","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Lin-Shuang-Shuang":1,"-":235}},{"path":"src/main/java/seedu/address/logic/commands/SetDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":" * Adds a task to a project.","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"public class SetDeadlineCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    public static final String COMMAND_WORD \u003d \"set deadline\";","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the deadline to a task in a project \"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"            + \"TASK_NAME, DEADLINE\";","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The task %1$s has been set with the following deadline %2$s.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_WRONG_FORMAT_DEADLINE \u003d \"The deadline %1s has been entered in the wrong format.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    private final Task task;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    private final String deadline;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    private final Person project;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"    private final String datePattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"    public SetDeadlineCommand(String deadline, Task task, Person project) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        requireNonNull(task);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        this.project \u003d project;","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"        if (!deadline.matches(datePattern)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"            throw new CommandException(String.format(MESSAGE_WRONG_FORMAT_DEADLINE, deadline));","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"        Person deadlineProject \u003d model.findPerson(project.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"        Task deadlineTask \u003d deadlineProject.findTask(task.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"        this.deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"        deadlineTask.setDeadline(deadline);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(deadlineTask), deadline));","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"                .add(\"setDeadline\", deadline)","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"                .toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ananya21":70}},{"path":"src/main/java/seedu/address/logic/commands/SetStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":" * Adds a task to a project.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"public class SetStatusCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    public static final String COMMAND_WORD \u003d \"set status\";","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the status of a task in a project \"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"            + \"TASK_NAME, STATUS, PROJECT_NAME\";","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The task %1$s has the following status %2$s.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public static final String MESSAGE_WRONG_FORMAT_STATUS \u003d \"The status %1s has been entered in the wrong format.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    private final Task task;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"    private final String status;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    private final Person project;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    public SetStatusCommand(String status, Task task, Person project) {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        requireNonNull(task);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        requireNonNull(project);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        this.project \u003d project;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"        Person statusProject \u003d model.findPerson(project.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        Task statusTask \u003d statusProject.findTask(task.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"        if (status.equals(\"complete\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"            statusTask.setComplete();","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(statusTask), status));","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"        } else if (status.equals(\"incomplete\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"            statusTask.setIncomplete();","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(statusTask), status));","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"            throw new CommandException(String.format(MESSAGE_WRONG_FORMAT_STATUS, status));","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"                .add(\"set status\", status)","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"                .toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ananya21":67}},{"path":"src/main/java/seedu/address/logic/parser/AddProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Lin-Shuang-Shuang"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Lin-Shuang-Shuang"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"public class AddProjectCommandParser implements Parser\u003cAddProjectCommand\u003e {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public AddProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        String projectName \u003d args;","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        if (projectName.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        Name name \u003d ParserUtil.parseName(projectName);","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"        Person person \u003d new Person(name);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return new AddProjectCommand(person);","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"modembcc":1,"Lin-Shuang-Shuang":29}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"            String taskName \u003d args.split(\" /to\")[0];","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"            String projectName \u003d args.split(\"/to \")[1];","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"            Task task \u003d new Task(taskName);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"            if (taskName.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"                throw new ParseException(String.format(","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"                    DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"            Name name \u003d ParserUtil.parseName(projectName);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"            Person person \u003d new Person(name);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"            return new AddTaskCommand(task, person);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"                AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"modembcc":13,"ananya21":29}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.AssignPersonCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.SetDeadlineCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.SetStatusCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            \"(?\u003ccommandWord\u003e[^\\\\s]+\\\\s[^\\\\s]+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        if (userInput.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"        case AssignPersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"            return new AssignPersonCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"        case SetStatusCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"            return new SetStatusCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        case AddProjectCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            return new AddProjectCommandParser().parse(arguments);","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"modembcc"},"content":"            return new AddTaskCommandParser().parse(arguments.trim());","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"modembcc"},"content":"        case DeleteProjectCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"modembcc"},"content":"            return new DeleteProjectCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"ThitipatC"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"modembcc"},"content":"            return new DeleteTaskCommandParser().parse(arguments.trim());","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"ananya21"},"content":"        case SetDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"ananya21"},"content":"            return new SetDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"modembcc":7,"ThitipatC":1,"Lin-Shuang-Shuang":10,"-":78,"ananya21":16}},{"path":"src/main/java/seedu/address/logic/parser/AssignPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.AssignPersonCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"public class AssignPersonCommandParser implements Parser\u003cAssignPersonCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    public AssignPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        String member \u003d args.split(\" to\")[0].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"        String taskAndProject \u003d args.split(\" to\")[1].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        String taskName \u003d taskAndProject.split(\"in \")[0].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"        String projectName \u003d taskAndProject.split(\"in \")[1].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        if (projectName.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        Person project \u003d new Person(ParserUtil.parseName(projectName));","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Task newTask \u003d new Task(taskName);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        return new AssignPersonCommand(member, newTask, project);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ananya21":44}},{"path":"src/main/java/seedu/address/logic/parser/DeleteProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"public class DeleteProjectCommandParser implements Parser\u003cDeleteProjectCommand\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"    public DeleteProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"        args \u003d args.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"        if (args.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"        System.out.println(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"        return new DeleteProjectCommand(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"modembcc":9,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ThitipatC"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ThitipatC"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ThitipatC"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ThitipatC"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ThitipatC"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ThitipatC"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ThitipatC"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ThitipatC"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ThitipatC"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ThitipatC"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ThitipatC"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"            String taskName \u003d args.split(\" /in\")[0];","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"            String projectName \u003d args.split(\"/in \")[1];","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ThitipatC"},"content":"            Task task \u003d new Task(taskName);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ThitipatC"},"content":"            if (taskName.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"                throw new ParseException(String.format(","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"                    DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ThitipatC"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ThitipatC"},"content":"            Name name \u003d ParserUtil.parseName(projectName);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"            Person person \u003d new Person(name);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ThitipatC"},"content":"            return new DeleteTaskCommand(task, person);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"                AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ThitipatC"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"modembcc":13,"ThitipatC":29}},{"path":"src/main/java/seedu/address/logic/parser/SetDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.SetDeadlineCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"public class SetDeadlineCommandParser implements Parser\u003cSetDeadlineCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    public SetDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        String deadline \u003d args.split(\" of\")[0].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"        String taskAndProject \u003d args.split(\" of\")[1].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        String taskName \u003d taskAndProject.split(\"in \")[0].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"        String projectName \u003d taskAndProject.split(\"in \")[1];","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        if (projectName.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        Person project \u003d new Person(ParserUtil.parseName(projectName));","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Task newTask \u003d new Task(taskName);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        return new SetDeadlineCommand(deadline, newTask, project);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ananya21":44}},{"path":"src/main/java/seedu/address/logic/parser/SetStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.commands.SetStatusCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"public class SetStatusCommandParser implements Parser\u003cSetStatusCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    public SetStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        String status \u003d args.split(\" of\")[0].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"        String taskAndProject \u003d args.split(\" of\")[1].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        String taskName \u003d taskAndProject.split(\"in \")[0].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"        String projectName \u003d taskAndProject.split(\"in \")[1];","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        if (projectName.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        Person project \u003d new Person(ParserUtil.parseName(projectName));","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Task newTask \u003d new Task(taskName);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        return new SetStatusCommand(status, newTask, project);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ananya21":44}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"     * Returns the person object with the matching name in the addressbook","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"    public Person findPerson(Name name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"        return persons.findPerson(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"modembcc":3,"-":130,"ananya21":6}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"    Person findPerson(Name name);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"ananya21":3}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"ananya21"},"content":"    public Person findPerson(Name name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"ananya21"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"ananya21"},"content":"        return addressBook.findPerson(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":148,"ananya21":7}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"     * Constructs a Person object with empty taskList","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public Person(Name name) {","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"     * Adds task to the Person object","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        taskList.add(task);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"     * Removes task from the Person object","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ThitipatC"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ThitipatC"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ThitipatC"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ThitipatC"},"content":"            if (t.equals(task)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ThitipatC"},"content":"                taskList.remove(i);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ThitipatC"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ThitipatC"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ThitipatC"},"content":"            i +\u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"     * @param taskName name to be matched with the tasks listed in my project","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"     * @return task in the project with the matching taskName","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"    public Task findTask(Name taskName) {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"        Optional\u003cTask\u003e foundTask \u003d taskList.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"                .filter(task -\u003e task.getName().toString().equals(taskName.toString()))","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"                .findFirst();","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"        return foundTask.get();","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"     * Returns true if both projects have the same name.","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public boolean isSamePerson(Person otherProject) {","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        if (otherProject \u003d\u003d this) {","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return otherProject !\u003d null","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                \u0026\u0026 otherProject.getName().equals(getName());","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return name.equals(otherPerson.name);","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return Objects.hash(name);","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                .add(\"name\", name).toString();","lastModifiedDate":"2024-02-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"modembcc"},"content":"     * Returns true if the Person has a task that is equal to the specified task","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"ThitipatC"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"ThitipatC"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"modembcc"},"content":"            System.out.println(task.getName().fullName);","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"ThitipatC"},"content":"            if (t.equals(task)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"ThitipatC"},"content":"                return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"ThitipatC"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"ThitipatC"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"modembcc":11,"ThitipatC":16,"Lin-Shuang-Shuang":9,"-":72,"ananya21":19}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"     * Returns the person object with the matching name in the addressbook","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    public Person findPerson(Name name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        return internalList.stream()","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"                .filter(person -\u003e person.getName().equals(name))","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"                .findFirst()","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"                .orElse(null);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"modembcc":3,"-":150,"ananya21":8}},{"path":"src/main/java/seedu/address/model/project/Member.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.model.project;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":" * Represents a Task of Project","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"public class Member {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    // Identity fields","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    private final Name memberName;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private Task memberTask;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"     * Constructs a new task object","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * @param name the task name","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    public Member(String name) {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        this.memberName \u003d new Name(name);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     * Get the name of the task","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"     * @return","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    public Name getName() {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        return memberName;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        if (!(obj instanceof Task)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"        Member other \u003d (Member) obj;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        return memberName.equals(other.memberName);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"        return memberName.toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ananya21":56}},{"path":"src/main/java/seedu/address/model/project/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package seedu.address.model.project;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":" * Represents a Task of Project","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"public class Task {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    // Identity fields","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private final Name taskName;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    private Member member;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    private boolean status;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    private Integer progressCounter \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    private Integer priorityNumber;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"     * Constructs a new task object","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"     * @param name the task name","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    public Task(String name) {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        this.taskName \u003d new Name(name);","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        this.status \u003d true;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"     * Assigns a Person to the task","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"     * @param member the person assigned to the task","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    public void assignPerson(Member member) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"        this.member \u003d member;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"     * Sets the task status as complete","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"    public void setComplete() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"        this.status \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"     * Sets the task status as incomplete","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"    public void setIncomplete() {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"        this.status \u003d true;","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"        progressCounter \u003d progressCounter + 1;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"     * Gets the status of the task as a string","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"     * @return the string represeting the status of the task","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"    public String getStatus() {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"        if (status) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"            return \"Incomplete\";","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"            return \"Complete\";","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"     * Sets the deadline of the task","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"     * @param deadline the datetime string to be parsed and set as deadline","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"        this.deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"modembcc"},"content":"     * Set the priority of the task","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"modembcc"},"content":"     * @param priorityNumber the priorityNumber of the task","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"ananya21"},"content":"    public void setPriority(Integer priorityNumber) {","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"ananya21"},"content":"        this.priorityNumber \u003d priorityNumber;","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"modembcc"},"content":"     * Get the name of the task","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"modembcc"},"content":"     * @return","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"ananya21"},"content":"    public Name getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"ananya21"},"content":"        return taskName;","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"modembcc"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"modembcc"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"ThitipatC"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ThitipatC"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"ThitipatC"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"ThitipatC"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"ThitipatC"},"content":"        if (!(obj instanceof Task)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"ThitipatC"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"ThitipatC"},"content":"        Task other \u003d (Task) obj;","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"ThitipatC"},"content":"        return taskName.equals(other.taskName);","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"ananya21"},"content":"        return taskName.toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"modembcc":40,"ThitipatC":12,"ananya21":66}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            new Person(new Name(\"CS2101 Presentation\")),","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            new Person(new Name(\"Duke chatbot\")),","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            new Person(new Name(\"IS1128 project\")),","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            new Person(new Name(\"CS2103T Ab3\")),","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            new Person(new Name(\"Coding project\"))","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Lin-Shuang-Shuang":5,"-":39}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return new Person(modelName);","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Lin-Shuang-Shuang":1,"-":64}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"// import java.util.logging.Logger;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"// import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"    // private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"modembcc":3,"-":46}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertParseException(deleteCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertParseException(listCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        String addCommand \u003d AddProjectCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Lin-Shuang-Shuang":8,"-":166}},{"path":"src/test/java/seedu/address/logic/commands/AddProjectCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"public class AddProjectCommandIntegrationTest {","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertCommandSuccess(new AddProjectCommand(validPerson), model,","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                String.format(AddProjectCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertCommandFailure(new AddProjectCommand(personInList), model,","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                String.format(AddProjectCommand.MESSAGE_DUPLICATE_PERSON, Messages.format(personInList)));","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Lin-Shuang-Shuang":5,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"public class AddProjectCommandTest {","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddProjectCommand(null));","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        CommandResult commandResult \u003d new AddProjectCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(String.format(AddProjectCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        AddProjectCommand addProjectCommand \u003d new AddProjectCommand(validPerson);","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertThrows(CommandException.class, String.format(AddProjectCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                Messages.format(validPerson)), () -\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                addProjectCommand.execute(modelStub));","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        AddProjectCommand addAliceCommand \u003d new AddProjectCommand(alice);","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        AddProjectCommand addBobCommand \u003d new AddProjectCommand(bob);","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        AddProjectCommand addAliceCommandCopy \u003d new AddProjectCommand(alice);","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        AddProjectCommand addProjectCommand \u003d new AddProjectCommand(ALICE);","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        String expected \u003d AddProjectCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(expected, addProjectCommand.toString());","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"ananya21"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"ananya21"},"content":"        public Person findPerson(Name name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"ananya21"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Lin-Shuang-Shuang":14,"-":192,"ananya21":6}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    private Person taskProject \u003d new Person(new Name(\"default\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, taskProject));","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        Task alice \u003d new Task(\"Alice\");","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        Task bob \u003d new Task(\"Bob\");","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        AddTaskCommand addAliceCommand \u003d new AddTaskCommand(alice, taskProject);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        AddTaskCommand addBobCommand \u003d new AddTaskCommand(bob, taskProject);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        AddTaskCommand addAliceCommandCopy \u003d new AddTaskCommand(alice, taskProject);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public Person findPerson(Name name) {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"ananya21"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"ananya21"},"content":"        private final Person person;","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"ananya21"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"ananya21"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"ananya21"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"ananya21"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"ananya21"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"ananya21"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"ananya21"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"ananya21"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"ananya21"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"ananya21"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"ananya21"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"ananya21"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"ananya21"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"ananya21"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"ananya21"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"ananya21"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"ananya21"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"ananya21"},"content":"            personsAdded.add(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"ananya21"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"ananya21"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"ananya21"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Lin-Shuang-Shuang":117,"ananya21":62}},{"path":"src/test/java/seedu/address/logic/commands/DeleteProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"public class DeleteProjectCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"    public void execute_validProject_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"        Person projectToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"        DeleteProjectCommand deleteCommand \u003d new DeleteProjectCommand(projectToDelete.getName().fullName);","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"        String expectedMessage \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"                Messages.format(projectToDelete));","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"        expectedModel.deletePerson(projectToDelete);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"    public void execute_invalidProject_throwsCommandException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"        DeleteProjectCommand deleteCommand \u003d new DeleteProjectCommand(\"thereisnoproject withthisname\");","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"        DeleteProjectCommand deleteFirstCommand \u003d new DeleteProjectCommand(\"FirstProject\");","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"        DeleteProjectCommand deleteSecondCommand \u003d new DeleteProjectCommand(\"SecondProject\");","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"        DeleteProjectCommand deleteFirstCommandCopy \u003d new DeleteProjectCommand(\"FirstProject\");","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"        String targetName \u003d \"Dummy Project\";","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"        DeleteProjectCommand deleteCommand \u003d new DeleteProjectCommand(targetName);","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"        String expected \u003d DeleteProjectCommand.class.getCanonicalName() + \"{targetName\u003d\" + targetName + \"}\";","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"modembcc":15,"-":62}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.model.project.Task;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"class DeleteTaskCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    private Task tempTask1 \u003d new Task(\"rehearse\");","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    private Task tempTask2 \u003d new Task(\"Write script\");","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    private Person presentation \u003d new PersonBuilder().withName(\"Presentation\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    private Person codingProject \u003d new PersonBuilder().withName(\"Coding Project\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(tempTask1, presentation);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(tempTask1, codingProject);","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        DeleteTaskCommand deleteThirdCommand \u003d new DeleteTaskCommand(tempTask2, presentation);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(tempTask1, presentation);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // different project, same task -\u003e returns false (FAILED!)","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // same project, different task -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertFalse(deleteFirstCommand.equals(deleteThirdCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // different project, different task -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertFalse(deleteSecondCommand.equals(deleteThirdCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        String targetName \u003d \"rehearse\";","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(tempTask1, presentation);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        String expected \u003d DeleteTaskCommand.class.getCanonicalName() + \"{toDelete\u003d\" + tempTask1 + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Lin-Shuang-Shuang":51,"ananya21":10}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"            EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"            Messages.format(editedPerson));","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        //Filtering not yet implemented","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        // Filtering not yet implemented","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"modembcc":3,"Lin-Shuang-Shuang":5,"-":180}},{"path":"src/test/java/seedu/address/logic/parser/AddProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"public class AddProjectCommandParserTest {","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    private AddProjectCommandParser parser \u003d new AddProjectCommandParser();","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \"Bob Choo\", new AddProjectCommand(expectedPerson));","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":37,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertParseSuccess(parser, \"Amy Bee\",","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"                new AddProjectCommand(expectedPerson));","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProjectCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Lin-Shuang-Shuang":9,"-":41}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"    public void parseCommand_addProject() throws Exception {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        AddProjectCommand command \u003d (AddProjectCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(new AddProjectCommand(person), command);","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"    public void parseCommand_deleteProject() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"        DeleteProjectCommand command \u003d (DeleteProjectCommand) parser.parseCommand(","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"            DeleteProjectCommand.COMMAND_WORD + \" \" + \"Dummy Project\");","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"        assertEquals(new DeleteProjectCommand(\"Dummy Project\"), command);","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"        //clear function not yet implemented","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        //edit function not yet implemented","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        //exit function not yet implemented","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        //find function not yet implemented","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        //help function not yet implemented","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        //list function not yet implemented","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        assertEquals(0, 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"modembcc":7,"Lin-Shuang-Shuang":15,"-":68}},{"path":"src/test/java/seedu/address/logic/parser/DeleteProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"public class DeleteProjectCommandParserTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"    private DeleteProjectCommandParser parser \u003d new DeleteProjectCommandParser();","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"        assertParseSuccess(parser, \"Dummy Project\", new DeleteProjectCommand(\"Dummy Project\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"            parser,","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"            \"\",","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"modembcc":9,"-":25}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"    // private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"    // private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"    // private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"    // private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"    // private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    // private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"modembcc":6,"-":21}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"// import java.util.HashSet;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"// import java.util.Set;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"// import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"// import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"// import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"// import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"// import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"    // private Phone phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"    // private Email email;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"    // private Address address;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"    // private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"        // phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"        // email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"        // address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"        // tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"        // this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"        // this.address \u003d new Address(address);","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"modembcc"},"content":"        // this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"modembcc"},"content":"        // this.email \u003d new Email(email);","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return new Person(name);","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"modembcc":19,"Lin-Shuang-Shuang":1,"-":72}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        return AddProjectCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Lin-Shuang-Shuang"},"content":"        sb.append(person.getName().fullName);","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Lin-Shuang-Shuang":3,"-":53}}]
