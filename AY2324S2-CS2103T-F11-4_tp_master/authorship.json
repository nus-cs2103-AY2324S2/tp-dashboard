[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F11-4/tp/actions)","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"# Dormie","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"\u003cimg src\u003d\"docs/images/dormie.png\" width\u003d\"300\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"Welcome to **Dormie**, designed to help you keep tabs on where your friends reside in NUS College for easy meetups. Simply note down their names, room numbers, and any important details. This logbook is your handy guide to quickly locate friends when you need a chat or advice. Let\u0027s make staying connected a breeze in our community!","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"P.S. It is named `Dormie` because it is a playful and friendly abbreviation of \"dormitory.\".","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"## Our Easy-to-Use Interface","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"* Key Features","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"  - View all contacts","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"  - Create a new contact","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"  - Edit a current contact","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"  - Delete an old contact","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"* For the detailed documentation of this project, see the **[Dormie Product Website](https://ay2324s2-cs2103t-f11-4.github.io/tp/)**.","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"donwong2308":2,"larainezo":15,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"PallonCX"},"content":"    archiveFileName \u003d \u0027dormie.jar\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"PallonCX"},"content":"run {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"PallonCX"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"PallonCX":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"\u003cimg src\u003d\"images/dormie.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"You can reach us at the email `dormie.cs2103T@gmail.com`","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"### Donavon","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"\u003cimg src\u003d\"images/donwong2308.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"Hi, I am Donavon, currently a Year 2 Computer Science student. I enjoy bouldering in my free time.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"[[projects]()]","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"[[github](https://github.com/donwong2308)]","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"[[portfolio]()]","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"* Role: Testing","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"* Responsibilities: Exception handling, Assertions","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"### Laraine","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"\u003cimg src\u003d\"images/larainezo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"Hi, I’m Laraine, a year 2 Computer Science student. I like to wake up early to run!","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"[[projects](https://larainelwx.wixsite.com/digitalportfolio)]","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"[[github](http://github.com/larainezo)]","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"[[portfolio]()]","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"* Responsibilities: Overall project coordination, Assignment of tasks, Keep track of team members\u0027 progress","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"### Pallon","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"\u003cimg src\u003d\"images/palloncx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"Hi, I’m Chee Xiang, a year 2 Computer Science student. I’m from a country at North of Singapore, which is Malaysia. My hobby will be travelling around different countries (or locally), but I’m currently earning my travel expenses by studying (for a good income in the future) and working part-time.","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"[[projects]()]","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"[[github](http://github.com/PallonCX)]","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"* Role: Scheduling and tracking","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"* Responsibilities: Github Issue Tracker","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"### Wei Hao","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"larainezo"},"content":"\u003cimg src\u003d\"images/justweihao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"Hi, I’m Wei Hao, a year 2 Computer Science Student. I’m from Malaysia. I play video games and watch animes during my free time.","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"[[projects]()]","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"[[github](http://github.com/JustWeiHao)]","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"[[portfolio]()]","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"larainezo"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"larainezo"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"larainezo"},"content":"### Zoe","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"larainezo"},"content":"\u003cimg src\u003d\"images/nyankoclaws.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"larainezo"},"content":"I’m a Y2 CS \u0026 Psych double major. I like to sleep at least 8hrs :)","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"larainezo"},"content":"[[projects]()]","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"larainezo"},"content":"[[github](http://github.com/nyankoclaws)]","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"larainezo"},"content":"[[portfolio]()]","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"larainezo"},"content":"* Role: Code quality","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"larainezo"},"content":"* Responsibilities: Gradle Stylecheck","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"larainezo":44,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"# Dormie Developer Guide","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"donwong2308"},"content":"### **Free TIme Tag Feature**","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"donwong2308"},"content":"#### Implementation","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"donwong2308"},"content":"The implementation consists of two main classes: `Tag` and `FreeTimeTag`.","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"donwong2308"},"content":"1. #### Tag Class","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"donwong2308"},"content":"- `Tag` is an abstract class representing a general tag in Dormie.","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"donwong2308"},"content":"- It contains the common properties and behaviors shared by all types of tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"donwong2308"},"content":"- The `tagName` field represents the name of the tag.","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"donwong2308"},"content":"- Methods such as `equals`, `hashCode`, and `toString` are declared abstract to be implemented by subclasses.","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"donwong2308"},"content":"2. #### FreeTimeTag Class:","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"donwong2308"},"content":"- `FreeTimeTag` is a subclass of `Tag` specifically designed for free time tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"donwong2308"},"content":"- It adds additional constraints and validation specific to free time tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"donwong2308"},"content":"- The `MESSAGE_CONSTRAINTS` constant defines the validation message for free time tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"donwong2308"},"content":"- The `VALIDATION_REGEX` constant specifies the regex pattern for valid free time tag format.","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"donwong2308"},"content":"- The constructor ensures that the provided tag name meets the required format.","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"donwong2308"},"content":"- Additional methods such as `isValidTagName` validate the tag name against the defined regex pattern.","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"donwong2308"},"content":"#### Operations","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"donwong2308"},"content":"[TBC]","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"larainezo"},"content":"#### Implementation","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"larainezo"},"content":"The add free time mechanism is a version of the `EditCommand`. Instead of replacing specified field values of a current contact, the `AddTimeCommand` appends to the current freeTimeTags hashset.","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"larainezo"},"content":"Given below is an example usage scenario and how the add free time mechanism behaves at each step.","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"larainezo"},"content":"Step 2. The user executes `add n/Jane …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"larainezo"},"content":"Step 3. The user now wants to add another free time for a friend, and does so by executing the `addTime [index] ft/Wed:1000-1100` command. The `addTime` command, after successfully passing the parser, will retrieve the current FreeTimeTags HashSet. It will then append, in order of day, the new free time to the HashSet. That is, the new free time 1000-1100 on Wednesday will be appended just after timings that fall before Wednesday 1000.","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"larainezo"},"content":"\u003cpuml src\u003d\"diagrams/AddFreeTimeSequenceDiagram-Logic.puml\" alt\u003d\"AddFreeTimeSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"larainezo"},"content":"**Aspect: How add free time executes:**","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"larainezo"},"content":"* **Alternative 1 (current choice):** Append to HashSet in order.","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"larainezo"},"content":"  * Pros: Easy to visualise in GUI.","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"larainezo"},"content":"  * Cons: Additional time to loop through current HashSet to append in the current position.","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"larainezo"},"content":"* **Alternative 2:** Append to end of HashSet","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"larainezo"},"content":"  * Pros: Easy to implement because the new free time can just be appended at the end of the HashSet.","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"larainezo"},"content":"  * Cons: Difficult to visualise in GUI (free time in Monday may appear after Tuesday\u0027s).","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"PallonCX"},"content":"* Jim is an undergraduate student enrolled in NUS College and wants to network with his batchmates who stay in the","lastModifiedDate":"2024-03-01"},{"lineNumber":241,"author":{"gitId":"PallonCX"},"content":"same dorm as him.","lastModifiedDate":"2024-03-01"},{"lineNumber":242,"author":{"gitId":"PallonCX"},"content":"* He likes to interact with students from other floors. Every year, the students will change rooms and new students","lastModifiedDate":"2024-03-01"},{"lineNumber":243,"author":{"gitId":"PallonCX"},"content":"will come in as well.","lastModifiedDate":"2024-03-01"},{"lineNumber":244,"author":{"gitId":"PallonCX"},"content":"* When unsure of his work, he tends to look for his peers for help.","lastModifiedDate":"2024-03-01"},{"lineNumber":245,"author":{"gitId":"PallonCX"},"content":"* Jim also enjoys celebrating milestones, especially birthdays.","lastModifiedDate":"2024-03-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":247,"author":{"gitId":"PallonCX"},"content":"**Value proposition**: Jim will be able to create and update student contacts quickly.","lastModifiedDate":"2024-03-01"},{"lineNumber":248,"author":{"gitId":"PallonCX"},"content":"He will be able to add many personal details to the contacts as well. It is optimized to search for contacts quickly.","lastModifiedDate":"2024-03-01"},{"lineNumber":249,"author":{"gitId":"PallonCX"},"content":"It will also include settings to create a custom look for the application.","lastModifiedDate":"2024-03-01"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"PallonCX"},"content":"| Priority | As a …​                                                              | I can …​                                                             | So that …​                                                                                      |","lastModifiedDate":"2024-03-02"},{"lineNumber":256,"author":{"gitId":"PallonCX"},"content":"|----------|----------------------------------------------------------------------|----------------------------------------------------------------------|-------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-02"},{"lineNumber":257,"author":{"gitId":"PallonCX"},"content":"| `* * *`  | student who just started living in dorm                              | create a new contact                                                 | I can remember the particulars of a new dorm mate                                               |","lastModifiedDate":"2024-03-02"},{"lineNumber":258,"author":{"gitId":"PallonCX"},"content":"| `* * *`  | student living in dorm                                               | choose to specify the room number upon contact creation              | I do not need to update my dorm mate’s room number separately                                   |","lastModifiedDate":"2024-03-02"},{"lineNumber":259,"author":{"gitId":"PallonCX"},"content":"| `* * *`  | student living in dorm                                               | choose to specify the birthday upon contact creation                 | I do not need to update my dorm mate’s birthday separately                                      |","lastModifiedDate":"2024-03-02"},{"lineNumber":260,"author":{"gitId":"PallonCX"},"content":"| `* * *`  | student living in dorm                                               | delete a contact                                                     | I can stay updated on who no longer resides in the dorm                                         |","lastModifiedDate":"2024-03-02"},{"lineNumber":261,"author":{"gitId":"PallonCX"},"content":"| `* * *`  | student living in dorm                                               | edit a contact’s name                                                | I can change the name if it was initially created incorrectly or the name has been changed      |","lastModifiedDate":"2024-03-02"},{"lineNumber":262,"author":{"gitId":"PallonCX"},"content":"| `* * *`  | student living in dorm                                               | edit a contact’s room number                                         | I can stay updated if my dorm mate changes room                                                 |","lastModifiedDate":"2024-03-02"},{"lineNumber":263,"author":{"gitId":"PallonCX"},"content":"| `* * *`  | student living in dorm                                               | view all contacts                                                    | I can keep track of how to find my dorm mates if I need their help AND remember their birthdays |","lastModifiedDate":"2024-03-02"},{"lineNumber":264,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm                                               | view allowed commands when the application launches                  | I am aware of what functions I can use in the application                                       |","lastModifiedDate":"2024-03-02"},{"lineNumber":265,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm                                               | get autocomplete when typing commands                                | I can quickly give my commands                                                                  |","lastModifiedDate":"2024-03-02"},{"lineNumber":266,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm with many contacts                            | search a contact by name                                             | I can quickly find details of my dorm mates                                                     |","lastModifiedDate":"2024-03-02"},{"lineNumber":267,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm with many contacts                            | search a contact by dorm room number                                 | I can find where are my dorm mates                                                              |","lastModifiedDate":"2024-03-02"},{"lineNumber":268,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm with many contacts                            | search a contact by birthday                                         | I know whose birthday is in which month                                                         |","lastModifiedDate":"2024-03-02"},{"lineNumber":269,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm with many contacts                            | filter contacts by name / dorm room number / birthday                | I can quickly find details of my dorm mates                                                     |","lastModifiedDate":"2024-03-02"},{"lineNumber":270,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm                                               | add a profile picture for each contact                               | I can recognise and identify the contact person                                                 |","lastModifiedDate":"2024-03-02"},{"lineNumber":271,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm                                               | add telegram link for each contact                                   | I can contact them on telegram / In case they do not want to disclose their phone number        |","lastModifiedDate":"2024-03-02"},{"lineNumber":272,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm                                               | add Instagram link for each contact                                  | I can get updates as to what my friends are up to                                               |","lastModifiedDate":"2024-03-02"},{"lineNumber":273,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm                                               | add Linkedin link for each contact                                   | I can get updates on my friend’s career progress                                                |","lastModifiedDate":"2024-03-02"},{"lineNumber":274,"author":{"gitId":"PallonCX"},"content":"| `* *`    | student living in dorm                                               | add Facebook link for each contact                                   | I can get updates as to what my friends are up to                                               |","lastModifiedDate":"2024-03-02"},{"lineNumber":275,"author":{"gitId":"PallonCX"},"content":"| `*`      | student living in dorm                                               | add personal website link for each contact                           | I can get a sense of different types of portfolios which my batch mates may have                |","lastModifiedDate":"2024-03-02"},{"lineNumber":276,"author":{"gitId":"PallonCX"},"content":"| `*`      | student living in dorm                                               | sync room updated room numbers across multiple users (decentralised) | I can just update my room number and not worry about other user’s room numbers                  |","lastModifiedDate":"2024-03-02"},{"lineNumber":277,"author":{"gitId":"PallonCX"},"content":"| `*`      | student living in dorm who has many events planned with dorm friends | sync events across calendars (decentralised using event codes)       | I can find other students to go to events with                                                  |","lastModifiedDate":"2024-03-02"},{"lineNumber":278,"author":{"gitId":"PallonCX"},"content":"| `*`      | student living in dorm with many contacts                            | filter by non-graduated students / by student year number            | I can find people who are still students                                                        |","lastModifiedDate":"2024-03-02"},{"lineNumber":279,"author":{"gitId":"PallonCX"},"content":"| `*`      | student living in dorm who has many events planned with dorm friends | view my upcoming events                                              | I can plan for them accordingly                                                                 |","lastModifiedDate":"2024-03-02"},{"lineNumber":280,"author":{"gitId":"PallonCX"},"content":"| `*`      | student living in dorm who has many events planned with dorm friends | view upcoming birthdays                                              | I can plan for them accordingly / wish them happy birthday                                      |","lastModifiedDate":"2024-03-02"},{"lineNumber":281,"author":{"gitId":"PallonCX"},"content":"| `*`      | student who just started living in dorm                              | type help to get a list of all commands and how to use them          | I can find the command I want to use                                                            |","lastModifiedDate":"2024-03-02"},{"lineNumber":282,"author":{"gitId":"PallonCX"},"content":"| `*`      | student living in dorm                                               | toggle between dark and light mode                                   | I can make my view of the application more comfortable to the eye                               |","lastModifiedDate":"2024-03-02"},{"lineNumber":283,"author":{"gitId":"PallonCX"},"content":"| `*`      | student living in dorm                                               | apply custom background / colour scheme by hex codes                 | I can personalise the application to my liking                                                  |","lastModifiedDate":"2024-03-02"},{"lineNumber":284,"author":{"gitId":"PallonCX"},"content":"| `*`      | student who just started living in dorm                              | add my personal details - name, room number, birthday                | I can have notifications addressed to me                                                        |","lastModifiedDate":"2024-03-02"},{"lineNumber":285,"author":{"gitId":"PallonCX"},"content":"| `*`      | student living in dorm                                               | export contact details as a .csv file                                | I can save and share the contacts in a backup location                                          |","lastModifiedDate":"2024-03-02"},{"lineNumber":286,"author":{"gitId":"PallonCX"},"content":"| `*`      | as a student living in dorm with an existing contacts data file      | import contact details from a .csv file                              | I can duplicate contacts into another copy of the application on another device                 |","lastModifiedDate":"2024-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"PallonCX"},"content":"(For all use cases below, the **System** is the `Dormie` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"PallonCX"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2024-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"PallonCX"},"content":"1.  User requests to list contacts","lastModifiedDate":"2024-03-02"},{"lineNumber":297,"author":{"gitId":"PallonCX"},"content":"2.  Dormie shows a list of contacts","lastModifiedDate":"2024-03-02"},{"lineNumber":298,"author":{"gitId":"PallonCX"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2024-03-02"},{"lineNumber":299,"author":{"gitId":"PallonCX"},"content":"4.  Dormie deletes the contact","lastModifiedDate":"2024-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"PallonCX"},"content":"    * 3a1. Dormie shows an error message.","lastModifiedDate":"2024-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"PallonCX"},"content":"**Use case: Edit a contact\u0027s name**","lastModifiedDate":"2024-03-02"},{"lineNumber":316,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":317,"author":{"gitId":"PallonCX"},"content":"**MSS**","lastModifiedDate":"2024-03-02"},{"lineNumber":318,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":319,"author":{"gitId":"PallonCX"},"content":"1.  User requests to list contacts","lastModifiedDate":"2024-03-02"},{"lineNumber":320,"author":{"gitId":"PallonCX"},"content":"2.  Dormie shows a list of contacts","lastModifiedDate":"2024-03-02"},{"lineNumber":321,"author":{"gitId":"PallonCX"},"content":"3.  User requests to edit a specific contact\u0027s name in the list","lastModifiedDate":"2024-03-02"},{"lineNumber":322,"author":{"gitId":"PallonCX"},"content":"4.  Dormie updates the contact with new edited name","lastModifiedDate":"2024-03-02"},{"lineNumber":323,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":324,"author":{"gitId":"PallonCX"},"content":"    Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":325,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":326,"author":{"gitId":"PallonCX"},"content":"**Extensions**","lastModifiedDate":"2024-03-02"},{"lineNumber":327,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":328,"author":{"gitId":"PallonCX"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-02"},{"lineNumber":329,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":330,"author":{"gitId":"PallonCX"},"content":"  Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":331,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":332,"author":{"gitId":"PallonCX"},"content":"* 3a. The given name is invalid.","lastModifiedDate":"2024-03-02"},{"lineNumber":333,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":334,"author":{"gitId":"PallonCX"},"content":"    * 3a1. Dormie shows an error message.","lastModifiedDate":"2024-03-02"},{"lineNumber":335,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":336,"author":{"gitId":"PallonCX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-02"},{"lineNumber":337,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":338,"author":{"gitId":"PallonCX"},"content":"**Use case: Upload contact data file**","lastModifiedDate":"2024-03-02"},{"lineNumber":339,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":340,"author":{"gitId":"PallonCX"},"content":"**MSS**","lastModifiedDate":"2024-03-02"},{"lineNumber":341,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":342,"author":{"gitId":"PallonCX"},"content":"1.  User requests to upload contact data file","lastModifiedDate":"2024-03-02"},{"lineNumber":343,"author":{"gitId":"PallonCX"},"content":"2.  Dormie requests for the file location","lastModifiedDate":"2024-03-02"},{"lineNumber":344,"author":{"gitId":"PallonCX"},"content":"3.  User specifies the file location","lastModifiedDate":"2024-03-02"},{"lineNumber":345,"author":{"gitId":"PallonCX"},"content":"4.  Dormie uploads the contact data file","lastModifiedDate":"2024-03-02"},{"lineNumber":346,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":347,"author":{"gitId":"PallonCX"},"content":"    Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":348,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":349,"author":{"gitId":"PallonCX"},"content":"**Extensions**","lastModifiedDate":"2024-03-02"},{"lineNumber":350,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":351,"author":{"gitId":"PallonCX"},"content":"* 3a. The given file path is invalid.","lastModifiedDate":"2024-03-02"},{"lineNumber":352,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":353,"author":{"gitId":"PallonCX"},"content":"    * 3a1. Dormie shows an error message.","lastModifiedDate":"2024-03-02"},{"lineNumber":354,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":355,"author":{"gitId":"PallonCX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"PallonCX"},"content":"4.  The application should be backward compatible with data produced by earlier versions of the application.","lastModifiedDate":"2024-03-02"},{"lineNumber":363,"author":{"gitId":"PallonCX"},"content":"5.  The product should respond within one second.","lastModifiedDate":"2024-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"PallonCX"},"content":"* **GUI**: Graphical User Interface, the visual interface through which users interact with the application.","lastModifiedDate":"2024-03-02"},{"lineNumber":370,"author":{"gitId":"PallonCX"},"content":"* **Performance**: The speed at which the application responds to user input.","lastModifiedDate":"2024-03-02"},{"lineNumber":371,"author":{"gitId":"PallonCX"},"content":"* **Command**: A text-based instruction given to the application to perform a specific task.","lastModifiedDate":"2024-03-02"},{"lineNumber":372,"author":{"gitId":"PallonCX"},"content":"* **Telegram**: A messaging app.","lastModifiedDate":"2024-03-02"},{"lineNumber":373,"author":{"gitId":"PallonCX"},"content":"* **Telegram handle**: A unique identifier for a user in Telegram.","lastModifiedDate":"2024-03-02"},{"lineNumber":374,"author":{"gitId":"PallonCX"},"content":"* **Instagram**: A social media platform.","lastModifiedDate":"2024-03-02"},{"lineNumber":375,"author":{"gitId":"PallonCX"},"content":"* **Instagram handle**: A unique identifier for a user in Instagram.","lastModifiedDate":"2024-03-02"},{"lineNumber":376,"author":{"gitId":"PallonCX"},"content":"* **Facebook**: A social media platform.","lastModifiedDate":"2024-03-02"},{"lineNumber":377,"author":{"gitId":"PallonCX"},"content":"* **Facebook handle**: A unique identifier for a user in Facebook.","lastModifiedDate":"2024-03-02"},{"lineNumber":378,"author":{"gitId":"PallonCX"},"content":"* **LinkedIn**: A professional networking platform.","lastModifiedDate":"2024-03-02"},{"lineNumber":379,"author":{"gitId":"PallonCX"},"content":"* **LinkedIn Link**: The link to the profile of a user in LinkedIn.","lastModifiedDate":"2024-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":389,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":390,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"nyankoclaws"},"content":"### Adding a person","lastModifiedDate":"2024-03-29"},{"lineNumber":412,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":413,"author":{"gitId":"nyankoclaws"},"content":"1. Adding a person","lastModifiedDate":"2024-03-29"},{"lineNumber":414,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":415,"author":{"gitId":"nyankoclaws"},"content":"   1. Prerequisites: Open the application","lastModifiedDate":"2024-03-29"},{"lineNumber":416,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":417,"author":{"gitId":"nyankoclaws"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2024-03-29"},{"lineNumber":418,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":419,"author":{"gitId":"nyankoclaws"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2024-03-29"},{"lineNumber":420,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"nyankoclaws"},"content":"### Saving data to JSON","lastModifiedDate":"2024-03-29"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"nyankoclaws"},"content":"   1. _{ explain how the room number formatting requires dates }_","lastModifiedDate":"2024-03-29"},{"lineNumber":444,"author":{"gitId":"nyankoclaws"},"content":"   1. _{ tbc }_","lastModifiedDate":"2024-03-29"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"donwong2308":18,"PallonCX":102,"larainezo":13,"nyankoclaws":13,"-":300}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"nyankoclaws"},"content":"# Dormie User Guide","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"nyankoclaws"},"content":"Dormie is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Dormie can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"---","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"nyankoclaws"},"content":"## Command Summary","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"nyankoclaws"},"content":"Action     | Format, Examples","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"nyankoclaws"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"nyankoclaws"},"content":"**Add**    | `add n/NAME r/ROOM_NUM​` \u003cbr\u003e e.g., `add Alice Lim r/02-03`","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"**Clear**  | `clear`","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"nyankoclaws"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"nyankoclaws"},"content":"**Edit**   | `edit INDEX [n/NAME] [r/ROOM_NUM​]​`\u003cbr\u003e e.g.,`edit 1 n/Alex r/05-11`","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"**Exit**   | `exit`","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"**Find**   | `find KEYWORD`\u003cbr\u003e e.g., `find Alice`","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"**Help**   | `help`","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"nyankoclaws"},"content":"**List**   | `list`","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"**Add Free Time**| `addTime INDEX ft/TIME`\u003cbr\u003e e.g., `addTime 1 ft/Mon:0800-1200`","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"**Delete Free Time**| `deleteTime INDEX ft/TIME`\u003cbr\u003e e.g., `deleteTime 1 ft/Mon:0800-1200`","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"JustWeiHao"},"content":"**Who Is Free**| `whoisfree TIME`\u003cbr\u003e e.g., `whoisfree Mon:0800`","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"nyankoclaws"},"content":"---","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"## Using This User Guide","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"### Text Types","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"Type                                | What it means","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"-----------                         |----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"**Bold**                            | Command word \u003cbr\u003e e.g., **add**, which adds a new contact","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"`Code Block`                        | A line of command that can be entered into Dormie\u0027s input field \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com r/sw-01-01 t/johnDoe b/12/12/2000 ft/Mon:1300-1400`","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"\\\u003cvalue\\\u003e                           | Value for the respective field \u003cbr\u003e e.g., `add n/\u003cname\u003e p/\u003cphoneNumber\u003e e/\u003cemail\u003e r/\u003croomNumber\u003e t/\u003ctelegramHandle\u003e b/\u003cbirthday\u003e`","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"\\[optionalField\\]                   | Indicates an optional field \u003cbr\u003e e.g., `add n/\u003cname\u003e [t/\u003ctelegramHandle\u003e]`, where telegramHandle is an optional field.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"### Searching for Keywords (Ctrl-F)","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"1. Press the Ctrl + F keys on your keyboard.","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"2. A search bar or dialog box should appear on your screen.","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"3. Type the keyword or phrase you want to search for in the search bar or dialog box.","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"4. Press Enter or click on the \"Find\" button to start the search.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"5. The document viewer or web browser will highlight all instances of the keyword or phrase found within the document.","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"6. To navigate through the search results, you can use the arrow buttons or options provided by the search feature.","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"7. Once you have finished reviewing the search results, you can close the search bar or dialog box to return to your document.","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"---","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"nyankoclaws"},"content":"## Quick Start","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"nyankoclaws"},"content":"   - MacOS: [Java 11](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html)","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"   - Windows: [Java 11](https://www.azul.com/downloads/?version\u003djava-11-lts\u0026os\u003dmacos\u0026architecture\u003darm-64-bit\u0026package\u003djdk-fx#zulu)","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"JustWeiHao"},"content":"1. Download the latest `dormie.jar` from [here](https://github.com/AY2324S2-CS2103T-F11-4/tp/releases).","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"nyankoclaws"},"content":"1. Create a new _Home Folder_ you want Dormie to permanently reside in.","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"nyankoclaws"},"content":"   - Move Dormie into the _Home Folder_","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"nyankoclaws"},"content":"   - This is where Dormie and all it\u0027s supporting data will be stored","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"nyankoclaws"},"content":"1. Open a command terminal (`Terminal` for MacOS, or `Windows Terminal` for Windows)","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"nyankoclaws"},"content":"   - MacOS:","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"nyankoclaws"},"content":"     1. Right click the _Home Folder_","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"nyankoclaws"},"content":"     1. Left click `New Terminal at Folder`","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"nyankoclaws"},"content":"   - Windows:","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"nyankoclaws"},"content":"     1. Navigate into the _Home Folder_","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"nyankoclaws"},"content":"     1. Right click anywhere inside the _Home Folder_","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"nyankoclaws"},"content":"     1. Left click `Open in Windows Terminal`","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"nyankoclaws"},"content":"1. Past this Command into the new terminal window `java -jar dormie.jar` and press enter.\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"nyankoclaws"},"content":"1. Type the command in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"nyankoclaws"},"content":"   Quick Tutorial:","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"nyankoclaws"},"content":"   - `add n/John Doe n/sw-01-01` : Adds a contact named `John Doe` to Dormie.","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"nyankoclaws"},"content":"   - `find John` : Finds a contact with `John` in his name.","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"nyankoclaws"},"content":"   - `delete 1` : Deletes the 1st contact shown in the current list.","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"nyankoclaws"},"content":"   - `list` : Lists all contacts again.","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"nyankoclaws"},"content":"1. Refer to [Features](#features) below for details of each command","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"nyankoclaws"},"content":"or to [Command Summary](#command-summary) for a summary of the commands.","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"donwong2308"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"donwong2308"},"content":"## Contact Fields","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"donwong2308"},"content":"| Field Name        | Valid Format, Examples                                                                                                                                           |","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"donwong2308"},"content":"|-------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"donwong2308"},"content":"| **Name**          | Any non-empty String, eg:`Dormie`                                                                                                                                |","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"donwong2308"},"content":"| **Dorm Tag**      | Any non-empty String, eg:`PGPR`                                                                                                                                  |","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"donwong2308"},"content":"| **Free Time Tag** | DDD:HHmm-HHmm, Start Time **must** be earlier than End Time, eg:`Mon:1300-1400`                                                                                  |","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"donwong2308"},"content":"| **Phone**         | Must contain 8 digits, eg:`91234567`                                                                                                                             |","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"donwong2308"},"content":"| **Room Number**   | {block}-{floor}-{room number}, where block and room number are at least 2 alphanumeric characters and floor is strictly 2 alphanumeric characters, eg:`nw-12-12` |","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"donwong2308"},"content":"| **Email**         | Must contain @ and .com, eg:`dormie@example.com`                                                                                                                 |","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"donwong2308"},"content":"| **Telegram**      | Can only contain case-insensitive letters A-Z, digits 0-9, and underscores, with a length between 5 and 32 characters, eg:`dormie_123`                           |","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"donwong2308"},"content":"| **Birthday**      | dd/MM/yyyy\", \"dd-MM-yyyy\", \"yyyy/MM/dd\", \"yyyy-MM-dd, eg:`21/01/2024`, `21-01-2024`, `2024/01/21`, `2024-01-21`                                                  |","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"nyankoclaws"},"content":"---","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"nyankoclaws"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"nyankoclaws"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"donwong2308"},"content":"- Free Time Tags are in the following format: `DDD:HHmm-HHmm` \u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"donwong2308"},"content":"- `DDD` is from Mon-Sun, `HHmm` is 24 hour time format \u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"donwong2308"},"content":"  e.g. **Mon:1300-1400**","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"nyankoclaws"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"nyankoclaws"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `list`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"nyankoclaws"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":134,"author":{"gitId":"PallonCX"},"content":"- Fields with the format followed by `...` can have more than one copy in the command. \u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"PallonCX"},"content":"  e.g. `[ft/FREE TIME TAG]...` means there can be more than one free time tag. ","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"PallonCX"},"content":"- Command keywords for the commands should be exactly the same as demonstration, or else Dormie would not recognize it.","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"PallonCX"},"content":"  e.g. `add` is the command keyword in the add command, where `Add` or `ADD` will not work.","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"nyankoclaws"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"PallonCX"},"content":"### Creates a new contact for a dorm mate : add","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"PallonCX"},"content":"Adds a person to Dormie.","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"PallonCX"},"content":"Format: `add n/NAME p/PHONE [e/EMAIL] [r/ROOM NUMBER] [t/TELEGRAM] [b/BIRTHDAY] [d/DORM TAG] [ft/FREE TIME TAG]...`","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"PallonCX"},"content":"Command usage examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"PallonCX"},"content":"- Adding a person with only mandatory fields: `add n/Alice Lim p/91234567`","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"PallonCX"},"content":"- Adding a person with all mandatory fields and some optional fields: `add n/Bob p/88998899 r/21-03-01 ft/Tue:1300-1400 ft/Mon:0900-1200 ft/Tue:0800-1000`","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"PallonCX"},"content":"- Adding a person with all fields: `add n/John Doe p/98765432 e/johnd@example.com r/sw-01-01 t/johnDoe b/12/12/2000 d/PGPR ft/Mon:1300-1400`","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"PallonCX"},"content":"Some common cases that considered as invalid inputs:","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"PallonCX"},"content":"- Invalid format, e.g. missing spaces","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"PallonCX"},"content":"- Missing mandatory fields (name and phone)","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"PallonCX"},"content":"- Duplicate parameters for fields except free time tags: e.g. having two name in the command","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"PallonCX"},"content":"### Add Free Time Tag : addTime","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"PallonCX"},"content":"Adds 1 or multiple specified `freeTimeTags` to the specified person.","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"PallonCX"},"content":"Format: `addTime INDEX ft/FREE_TIME_TAG...`","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"PallonCX"},"content":"Notes on format:","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"PallonCX"},"content":"- The index refers to the index number shown in the displayed person list","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"PallonCX"},"content":"- The index must be a positive integer e.g. 1, 2, 3","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"PallonCX"},"content":"Command usage examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"donwong2308"},"content":"- Single input: `addTime 1 ft/Mon:1300-1400`","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"donwong2308"},"content":"- Multiple input: `addTime 1 ft/Mon:1300-1400 ft/Tue:1300-1400`","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"PallonCX"},"content":"Future enhancement (not implemented yet):","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"PallonCX"},"content":"- The command can be performed on multiple person, ","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"PallonCX"},"content":"  e.g. `addTime 1 2 ft/Mon:1300-1400` will add the free time tag to both the first and second person.","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"PallonCX"},"content":"### Clear the entire contact list : clear","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"PallonCX"},"content":"Removes all existing contacts from Dormie.","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"PallonCX"},"content":"Format: `clear`","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":188,"author":{"gitId":"PallonCX"},"content":"### Deleting a person : delete","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"PallonCX"},"content":"Deletes the specified person from Dormie.","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"PallonCX"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"PallonCX"},"content":"Notes on format:","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"PallonCX"},"content":"- Deletes the person at the specified INDEX","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"PallonCX"},"content":"- The index refers to the index number shown in the displayed person list","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"PallonCX"},"content":"- The index must be a positive integer e.g. 1, 2, 3","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"PallonCX"},"content":"Command usage examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"PallonCX"},"content":"- Deletes the 2nd person in Dormie: `delete 2`","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"PallonCX"},"content":"### Delete Free Time Tag : deleteTime","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"PallonCX"},"content":"Deletes 1 or multiple specified `freeTimeTags` from the specified person.","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"PallonCX"},"content":"Format: `deleteTime INDEX ft/FREE_TIME_TAG`","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"PallonCX"},"content":"Notes on format:","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"PallonCX"},"content":"- The index refers to the index number shown in the displayed person list","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"PallonCX"},"content":"- The index must be a positive integer e.g. 1, 2, 3","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"PallonCX"},"content":"Command usage examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"PallonCX"},"content":"- Single input: `deleteTime 1 ft/Mon:1300-1400`","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"PallonCX"},"content":"- Multiple input: `deleteTime 1 ft/Mon:1300-1400 ft/Tue:1300-1400`","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"PallonCX"},"content":"Future enhancement (not implemented yet):","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"PallonCX"},"content":"- The command can be performed on multiple person,","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"PallonCX"},"content":"  e.g. `deleteTime 1 2 ft/Mon:1300-1400` will delete the free time tag from both the first and second person.","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"nyankoclaws"},"content":"### Editing a person : edit","lastModifiedDate":"2024-02-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"PallonCX"},"content":"Replaces the specified field(s) of an existing person in Dormie with the new input(s).","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"PallonCX"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [r/ROOM_NUM] [t/TELEGRAM] [d/DORM_TAG] [ft/FREE_TIME_TAG]...`","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"PallonCX"},"content":"Notes on format:","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"PallonCX"},"content":"- Edits the person at the specified INDEX. The index refers to the index number shown in the displayed person list. ","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"PallonCX"},"content":"- The index must be a positive integer e.g. 1, 2, 3","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"PallonCX"},"content":"- Minimum 1 parameter must be specified","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"PallonCX"},"content":"Command usage examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":238,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"PallonCX"},"content":"- Edits the name and room number of the 1st person to be Alex and 05-11 respectively: `edit 1 n/Alex r/01-05-11`","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"donwong2308"},"content":"**Important Note**","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"donwong2308"},"content":"- If `freeTimeTags` are edited, the person\u0027s `freeTimeTags` will be replaced with the new set of `freeTimeTags`. ","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"PallonCX"},"content":"  Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"donwong2308"},"content":"    - Let Joe have a `freeTimeTag`:`Mon:1300-1400` and have the index 1:","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"donwong2308"},"content":"    - `edit 1 ft/`: Will delete the existing `freeTimeTags`","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"donwong2308"},"content":"    - `edit 1 ft/Tue:1300-1400 ft/Wed:1300-1400` Will replace the existing _Monday_ tag with the _Tuesday_ and _Wednesday_ tag.","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"PallonCX"},"content":"- The edit command can be done on multiple person when the change is only done on dorm tag and / or free time tags.","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"PallonCX"},"content":"### End the application : exit","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"PallonCX"},"content":"Closes the application.","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"PallonCX"},"content":"### Filter the contact list by name : find","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"PallonCX"},"content":"View all persons with name containing the given keyword. ","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"PallonCX"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"PallonCX"},"content":"### Provide more detail on existing commands : help","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":263,"author":{"gitId":"PallonCX"},"content":"Show a link to the User Guide.","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"PallonCX"},"content":"Format: `help`","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"PallonCX"},"content":"### Listing all persons in Dormie : list","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"PallonCX"},"content":"List all persons in Dormie and their details.","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"PallonCX"},"content":"Format: `list`","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"PallonCX"},"content":"**Important Note**","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"PallonCX"},"content":"- This command can be used to \"reset\" the view after using `find`.","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"PallonCX"},"content":"### Check who is free : whoisfree","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"PallonCX"},"content":"View all persons that are available on the specified day and time.","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"PallonCX"},"content":"Format: `whoisfree DAY:TIME`","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":282,"author":{"gitId":"PallonCX"},"content":"- `DAY` is from Mon-Sun","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"PallonCX"},"content":"- `TIME` is 24-hour time format","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":285,"author":{"gitId":"PallonCX"},"content":"Command usage examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"PallonCX"},"content":"- `whoisfree Mon:1300`","lastModifiedDate":"2024-04-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"nyankoclaws"},"content":"Dormie data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":295,"author":{"gitId":"PallonCX"},"content":"Dormie data are saved automatically as a JSON file [JAR file location]/data/dormie.json. It\u0027s possible for advanced users to update data directly by editing that data file.","lastModifiedDate":"2024-04-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":299,"author":{"gitId":"PallonCX"},"content":"Warning: If the data file is edited wrongly, there is no guarantee that Dormie will behave as expected.","lastModifiedDate":"2024-04-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":303,"author":{"gitId":"nyankoclaws"},"content":"---","lastModifiedDate":"2024-04-01"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"nyankoclaws"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Dormie home folder.","lastModifiedDate":"2024-02-27"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"nyankoclaws"},"content":"---","lastModifiedDate":"2024-04-01"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"nyankoclaws"},"content":"## Known Issues","lastModifiedDate":"2024-04-04"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-01"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":318,"author":{"gitId":"PallonCX"},"content":"## Glossary","lastModifiedDate":"2024-04-01"},{"lineNumber":319,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":320,"author":{"gitId":"PallonCX"},"content":"| Term                                  | Definition, Examples                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2024-04-01"},{"lineNumber":321,"author":{"gitId":"PallonCX"},"content":"|---------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-01"},{"lineNumber":322,"author":{"gitId":"PallonCX"},"content":"| **Command**                           | Instruction provided by a user to specify the desired action or change to be performed by an application.                                                                                                                                                                                       |","lastModifiedDate":"2024-04-01"},{"lineNumber":323,"author":{"gitId":"PallonCX"},"content":"| **Command Line Interface (CLI)**      | Text-based interface used to interact with the application by typing commands into a command box.                                                                                                                                                                                               |","lastModifiedDate":"2024-04-01"},{"lineNumber":324,"author":{"gitId":"PallonCX"},"content":"| **Graphical User Interface (GUI)**    | User interface that allows users to interact with graphical icons and visual indicators, use graphical elements such as windows, buttons, menus, and dialog boxes to facilitate user interaction with the application.                                                                          |","lastModifiedDate":"2024-04-01"},{"lineNumber":325,"author":{"gitId":"PallonCX"},"content":"| **JavaScript Object Notation (JSON)** | Lightweight data interchange format that is easy for humans to read and write and easy for machines to parse and generate. JSON is based on key-value pairs and data structures, making it a popular format for representing structured data in web development and other programming contexts. |","lastModifiedDate":"2024-04-01"},{"lineNumber":326,"author":{"gitId":"JustWeiHao"},"content":"| ** Web Browser **                     | Software application used to access information on the World Wide Web. Examples include Google Chrome, Mozilla Firefox, and Microsoft Edge.                                                                                                                                                     |","lastModifiedDate":"2024-04-04"},{"lineNumber":327,"author":{"gitId":"JustWeiHao"},"content":"| **Document Viewer** | Software application used to view, read, and interact with documents in various formats, such as PDF, Word, Excel, and PowerPoint files. Examples include Adobe Acrobat Reader, Microsoft Word, and Google Docs. |","lastModifiedDate":"2024-04-04"},{"lineNumber":328,"author":{"gitId":"JustWeiHao"},"content":"| **Java** | General-purpose, class-based, object-oriented programming language designed to have as few implementation dependencies as possible. Java is widely used for developing applications, including desktop, web, and mobile applications. |","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"JustWeiHao"},"content":"| **MacOS** | Operating system developed by Apple Inc. for its Macintosh line of computers. MacOS is known for its user-friendly interface, stability, and security features. |","lastModifiedDate":"2024-04-04"},{"lineNumber":330,"author":{"gitId":"JustWeiHao"},"content":"| **Windows** | Operating system developed by Microsoft Corporation for personal computers. Windows is known for its graphical user interface, multitasking capabilities, and compatibility with a wide range of software applications. |","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"JustWeiHao"},"content":"| **Home Folder** | Main directory or folder where an application is installed or resides. The home folder typically contains the application\u0027s executable files, configuration files, and data files. |","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"JustWeiHao"},"content":"| **Terminal** | Command-line interface used to interact with the operating system by typing commands. The terminal allows users to execute commands, run scripts, and perform various system tasks. |","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"JustWeiHao"},"content":"| **Parameter** | Value or variable that is passed to a command or function to specify the desired action or behavior. Parameters are used to customize the behavior of commands and functions based on user input. |","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"donwong2308":24,"PallonCX":107,"larainezo":22,"nyankoclaws":53,"-":113,"JustWeiHao":14}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eDormie\u003c/a\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"nyankoclaws"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#command-summary)","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"nyankoclaws"},"content":"  * [Known Issues]({{ baseUrl }}/UserGuide.html#known-issues)","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"nyankoclaws"},"content":"  * [Glossary]({{ baseUrl }}/UserGuide.html#glossary)","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"nyankoclaws":3,"-":66}},{"path":"docs/diagrams/AddFreeTimeSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"!include style.puml","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"participant \"u:AddFreeTimeCommand\" as AddFreeTimeCommand LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"activate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"create AddFreeTimeCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"AddressBookParser -\u003e AddFreeTimeCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"activate AddFreeTimeCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"AddFreeTimeCommand --\u003e AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"deactivate AddFreeTimeCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"LogicManager -\u003e AddFreeTimeCommand : execute()","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"activate AddFreeTimeCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"AddFreeTimeCommand -\u003e Model : setPerson()","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"activate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"Model --\u003e AddFreeTimeCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"AddFreeTimeCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"deactivate AddFreeTimeCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"AddFreeTimeCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"destroy AddFreeTimeCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"larainezo":46}},{"path":"docs/diagrams/Dormie.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"@startuml","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"interface Logic {","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"+execute(String): CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"+getAddressBook(): ReadOnlyAddressBook","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"+getFilteredPersonList(): ObservableList\u003cPerson\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"+getAddressBookFilePath(): Path","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"+getGuiSettings(): GuiSettings","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"+setGuiSettings(GuiSettings)","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"interface ReadOnlyAddressBook {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"+getPersonList(): ObservableList\u003cPerson\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"interface ReadOnlyUserPrefs {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"+getGuiSettings(): GuiSettings","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"+getAddressBookFilePath(): Path","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"interface Model {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"+PREDICATE_SHOW_ALL_PERSONS: Predicate\u003cPerson\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"+hasPerson(Person): boolean","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"+deletePerson(Person)","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"+addPerson(Person)","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"+removePerson(Person)","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"+getPersonList(): ObservableList\u003cPerson\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"+setPerson(target: Person, editedPerson: Person)","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"nyankoclaws"},"content":"interface Storage  {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"nyankoclaws"},"content":"+readUserPrefs(): Optional\u003cUserPrefs\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"nyankoclaws"},"content":"+saveUserPrefs(ReadOnlyUserPrefs)","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"nyankoclaws"},"content":"+getAddressBookFilePath(): Path","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"nyankoclaws"},"content":"+readAddressBook():Optional\u003cReadOnlyAddressBook\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"nyankoclaws"},"content":"saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"nyankoclaws"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"class ModelManager {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"-logger: Logger","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"-addressBook: AddressBook","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"-userPrefs: UserPrefs","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"-filteredPersons: FilteredList\u003cPerson\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"class UserPrefs {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"-guiSettings: GuiSettings","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"-addressBookFilePath: Path","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"+resetData(ReadOnlyUserPrefs)","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"+setGuiSettings(GuiSettings)","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"+setAddressBookFilePath(Path)","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"+getAddressBookFilePath(): Path","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"larainezo"},"content":"class AddressBook {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"-persons: UniquePersonList","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"+setPersons(List\u003cPerson\u003e)","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"+resetData(ReadOnlyAddressBook)","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"+addPerson(Person)","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"+hasPerson(Person): boolean","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"larainezo"},"content":"+setPerson(target: Person, editedPerson: Person)","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"larainezo"},"content":"Model \u003c|.. ModelManager","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"larainezo"},"content":"ReadOnlyUserPrefs \u003c|.. UserPrefs","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"larainezo"},"content":"ReadOnlyAddressBook \u003c|.. AddressBook","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"larainezo"},"content":"class Person {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"larainezo"},"content":"-name: Name","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"larainezo"},"content":"-phone: Phone","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"larainezo"},"content":"-email: Email","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"larainezo"},"content":"-roomNumber: RoomNumber","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"larainezo"},"content":"-telegram: Telegram","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"larainezo"},"content":"-birthday: Birthday","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"donwong2308"},"content":"-dorm: Dorm","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"larainezo"},"content":"+isSamePerson(Person): boolean","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"larainezo"},"content":"+equals(Object): boolean","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"PallonCX"},"content":"class FreeTime {","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"PallonCX"},"content":"-day: String","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"PallonCX"},"content":"-startTime: String","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"PallonCX"},"content":"-endTime: String","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"PallonCX"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"JustWeiHao"},"content":"class CommandException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"JustWeiHao"},"content":"abstract class Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"JustWeiHao"},"content":"class AddCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"JustWeiHao"},"content":"class ClearCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"JustWeiHao"},"content":"class CommandResult extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"JustWeiHao"},"content":"class DeleteCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"JustWeiHao"},"content":"class EditCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"JustWeiHao"},"content":"class ExitCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"JustWeiHao"},"content":"class FindCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"JustWeiHao"},"content":"class HelpCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"JustWeiHao"},"content":"class ListCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"JustWeiHao"},"content":"class ParseException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"JustWeiHao"},"content":"class AddCommandParser implements Parser {","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"JustWeiHao"},"content":"class AddressBookParser {","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"JustWeiHao"},"content":"class ArgumentMultimap {","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"JustWeiHao"},"content":"class ArgumentTokenizer {","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"JustWeiHao"},"content":"class CliSyntax {","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"JustWeiHao"},"content":"class DeleteCommandParser implements Parser {","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"JustWeiHao"},"content":"class EditCommandParser implements Parser {","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"JustWeiHao"},"content":"class FindCommandParser implements Parser {","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"JustWeiHao"},"content":"interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"JustWeiHao"},"content":"class ParserUtil {","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"JustWeiHao"},"content":"class Prefix {","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"JustWeiHao"},"content":"interface Logic {","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"JustWeiHao"},"content":"class LogicManager implements Logic {","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"JustWeiHao"},"content":"class Messages {","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"PallonCX"},"content":"AddressBook \"1\" *-- \"*\" Person : contains","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"PallonCX"},"content":"Person \"1\" *-- \"*\" FreeTime","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"larainezo"},"content":"@enduml","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"donwong2308":1,"PallonCX":8,"larainezo":79,"nyankoclaws":8,"JustWeiHao":78}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"Class Email","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"Class RoomNumber","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"Class Telegram","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"Class Birthday","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"Class FreeTime","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"Class Dorm","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"Person *--\u003e \"0..1\" Email","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"Person *--\u003e \"0..1\" RoomNumber","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"Person *--\u003e \"0..1\" Telegram","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"Person *--\u003e \"0..1\" Birthday","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"Person *--\u003e \"*\" FreeTime","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"Person *--\u003e \"0..1\" Dorm","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"donwong2308":2,"larainezo":12,"-":42}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"# Dormie","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F11-4/tp/actions)","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F11-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S2-CS2103T-F11-4/tp)","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"**Dormie is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"* If you are interested in using Dormie, head over to the [_Quick Start_ section of the **User Guide**](Dormie_User_Guide.pdf).","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"* If you are interested about developing Dormie, the [**Developer Guide**](DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"donwong2308":3,"-":15,"JustWeiHao":3}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"larainezo":1,"-":186}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"    public static final String MESSAGE_WELCOME \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"            \"Welcome to Dormie!\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"                    + \"The available commands are as follows: list, add, edit, delete, addTime, deleteTime\"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"                    + \", whoisFree, find, \"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"                    + \"clear, exit\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"                    + \"Refer to the help guide (link can be found above) for more details.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"    public static final String MESSAGE_NO_FREETIME_SPECIFIED \u003d \"Please specify a free time.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"PallonCX"},"content":"                .append(person.getPhone());","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"PallonCX"},"content":"        if (person.getEmail() !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"PallonCX"},"content":"            builder.append(\"; Email: \").append(person.getEmail());","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"PallonCX"},"content":"        if (person.getRoomNumber() !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"PallonCX"},"content":"            builder.append(\"; Room Number: \").append(person.getRoomNumber());","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"PallonCX"},"content":"        if (person.getTelegram() !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"PallonCX"},"content":"            builder.append(\"; Telegram: \").append(person.getTelegram());","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"PallonCX"},"content":"        if (person.getBirthday() !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"PallonCX"},"content":"            builder.append(\"; Birthday: \").append(person.getBirthday());","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"PallonCX"},"content":"        if (person.getDormTag() !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"PallonCX"},"content":"            builder.append(\"; Dorm Tag: \").append(person.getDormTag());","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"donwong2308"},"content":"        if (!person.getTags().isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"donwong2308"},"content":"            builder.append(\"; Free Time Tags: \");","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"donwong2308"},"content":"            person.getTags().forEach(builder::append);","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donwong2308":5,"PallonCX":22,"larainezo":7,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DORMTAG;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOMNUMBER;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"PallonCX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to Dormie. \\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"PallonCX"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"PallonCX"},"content":"            + \"[\" + PREFIX_ROOMNUMBER + \"ROOM NUMBER] \"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"PallonCX"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"PallonCX"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"PallonCX"},"content":"            + \"[\" + PREFIX_DORMTAG + \"DORM TAG] \"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"PallonCX"},"content":"            + \"[\" + PREFIX_FREETIMETAG + \"FREE TIME TAG]...\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"nyankoclaws"},"content":"            + PREFIX_ROOMNUMBER + \"sw-01-01 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"            + PREFIX_TELEGRAM + \"johnDoe \"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"            + PREFIX_BIRTHDAY + \"12/12/2000 \"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"PallonCX"},"content":"            + PREFIX_DORMTAG + \"PGPR \"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"            + PREFIX_FREETIMETAG + \"Mon:1300-1400\";","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"PallonCX"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in Dormie\";","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donwong2308":7,"PallonCX":10,"nyankoclaws":1,"-":74}},{"path":"src/main/java/seedu/address/logic/commands/AddTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":" * Adds a free time to an existing person in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"public class AddTimeCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"    public static final String COMMAND_WORD \u003d \"addTime\";","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a free time to the person identified \"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"            + PREFIX_FREETIMETAG + \"Mon:1300-1400\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"            + PREFIX_FREETIMETAG + \"Mon:1330-1400 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"            + PREFIX_FREETIMETAG + \"Mon:1200-1300\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"            + \"Note: You can add multiple free time tags at once, and they need not be in order! \"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"            + \"(Refer to the example above) \";","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"    public static final String MESSAGE_ADD_FREETIME_SUCCESS \u003d \"Added free time to person: %1$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"    private final Index index;","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"    public AddTimeCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"larainezo"},"content":"        this.editPersonDescriptor \u003d editPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"larainezo"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"larainezo"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"larainezo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"larainezo"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"larainezo"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"larainezo"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"larainezo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"larainezo"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_FREETIME_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"larainezo"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"larainezo"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"larainezo"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"larainezo"},"content":"            throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"larainezo"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"larainezo"},"content":"        if (editPersonDescriptor.getTags() \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"larainezo"},"content":"            throw new CommandException(Messages.MESSAGE_NO_FREETIME_SPECIFIED);","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"larainezo"},"content":"        Set\u003cFreeTimeTag\u003e newFreeTimeTags \u003d editPersonDescriptor.getTags();","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"larainezo"},"content":"        if (newFreeTimeTags \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"larainezo"},"content":"            throw new CommandException(Messages.MESSAGE_NO_FREETIME_SPECIFIED);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"larainezo"},"content":"        Set\u003cFreeTimeTag\u003e oldFreeTimeTags \u003d personToEdit.getTags();","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"larainezo"},"content":"        Set\u003cFreeTimeTag\u003e updatedFreeTimeTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"larainezo"},"content":"        updatedFreeTimeTags.addAll(oldFreeTimeTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"larainezo"},"content":"        updatedFreeTimeTags.addAll(newFreeTimeTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"larainezo"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"larainezo"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"larainezo"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"larainezo"},"content":"        RoomNumber updatedRoomNumber \u003d personToEdit.getRoomNumber();","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"larainezo"},"content":"        Telegram updatedTelegram \u003d personToEdit.getTelegram();","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"larainezo"},"content":"        Birthday updatedBirthday \u003d personToEdit.getBirthday();","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"PallonCX"},"content":"        DormTag updatedDormTag \u003d personToEdit.getDormTag();","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"larainezo"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedRoomNumber, updatedTelegram,","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"larainezo"},"content":"                updatedBirthday, updatedDormTag, updatedFreeTimeTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"larainezo"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"larainezo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"larainezo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"larainezo"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"larainezo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"larainezo"},"content":"        if (!(other instanceof AddTimeCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"larainezo"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"larainezo"},"content":"        AddTimeCommand otherAddTimeCommand \u003d (AddTimeCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"larainezo"},"content":"        return index.equals(otherAddTimeCommand.index)","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"larainezo"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherAddTimeCommand.editPersonDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"larainezo"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"larainezo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"larainezo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"larainezo"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"larainezo"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"larainezo"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"larainezo"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"larainezo"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"larainezo"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"larainezo"},"content":"        private Set\u003cFreeTimeTag\u003e tags;","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"larainezo"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"larainezo"},"content":"        /**","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"larainezo"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"larainezo"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"larainezo"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"larainezo"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"larainezo"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"larainezo"},"content":"        /**","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"larainezo"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"larainezo"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"larainezo"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"larainezo"},"content":"        public void setTags(Set\u003cFreeTimeTag\u003e tags) {","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"larainezo"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"larainezo"},"content":"        /**","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"larainezo"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"larainezo"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"larainezo"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"larainezo"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"larainezo"},"content":"        public Set\u003cFreeTimeTag\u003e getTags() {","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"larainezo"},"content":"            return tags;","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"larainezo"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"larainezo"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"larainezo"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"larainezo"},"content":"                return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"larainezo"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"larainezo"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"larainezo"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"larainezo"},"content":"                return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"larainezo"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"larainezo"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"larainezo"},"content":"            return Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"larainezo"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"larainezo"},"content":"        public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"larainezo"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"larainezo"},"content":"                    .add(\"freeTimeTags\", tags)","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"larainezo"},"content":"                    .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"PallonCX":2,"larainezo":191}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Dormie has been cleared!\";","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larainezo":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":" * Deletes a free time to an existing person in the address book.","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"public class DeleteTimeCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTime\";","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a free time to the person identified \"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"            + PREFIX_FREETIMETAG + \"Mon:1300-1400\";","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"    public static final String MESSAGE_DELETE_FREETIME_SUCCESS \u003d \"Deleted free time to person: %1$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"    private final Index index;","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"    public DeleteTimeCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"larainezo"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"        this.editPersonDescriptor \u003d editPersonDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"larainezo"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"larainezo"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"larainezo"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"larainezo"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"larainezo"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"larainezo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"larainezo"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_FREETIME_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"larainezo"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"larainezo"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"larainezo"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"larainezo"},"content":"            throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"larainezo"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"larainezo"},"content":"        if (editPersonDescriptor.getTags() \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"larainezo"},"content":"            throw new CommandException(Messages.MESSAGE_NO_FREETIME_SPECIFIED);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"larainezo"},"content":"        Set\u003cFreeTimeTag\u003e deleteFreeTimeTags \u003d editPersonDescriptor.getTags();","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"larainezo"},"content":"        if (deleteFreeTimeTags \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"larainezo"},"content":"            throw new CommandException(Messages.MESSAGE_NO_FREETIME_SPECIFIED);","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"larainezo"},"content":"        Set\u003cFreeTimeTag\u003e freeTimeTags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"larainezo"},"content":"        Set\u003cFreeTimeTag\u003e updatedFreeTimeTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"larainezo"},"content":"        if (freeTimeTags !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"larainezo"},"content":"            for (FreeTimeTag freeTimeTag : freeTimeTags) {","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"larainezo"},"content":"                if (!deleteFreeTimeTags.contains(freeTimeTag)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"larainezo"},"content":"                    updatedFreeTimeTags.add(freeTimeTag);","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"larainezo"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"larainezo"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"larainezo"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"larainezo"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"larainezo"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"larainezo"},"content":"        RoomNumber updatedRoomNumber \u003d personToEdit.getRoomNumber();","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"larainezo"},"content":"        Telegram updatedTelegram \u003d personToEdit.getTelegram();","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"larainezo"},"content":"        Birthday updatedBirthday \u003d personToEdit.getBirthday();","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"PallonCX"},"content":"        DormTag updatedDormTag \u003d personToEdit.getDormTag();","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"larainezo"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedRoomNumber, updatedTelegram,","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"larainezo"},"content":"                updatedBirthday, updatedDormTag, updatedFreeTimeTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"larainezo"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"larainezo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"larainezo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"larainezo"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"larainezo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"larainezo"},"content":"        if (!(other instanceof DeleteTimeCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"larainezo"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"larainezo"},"content":"        DeleteTimeCommand otherDeleteTimeCommand \u003d (DeleteTimeCommand) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"larainezo"},"content":"        return index.equals(otherDeleteTimeCommand.index)","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"larainezo"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherDeleteTimeCommand.editPersonDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"larainezo"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"larainezo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"larainezo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"larainezo"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"larainezo"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"larainezo"},"content":"                .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"larainezo"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"larainezo"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"larainezo"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"larainezo"},"content":"        private Set\u003cFreeTimeTag\u003e tags;","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"larainezo"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"larainezo"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"larainezo"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"larainezo"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"larainezo"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"larainezo"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"larainezo"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"larainezo"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"larainezo"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"larainezo"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"larainezo"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"larainezo"},"content":"        public void setTags(Set\u003cFreeTimeTag\u003e tags) {","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"larainezo"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"larainezo"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"larainezo"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"larainezo"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"larainezo"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"larainezo"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"larainezo"},"content":"        public Set\u003cFreeTimeTag\u003e getTags() {","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"larainezo"},"content":"            return tags;","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"larainezo"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"larainezo"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"larainezo"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"larainezo"},"content":"                return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"larainezo"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"larainezo"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"larainezo"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"larainezo"},"content":"                return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"larainezo"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"larainezo"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"larainezo"},"content":"            return Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"larainezo"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"larainezo"},"content":"        public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"larainezo"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"larainezo"},"content":"                    .add(\"freeTimeTags\", tags)","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"larainezo"},"content":"                    .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"PallonCX":2,"larainezo":190}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DORMTAG;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOMNUMBER;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"JustWeiHao"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"donwong2308"},"content":"            + \"[\" + PREFIX_ROOMNUMBER + \"ROOM NUMBER] \"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"PallonCX"},"content":"            + \"[\" + PREFIX_DORMTAG + \"DORM] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"donwong2308"},"content":"            + \"[\" + PREFIX_FREETIMETAG + \"FREE TIME]...\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited person: %1$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"JustWeiHao"},"content":"    public static final String MESSAGE_MULTIEDIT_FAIL \u003d \"%1$s cannot be edited for multiple persons at once.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"PallonCX"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"A person with same phone, email, or telegram, \"","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"PallonCX"},"content":"            + \"has already exists in the address book.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"JustWeiHao"},"content":"    private final Set\u003cIndex\u003e indices;","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"JustWeiHao"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"JustWeiHao"},"content":"     * @param indices of the person in the filtered person list to edit","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"JustWeiHao"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"JustWeiHao"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"JustWeiHao"},"content":"    public EditCommand(Set\u003cIndex\u003e indices, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"JustWeiHao"},"content":"        requireNonNull(indices);","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"JustWeiHao"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"JustWeiHao"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"JustWeiHao"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"JustWeiHao"},"content":"        this.indices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"JustWeiHao"},"content":"        this.indices.add(index);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"JustWeiHao"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"JustWeiHao"},"content":"        for (Index index : indices) {","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"JustWeiHao"},"content":"            res \u003d String.format(\"%s %s\", res, Messages.format(editedPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"JustWeiHao"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, res.trim()));","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"donwong2308"},"content":"        RoomNumber updatedRoomNumber \u003d editPersonDescriptor.getRoomNumber().orElse(personToEdit.getRoomNumber());","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"donwong2308"},"content":"        Telegram updatedTelegram \u003d editPersonDescriptor.getTelegram().orElse(personToEdit.getTelegram());","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"donwong2308"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"PallonCX"},"content":"        DormTag updatedDormTag \u003d editPersonDescriptor.getDormTag().orElse(personToEdit.getDormTag());","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"donwong2308"},"content":"        Set\u003cFreeTimeTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"donwong2308"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedRoomNumber, updatedTelegram,","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"PallonCX"},"content":"                updatedBirthday, updatedDormTag, updatedTags);","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"JustWeiHao"},"content":"        Object[] indicesArray \u003d indices.toArray();","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"JustWeiHao"},"content":"        Object[] otherIndicesArray \u003d otherEditCommand.indices.toArray();","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"JustWeiHao"},"content":"        Arrays.sort(indicesArray);","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"JustWeiHao"},"content":"        Arrays.sort(otherIndicesArray);","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"JustWeiHao"},"content":"        return Arrays.equals(indicesArray, otherIndicesArray)","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"JustWeiHao"},"content":"                .add(\"index\", indices)","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"donwong2308"},"content":"        private RoomNumber roomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"donwong2308"},"content":"        private Telegram telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"donwong2308"},"content":"        private Birthday birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"PallonCX"},"content":"        private DormTag dormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"donwong2308"},"content":"        private Set\u003cFreeTimeTag\u003e tags;","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":191,"author":{"gitId":"donwong2308"},"content":"            setRoomNumber(toCopy.roomNumber);","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"donwong2308"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"donwong2308"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"PallonCX"},"content":"            setDormTag(toCopy.dormTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"PallonCX"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, roomNumber, telegram, birthday, dormTag, tags);","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"donwong2308"},"content":"        public void setRoomNumber(RoomNumber roomNumber) {","lastModifiedDate":"2024-03-16"},{"lineNumber":230,"author":{"gitId":"donwong2308"},"content":"            this.roomNumber \u003d roomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"donwong2308"},"content":"        public Optional\u003cRoomNumber\u003e getRoomNumber() {","lastModifiedDate":"2024-03-16"},{"lineNumber":234,"author":{"gitId":"donwong2308"},"content":"            return Optional.ofNullable(roomNumber);","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"donwong2308"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2024-03-16"},{"lineNumber":238,"author":{"gitId":"donwong2308"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"donwong2308"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"donwong2308"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2024-03-16"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"donwong2308"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2024-03-16"},{"lineNumber":246,"author":{"gitId":"donwong2308"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":247,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":249,"author":{"gitId":"donwong2308"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"donwong2308"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2024-03-16"},{"lineNumber":251,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":252,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":253,"author":{"gitId":"PallonCX"},"content":"        public void setDormTag(DormTag dormTag) {","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"PallonCX"},"content":"            this.dormTag \u003d dormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"PallonCX"},"content":"        public Optional\u003cDormTag\u003e getDormTag() {","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"PallonCX"},"content":"            return Optional.ofNullable(dormTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-03-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-25"},{"lineNumber":263,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-03-25"},{"lineNumber":265,"author":{"gitId":"donwong2308"},"content":"        public void setTags(Set\u003cFreeTimeTag\u003e tags) {","lastModifiedDate":"2024-03-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-03-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-25"},{"lineNumber":271,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-25"},{"lineNumber":273,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-03-25"},{"lineNumber":274,"author":{"gitId":"donwong2308"},"content":"        public Optional\u003cSet\u003cFreeTimeTag\u003e\u003e getTags() {","lastModifiedDate":"2024-03-25"},{"lineNumber":275,"author":{"gitId":"donwong2308"},"content":"            return Optional.ofNullable(tags).map(Collections::unmodifiableSet);","lastModifiedDate":"2024-03-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":293,"author":{"gitId":"donwong2308"},"content":"                    \u0026\u0026 Objects.equals(roomNumber, otherEditPersonDescriptor.roomNumber)","lastModifiedDate":"2024-03-16"},{"lineNumber":294,"author":{"gitId":"donwong2308"},"content":"                    \u0026\u0026 Objects.equals(telegram, otherEditPersonDescriptor.telegram)","lastModifiedDate":"2024-03-16"},{"lineNumber":295,"author":{"gitId":"donwong2308"},"content":"                    \u0026\u0026 Objects.equals(birthday, otherEditPersonDescriptor.birthday)","lastModifiedDate":"2024-03-25"},{"lineNumber":296,"author":{"gitId":"PallonCX"},"content":"                    \u0026\u0026 Objects.equals(dormTag, otherEditPersonDescriptor.dormTag)","lastModifiedDate":"2024-03-28"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2024-03-25"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":306,"author":{"gitId":"donwong2308"},"content":"                    .add(\"roomNumber\", roomNumber)","lastModifiedDate":"2024-03-16"},{"lineNumber":307,"author":{"gitId":"donwong2308"},"content":"                    .add(\"telegram\", telegram)","lastModifiedDate":"2024-03-16"},{"lineNumber":308,"author":{"gitId":"donwong2308"},"content":"                    .add(\"birthday\", birthday)","lastModifiedDate":"2024-03-16"},{"lineNumber":309,"author":{"gitId":"donwong2308"},"content":"                    .add(\"freeTimeTags\", tags)","lastModifiedDate":"2024-03-25"},{"lineNumber":310,"author":{"gitId":"PallonCX"},"content":"                    .add(\"dormTag\", dormTag)","lastModifiedDate":"2024-03-28"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"donwong2308":50,"PallonCX":16,"larainezo":1,"-":219,"JustWeiHao":28}},{"path":"src/main/java/seedu/address/logic/commands/FindByNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustWeiHao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JustWeiHao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JustWeiHao"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JustWeiHao"},"content":"public class FindByNameCommand extends FindCommand {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JustWeiHao"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JustWeiHao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JustWeiHao"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"     * Constructs a FindByNameCommand with the specified predicate.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"     * @param predicate The predicate to test against.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"    public FindByNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"        super(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JustWeiHao":27}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"JustWeiHao"},"content":" * Finds and lists all persons in address book who satisfy the given predicate.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"public abstract class FindCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"        model.updateFilteredPersonList(this.predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"JustWeiHao"},"content":"        return this.predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":40,"JustWeiHao":10}},{"path":"src/main/java/seedu/address/logic/commands/FindFreePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustWeiHao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JustWeiHao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.model.person.PersonIsFreePredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JustWeiHao"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":" * Finds and lists all persons in address book who are free at the specified time.","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":"public class FindFreePersonCommand extends FindCommand {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JustWeiHao"},"content":"    public static final String INPUT_PATTERN \u003d \"^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$\";","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JustWeiHao"},"content":"    public static final String COMMAND_WORD \u003d \"whoisfree\";","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JustWeiHao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons who are free given by \"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JustWeiHao"},"content":"            + \"the specified timestamp (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"            + \"Parameters: TIME STAMP\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"            + \"Example: \" + COMMAND_WORD + \" Mon:1000\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"     * Creates a FindFreePersonCommand to find the specified {@code PersonIsFreePredicate}","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"     * @param predicate the predicate to find free persons","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"    public FindFreePersonCommand(PersonIsFreePredicate predicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"        super(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JustWeiHao":27}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DORMTAG;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOMNUMBER;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"PallonCX"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOMNUMBER,","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"PallonCX"},"content":"                        PREFIX_TELEGRAM, PREFIX_BIRTHDAY, PREFIX_DORMTAG, PREFIX_FREETIMETAG);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"PallonCX"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOMNUMBER,","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"PallonCX"},"content":"                PREFIX_TELEGRAM, PREFIX_BIRTHDAY, PREFIX_DORMTAG);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"PallonCX"},"content":"        // Mandatory fields","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"PallonCX"},"content":"        // Optional fields","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"PallonCX"},"content":"        Optional\u003cString\u003e emailText \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"PallonCX"},"content":"        Email email \u003d emailText.isPresent() ? ParserUtil.parseEmail(emailText.get()) : null;","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"PallonCX"},"content":"        Optional\u003cString\u003e roomNumberText \u003d argMultimap.getValue(PREFIX_ROOMNUMBER);","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"PallonCX"},"content":"        RoomNumber roomNumber \u003d roomNumberText.isPresent() ? ParserUtil.parseRoomNumber(roomNumberText.get()) : null;","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"PallonCX"},"content":"        Optional\u003cString\u003e telegramText \u003d argMultimap.getValue(PREFIX_TELEGRAM);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"PallonCX"},"content":"        Telegram telegram \u003d telegramText.isPresent() ? ParserUtil.parseTelegram(telegramText.get()) : null;","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"PallonCX"},"content":"        Optional\u003cString\u003e birthdayText \u003d argMultimap.getValue(PREFIX_BIRTHDAY);","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"PallonCX"},"content":"        Birthday birthday \u003d birthdayText.isPresent() ? ParserUtil.parseBirthday(birthdayText.get()) : null;","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"PallonCX"},"content":"        Optional\u003cString\u003e dormTagText \u003d argMultimap.getValue(PREFIX_DORMTAG);","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"PallonCX"},"content":"        DormTag dormTag \u003d dormTagText.isPresent() ? ParserUtil.parseDormTag(dormTagText.get()) : null;","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"donwong2308"},"content":"        Optional\u003cString\u003e freeTimeTagText \u003d argMultimap.getValue(PREFIX_FREETIMETAG);","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"donwong2308"},"content":"        Set\u003cFreeTimeTag\u003e freeTimeTags \u003d ParserUtil.parseFreeTimeTags(argMultimap.getAllValues(PREFIX_FREETIMETAG));","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"PallonCX"},"content":"        Person person \u003d new Person(name, phone, email, roomNumber, telegram, birthday, dormTag, freeTimeTags);","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"donwong2308":13,"PallonCX":24,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.AddTimeCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.AddTimeCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"public class AddTimeCommandParser implements Parser\u003cAddTimeCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTimeCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"     * and returns an AddTimeCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"    public AddTimeCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FREETIMETAG);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"        Index index;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTimeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"        parseFreeTimeTagsForEdit(argMultimap.getAllValues(PREFIX_FREETIMETAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"        return new AddTimeCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"larainezo"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"    private Optional\u003cSet\u003cFreeTimeTag\u003e\u003e parseFreeTimeTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"larainezo"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"larainezo"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\" \") ? Collections.emptySet() : tags;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"        return Optional.of(ParserUtil.parseFreeTimeTags(tagSet));","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"larainezo":64}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.AddTimeCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.DeleteTimeCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.commands.FindByNameCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.commands.FindFreePersonCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"        case AddTimeCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"            return new AddTimeCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"larainezo"},"content":"        case DeleteTimeCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"larainezo"},"content":"            return new DeleteTimeCommandParser().parse(arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"JustWeiHao"},"content":"        case FindByNameCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"JustWeiHao"},"content":"            return new FindByNameCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"JustWeiHao"},"content":"        case FindFreePersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"JustWeiHao"},"content":"            return new FindFreePersonCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larainezo":8,"-":83,"JustWeiHao":7}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"    public static final Prefix PREFIX_ROOMNUMBER \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"PallonCX"},"content":"    public static final Prefix PREFIX_DORMTAG \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"    public static final Prefix PREFIX_FREETIMETAG \u003d new Prefix(\"ft/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"donwong2308":4,"PallonCX":1,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.DeleteTimeCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.DeleteTimeCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"public class DeleteTimeCommandParser implements Parser\u003cDeleteTimeCommand\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTimeCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"     * and returns an DeleteTimeCommand object for execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"    public DeleteTimeCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FREETIMETAG);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"        Index index;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"                    DeleteTimeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"        parseFreeTimeTagsForEdit(argMultimap.getAllValues(PREFIX_FREETIMETAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"        return new DeleteTimeCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"larainezo"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"    private Optional\u003cSet\u003cFreeTimeTag\u003e\u003e parseFreeTimeTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"larainezo"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"larainezo"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"larainezo"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"        return Optional.of(ParserUtil.parseFreeTimeTags(tagSet));","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"larainezo":64}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DORMTAG;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOMNUMBER;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"JustWeiHao"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditCommandParser.class);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOMNUMBER,","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"PallonCX"},"content":"                        PREFIX_TELEGRAM, PREFIX_BIRTHDAY, PREFIX_DORMTAG, PREFIX_FREETIMETAG);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"JustWeiHao"},"content":"        Set \u003cIndex\u003e index \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"JustWeiHao"},"content":"            String[] indices \u003d argMultimap.getPreamble().trim().split(\"\\\\s+\");","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"JustWeiHao"},"content":"            for (String i : indices) {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"JustWeiHao"},"content":"                index.add(ParserUtil.parseIndex(i.trim()));","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"JustWeiHao"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"JustWeiHao"},"content":"            logger.info(\"Index parsed successfully\");","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"donwong2308"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOMNUMBER,","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"PallonCX"},"content":"                PREFIX_TELEGRAM, PREFIX_BIRTHDAY, PREFIX_DORMTAG);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"JustWeiHao"},"content":"            if (index.size() \u003e 1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"JustWeiHao"},"content":"                throw new ParseException(String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"NAME\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"JustWeiHao"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"JustWeiHao"},"content":"            if (index.size() \u003e 1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"JustWeiHao"},"content":"                throw new ParseException(String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"PHONE\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"JustWeiHao"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"JustWeiHao"},"content":"            if (index.size() \u003e 1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"JustWeiHao"},"content":"                throw new ParseException(String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"EMAIL\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"JustWeiHao"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"donwong2308"},"content":"        if (argMultimap.getValue(PREFIX_ROOMNUMBER).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"JustWeiHao"},"content":"            if (index.size() \u003e 1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"JustWeiHao"},"content":"                throw new ParseException(String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"ROOM NUMBER\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"JustWeiHao"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"donwong2308"},"content":"            editPersonDescriptor.setRoomNumber(ParserUtil.parseRoomNumber(argMultimap","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"donwong2308"},"content":"                    .getValue(PREFIX_ROOMNUMBER).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"donwong2308"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"JustWeiHao"},"content":"            if (index.size() \u003e 1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"JustWeiHao"},"content":"                throw new ParseException(String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"TELEGRAM\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"JustWeiHao"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"donwong2308"},"content":"            editPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"donwong2308"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"JustWeiHao"},"content":"            if (index.size() \u003e 1) {","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"JustWeiHao"},"content":"                throw new ParseException(String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"BIRTHDAY\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"JustWeiHao"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"donwong2308"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"PallonCX"},"content":"        if (argMultimap.getValue(PREFIX_DORMTAG).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"PallonCX"},"content":"            editPersonDescriptor.setDormTag(ParserUtil.parseDormTag(argMultimap.getValue(PREFIX_DORMTAG).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"donwong2308"},"content":"        parseFreeTimeTagsForEdit(argMultimap.getAllValues(PREFIX_FREETIMETAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"donwong2308"},"content":"    private Optional\u003cSet\u003cFreeTimeTag\u003e\u003e parseFreeTimeTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"donwong2308"},"content":"        return Optional.of(ParserUtil.parseFreeTimeTags(tagSet));","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"donwong2308":20,"PallonCX":6,"-":74,"JustWeiHao":28}},{"path":"src/main/java/seedu/address/logic/parser/FindByNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustWeiHao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JustWeiHao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.commands.FindByNameCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JustWeiHao"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JustWeiHao"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JustWeiHao"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JustWeiHao"},"content":"public class FindByNameCommandParser extends FindCommandParser {","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"    public FindByNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindByNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JustWeiHao"},"content":"        return new FindByNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JustWeiHao":30}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":"public abstract class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"JustWeiHao"},"content":"    public abstract FindCommand parse(String args) throws ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":14,"JustWeiHao":2}},{"path":"src/main/java/seedu/address/logic/parser/FindFreePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustWeiHao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JustWeiHao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.commands.FindFreePersonCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.model.person.PersonIsFreePredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JustWeiHao"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JustWeiHao"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JustWeiHao"},"content":"public class FindFreePersonCommandParser extends FindCommandParser {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JustWeiHao"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"JustWeiHao"},"content":"    public FindFreePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"        if (trimmedArgs.isEmpty() || !trimmedArgs.matches(FindFreePersonCommand.INPUT_PATTERN)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFreePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"        return new FindFreePersonCommand(new PersonIsFreePredicate(trimmedArgs));","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JustWeiHao":25}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"donwong2308"},"content":"     * Parses a {@code String roomNumber} into an {@code RoomNumber}.","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"donwong2308"},"content":"     * @throws ParseException if the given {@code roomNumber} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"donwong2308"},"content":"    public static RoomNumber parseRoomNumber(String roomNumber) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"donwong2308"},"content":"        requireNonNull(roomNumber);","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"donwong2308"},"content":"        String trimmedRoomNumber \u003d roomNumber.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"donwong2308"},"content":"        if (!RoomNumber.isValidRoomNumber(trimmedRoomNumber)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"donwong2308"},"content":"            throw new ParseException(RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"donwong2308"},"content":"        return new RoomNumber(trimmedRoomNumber);","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"donwong2308"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"donwong2308"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"donwong2308"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"donwong2308"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"donwong2308"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"donwong2308"},"content":"        if (!Telegram.isValidTelegram(trimmedTelegram)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"donwong2308"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"donwong2308"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"donwong2308"},"content":"     * Parses a {@code String birthday} into an {@code Birthday}.","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"donwong2308"},"content":"     * @throws ParseException if the given {@code birthday} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"donwong2308"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"donwong2308"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"donwong2308"},"content":"        String trimmedBirthday \u003d birthday.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"donwong2308"},"content":"        if (!Birthday.isValidBirthday(trimmedBirthday)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"donwong2308"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"donwong2308"},"content":"        return new Birthday(trimmedBirthday);","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"PallonCX"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"PallonCX"},"content":"     * Parses a {@code String tag} into a {@code DormTag}.","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"PallonCX"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"PallonCX"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"PallonCX"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"PallonCX"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"PallonCX"},"content":"    public static DormTag parseDormTag(String tag) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"PallonCX"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"PallonCX"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"PallonCX"},"content":"        if (!DormTag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"PallonCX"},"content":"            throw new ParseException(DormTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"PallonCX"},"content":"        return new DormTag(trimmedTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"donwong2308"},"content":"     * Also checks free time tag validity","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"donwong2308"},"content":"    public static FreeTimeTag parseFreeTimeTag(String tag) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"donwong2308"},"content":"        if (!FreeTimeTag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"donwong2308"},"content":"            throw new ParseException(FreeTimeTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"donwong2308"},"content":"        if (!FreeTimeTag.isValidTimeInterval(trimmedTag)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"donwong2308"},"content":"            throw new ParseException(FreeTimeTag.MESSAGE_INVALID_TIME_INTERVAL);","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"donwong2308"},"content":"        return new FreeTimeTag(trimmedTag);","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"donwong2308"},"content":"    public static Set\u003cFreeTimeTag\u003e parseFreeTimeTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"donwong2308"},"content":"        final Set\u003cFreeTimeTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"donwong2308"},"content":"            tagSet.add(parseFreeTimeTag(tagName));","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"donwong2308":39,"PallonCX":16,"-":121}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"dormie.json\");","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"donwong2308":1,"-":87}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"JustWeiHao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":"import java.util.Locale;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":" * Represents a Person\u0027s telegram handle in the logbook.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthday(String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"public class Birthday {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"    public static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd LLLL yyyy\");","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"    private static final String[] VALID_FORMATS \u003d {\"dd/MM/yyyy\", \"dd-MM-yyyy\", \"yyyy-MM-dd\", \"yyyy/MM/dd\"};","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"    private static final String[] VALID_FORMATS_REGEX \u003d {\"\\\\d{2}/\\\\d{2}/\\\\d{4}\", \"\\\\d{2}-\\\\d{2}-\\\\d{4}\",","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"        \"\\\\d{4}-\\\\d{2}-\\\\d{2}\", \"\\\\d{4}/\\\\d{2}/\\\\d{2}\"};","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"            \"Birthday should not be blank and has to be in one of the given format: [\"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"            + String.join(\"] [\", VALID_FORMATS) + \u0027]\u0027;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"    public final LocalDate value;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"     * Constructs an {@code Birthday}.","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"JustWeiHao"},"content":"        checkArgument(isValidBirthday(birthday.trim()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"JustWeiHao"},"content":"        value \u003d parseDate(birthday.trim()).orElse(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"JustWeiHao"},"content":"        assert this.value !\u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"    public static boolean isValidBirthday(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"JustWeiHao"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"JustWeiHao"},"content":"            return parseDate(test).isPresent();","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"JustWeiHao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"JustWeiHao"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"JustWeiHao"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"JustWeiHao"},"content":"    private static Optional\u003cLocalDate\u003e parseDate(String date) {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"JustWeiHao"},"content":"        for (int i \u003d 0; i \u003c VALID_FORMATS.length; ++i) {","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"JustWeiHao"},"content":"            if (date.matches(VALID_FORMATS_REGEX[i])) {","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"JustWeiHao"},"content":"                DateTimeFormatter validationFormatter \u003d DateTimeFormatter.ofPattern(VALID_FORMATS[i], Locale.ENGLISH);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"JustWeiHao"},"content":"                LocalDate parsed \u003d LocalDate.parse(date, validationFormatter);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"JustWeiHao"},"content":"                return Optional.of(parsed)","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"JustWeiHao"},"content":"                        .filter(d -\u003e d.format(validationFormatter).equals(date) \u0026\u0026 !d.isAfter(LocalDate.now()));","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"JustWeiHao"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"JustWeiHao"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"JustWeiHao"},"content":"        return Optional.empty();","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"nyankoclaws"},"content":"     * Returns true if today is the Birthday.","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"nyankoclaws"},"content":"    public boolean isBirthday() {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate thisYearBirthday \u003d value.withYear(LocalDate.now().getYear());","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"nyankoclaws"},"content":"        return thisYearBirthday.isEqual(LocalDate.now());","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"JustWeiHao"},"content":"        return value.format(OUTPUT_FORMATTER);","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"larainezo"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"larainezo"},"content":"        Birthday otherBirthday \u003d (Birthday) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"larainezo"},"content":"        return value.equals(otherBirthday.value);","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larainezo":11,"nyankoclaws":8,"-":41,"JustWeiHao":36}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"nyankoclaws"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([a-zA-Z0-9]+\\\\.)*([a-zA-Z0-9]+)@([a-zA-Z0-9]+\\\\.)+[a-zA-Z0-9]{2,}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"nyankoclaws"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \".\";","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"nyankoclaws"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by periods, if any.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nyankoclaws":5,"-":68}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":" * Represents a Person in the logbook.","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Person.class);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"    private final RoomNumber roomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"    private final Telegram telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"    private final Birthday birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"PallonCX"},"content":"    private final DormTag dormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"    private final Set\u003cFreeTimeTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"    public Person(Name name, Phone phone, Email email, RoomNumber roomNumber, Telegram telegram, Birthday birthday,","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"PallonCX"},"content":"                  DormTag dormTag, Set\u003cFreeTimeTag\u003e tags) {","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"        requireAllNonNull(name, phone, tags);","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"PallonCX"},"content":"        this.dormTag \u003d dormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"        logger.log(Level.INFO, \"Retrieved person\u0027s name\");","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"        logger.log(Level.INFO, \"Retrieved person\u0027s phone number\");","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"        logger.log(Level.INFO, \"Retrieved person\u0027s email\");","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"donwong2308"},"content":"    public RoomNumber getRoomNumber() {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"larainezo"},"content":"        logger.log(Level.INFO, \"Retrieved person\u0027s room number\");","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"donwong2308"},"content":"        return roomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"donwong2308"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"larainezo"},"content":"        logger.log(Level.INFO, \"Retrieved person\u0027s telegram\");","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"donwong2308"},"content":"        return telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"donwong2308"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"larainezo"},"content":"        logger.log(Level.INFO, \"Retrieved person\u0027s birthday\");","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"donwong2308"},"content":"        return birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"PallonCX"},"content":"    public DormTag getDormTag() {","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"PallonCX"},"content":"        logger.log(Level.INFO, \"Retrieved person\u0027s dorm tag\");","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"PallonCX"},"content":"        return dormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"donwong2308"},"content":"    public Set\u003cFreeTimeTag\u003e getTags() {","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"larainezo"},"content":"        logger.log(Level.INFO, \"Retrieved person\u0027s free time tags\");","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"PallonCX"},"content":"     * Returns true if both persons have the same phone, email, or telegram.","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"PallonCX"},"content":"     * This defines a weaker notion of equality between two persons,","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"PallonCX"},"content":"     * by assuming that phone, email, or telegram is unique for each person.","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"PallonCX"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"PallonCX"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"PallonCX"},"content":"        boolean isSame \u003d false;","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"PallonCX"},"content":"        // Check for mandatory fields","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"PallonCX"},"content":"        isSame \u003d isSame || otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"PallonCX"},"content":"        // Check for optional fields","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"PallonCX"},"content":"        if (otherPerson.getEmail() !\u003d null \u0026\u0026 getEmail() !\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"PallonCX"},"content":"            isSame \u003d isSame || otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"PallonCX"},"content":"        if (otherPerson.getTelegram() !\u003d null \u0026\u0026 getTelegram() !\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"PallonCX"},"content":"            isSame \u003d isSame || otherPerson.getTelegram().equals(getTelegram());","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"PallonCX"},"content":"        return isSame;","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"PallonCX"},"content":"        boolean isEqual \u003d name.equals(otherPerson.name)","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"PallonCX"},"content":"                \u0026\u0026 equalsHelperForOptional(email, otherPerson.email)","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"PallonCX"},"content":"                \u0026\u0026 equalsHelperForOptional(roomNumber, otherPerson.roomNumber)","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"PallonCX"},"content":"                \u0026\u0026 equalsHelperForOptional(telegram, otherPerson.telegram)","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"PallonCX"},"content":"                \u0026\u0026 equalsHelperForOptional(birthday, otherPerson.birthday)","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"PallonCX"},"content":"                \u0026\u0026 equalsHelperForOptional(dormTag, otherPerson.dormTag)","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"PallonCX"},"content":"        return isEqual;","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"PallonCX"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"PallonCX"},"content":"     * A private method to facilitate optional field comparison.","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"PallonCX"},"content":"     * Returns true if and only if both objects that are compared are equal.","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"PallonCX"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"PallonCX"},"content":"     * The usage of Object as parameter type is to accommodate different types of field,","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"PallonCX"},"content":"     * since Object class is the super class of any class.","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"PallonCX"},"content":"     * To avoid unintended usage, both parameters are checked to be objects of same class by assertion.","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"PallonCX"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"PallonCX"},"content":"    private boolean equalsHelperForOptional(Object self, Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"PallonCX"},"content":"        // The code path can be splited into three cases and be dealt accordingly","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"PallonCX"},"content":"        // Case 1: Only one of the object is null","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"PallonCX"},"content":"        if (self !\u003d null \u0026\u0026 other \u003d\u003d null || self \u003d\u003d null \u0026\u0026 other !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"PallonCX"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"PallonCX"},"content":"        // Case 2: Both of the object is not null","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"PallonCX"},"content":"        } else if (self !\u003d null \u0026\u0026 other !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"PallonCX"},"content":"            assert self.getClass().equals(other.getClass());","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"PallonCX"},"content":"            return self.equals(other);","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"PallonCX"},"content":"        // Case 3: Both of the object is null","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"PallonCX"},"content":"        return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"PallonCX"},"content":"        return Objects.hash(name, phone, email, roomNumber, telegram, birthday, dormTag, tags);","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"PallonCX"},"content":"        ToStringBuilder sb \u003d new ToStringBuilder(this);","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"PallonCX"},"content":"        sb.add(\"name\", name);","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"PallonCX"},"content":"        sb.add(\"phone\", phone);","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"donwong2308"},"content":"        sb.add(\"tags\", tags);","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"PallonCX"},"content":"        if (email !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"PallonCX"},"content":"            sb.add(\"email\", email);","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"PallonCX"},"content":"        if (roomNumber !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"PallonCX"},"content":"            sb.add(\"roomNumber\", roomNumber);","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"PallonCX"},"content":"        if (telegram !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"PallonCX"},"content":"            sb.add(\"telegram\", telegram);","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"PallonCX"},"content":"        if (birthday !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"PallonCX"},"content":"            sb.add(\"birthday\", birthday);","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"PallonCX"},"content":"        if (dormTag !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"PallonCX"},"content":"            sb.add(\"dormTag\", dormTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"PallonCX"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donwong2308":21,"PallonCX":88,"larainezo":12,"-":96}},{"path":"src/main/java/seedu/address/model/person/PersonIsFreePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustWeiHao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JustWeiHao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":" * Tests that a {@code Person}\u0027s {@code FreeTimeTag} contains the current time.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JustWeiHao"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JustWeiHao"},"content":"public class PersonIsFreePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JustWeiHao"},"content":"    private final String currentTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"JustWeiHao"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"     * Constructs a {@code PersonIsFreePredicate}.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"     * @param currentTime the current time.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"    public PersonIsFreePredicate(String currentTime) {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"        requireNonNull(currentTime);","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"        this.currentTime \u003d currentTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JustWeiHao"},"content":"     * @param person the input argument","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"JustWeiHao"},"content":"     * @return {@code true} if the input argument matches the predicate, otherwise {@code false}","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JustWeiHao"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"JustWeiHao"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"JustWeiHao"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"JustWeiHao"},"content":"        return person.getTags().stream().anyMatch(","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"JustWeiHao"},"content":"                tag -\u003e tag.isContained(this.currentTime)","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"JustWeiHao"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"JustWeiHao"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"JustWeiHao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"JustWeiHao"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"JustWeiHao"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"JustWeiHao"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"JustWeiHao"},"content":"        if (!(other instanceof PersonIsFreePredicate)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"JustWeiHao"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"JustWeiHao"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"JustWeiHao"},"content":"        PersonIsFreePredicate otherPredicate \u003d (PersonIsFreePredicate) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"JustWeiHao"},"content":"        return currentTime.equals(otherPredicate.currentTime);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"JustWeiHao"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"JustWeiHao"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"JustWeiHao"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"JustWeiHao"},"content":"                .add(\"current time\", currentTime)","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"JustWeiHao"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JustWeiHao":55}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"            \"Phone numbers should only contain numbers, should be at 8 digits long, and should start with an 8 or 9\";","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALIDATION_REGEX \u003d \"[8-9]\\\\d{7}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nyankoclaws":2,"-":59}},{"path":"src/main/java/seedu/address/model/person/RoomNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"nyankoclaws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"nyankoclaws"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"nyankoclaws"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":" * Represents a Person\u0027s room number in the logbook.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nyankoclaws"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"nyankoclaws"},"content":" * {@link #isValidRoomNumber(String)}","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"public class RoomNumber {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"nyankoclaws"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Room numbers should be in the format: \"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"nyankoclaws"},"content":"            + \"{block}-{floor}-{room number}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"nyankoclaws"},"content":"    public static final String MESSAGE_CONSTRAINTS_DATE \u003d \"Dates for last modified should be in the format: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"nyankoclaws"},"content":"            + \"yyyy-mm-dd\";","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"nyankoclaws"},"content":"    public static final String MESSAGE_CONSTRAINTS_DATE_BEFORE \u003d \"Dates last modified should after today\";","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"     * The first character of the room number must not be a whitespace,","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALIDATION_REGEX \u003d \"(\\\\w{2,})-(\\\\w{2})-(\\\\w{2,})\";","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALIDATION_REGEX_W_DATE \u003d \"(\\\\w{2,})-(\\\\w{2})-(\\\\w{2,}) (\\\\d{4}-\\\\d{2}-\\\\d{2})\";","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"nyankoclaws"},"content":"    // Ignore the year, it will be updated","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"nyankoclaws"},"content":"    private static final LocalDate FIRST_RESULT_RELEASE \u003d LocalDate.parse(\"2020-04-05\");","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"nyankoclaws"},"content":"    private static final LocalDate LAST_RESULT_RELEASE \u003d LocalDate.parse(\"2020-04-12\");","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"nyankoclaws"},"content":"    private final String block;","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"nyankoclaws"},"content":"    private final String floor;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"nyankoclaws"},"content":"    private final String roomNumber;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"nyankoclaws"},"content":"    private final LocalDate lastModified;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"     * Constructs an {@code RoomNumber}.","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"nyankoclaws"},"content":"     * Sets lastModified date to today.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"     * @param roomNumber A valid room number.","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"    public RoomNumber(String roomNumber) {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"nyankoclaws"},"content":"        this(roomNumber \u003d\u003d null ? null : roomNumber + \" \" + LocalDate.now().toString(), true);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"     * Constructs an {@code RoomNumber}.","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"nyankoclaws"},"content":"     * For backend use, allowing lastModified dates","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"nyankoclaws"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"nyankoclaws"},"content":"     * @param roomNumber A valid room number with lastModified date.","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"nyankoclaws"},"content":"     * @param flag Indicator to process date from roomNumber.","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"    public RoomNumber(String roomNumber, boolean flag) {","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"nyankoclaws"},"content":"        requireNonNull(roomNumber);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"nyankoclaws"},"content":"        checkArgument(isValidRoomNumberWDate(roomNumber), MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"        Matcher matcher \u003d Pattern.compile(VALIDATION_REGEX_W_DATE).matcher(roomNumber);","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"nyankoclaws"},"content":"        matcher.find();","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate date \u003d LocalDate.parse(matcher.group(4));","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"nyankoclaws"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"nyankoclaws"},"content":"        this.block \u003d matcher.group(1);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"nyankoclaws"},"content":"        this.floor \u003d matcher.group(2);","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"nyankoclaws"},"content":"        this.roomNumber \u003d matcher.group(3);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"nyankoclaws"},"content":"        this.lastModified \u003d date;","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"larainezo"},"content":"     * Returns true if a given string is a valid room number.","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"larainezo"},"content":"    public static boolean isValidRoomNumber(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"nyankoclaws"},"content":"     * Returns true if a given string is a valid room number with date.","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"nyankoclaws"},"content":"    public static boolean isValidRoomNumberWDate(String test) {","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"nyankoclaws"},"content":"        return test.matches(VALIDATION_REGEX_W_DATE);","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"nyankoclaws"},"content":"     * Returns true if a given date is before today.","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"nyankoclaws"},"content":"    public static boolean isValidDate(LocalDate test) {","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"nyankoclaws"},"content":"        return !test.isAfter(LocalDate.now());","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"nyankoclaws"},"content":"     * Returns true when RoomNumber is due for an udpdate.","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"nyankoclaws"},"content":"    public boolean isOutdated() {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"nyankoclaws"},"content":"        return isOutdated(lastModified);","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"nyankoclaws"},"content":"     * Returns true when RoomNumber is due for an udpdate.","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"nyankoclaws"},"content":"    protected static boolean isOutdated(LocalDate date) {","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate lastRelease \u003d LAST_RESULT_RELEASE;","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"nyankoclaws"},"content":"        lastRelease \u003d lastRelease.withYear(LocalDate.now().getYear());","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"nyankoclaws"},"content":"        if (lastRelease.isAfter(LocalDate.now())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"nyankoclaws"},"content":"            lastRelease \u003d lastRelease.minusYears(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"nyankoclaws"},"content":"        if (!date.isBefore(lastRelease)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"nyankoclaws"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate firstRelease \u003d FIRST_RESULT_RELEASE;","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"nyankoclaws"},"content":"        firstRelease \u003d firstRelease.withYear(LocalDate.now().getYear());","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"nyankoclaws"},"content":"        if (firstRelease.isAfter(LocalDate.now())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"nyankoclaws"},"content":"            firstRelease \u003d firstRelease.minusYears(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"nyankoclaws"},"content":"        if (!date.isBefore(firstRelease)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"nyankoclaws"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"nyankoclaws"},"content":"        return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"nyankoclaws"},"content":"        return block + \"-\" + floor + \"-\" + roomNumber;","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"nyankoclaws"},"content":"    public String toStringWDate() {","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"nyankoclaws"},"content":"        return block + \"-\" + floor + \"-\" + roomNumber + \" \" + lastModified.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"larainezo"},"content":"        if (!(other instanceof RoomNumber)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"larainezo"},"content":"        RoomNumber otherRoomNumber \u003d (RoomNumber) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"nyankoclaws"},"content":"        return toString().equals(otherRoomNumber.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"nyankoclaws"},"content":"        return toString().hashCode();","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larainezo":10,"nyankoclaws":100,"-":43}},{"path":"src/main/java/seedu/address/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":" * Represents a Person\u0027s telegram handle in the logbook.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"public class Telegram {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"     * Message that displays if telegram username input is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram usernames can only contain \"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"            + \"case-insensitive letters A-Z, digits 0-9, and underscores, with a length between 5 and 32 characters, \"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"            + \"and it should not be blank.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"     * Regex for telegram username validation.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"     * Case-insensitive letters A-Z, digits 0-9, underscores, length between 5 and 32 characters","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z0-9_]{5,32}$\";","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"     * Constructs an {@code Telegram}.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"     * @param telegram A valid telegram.","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"    public Telegram(String telegram) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"        checkArgument(isValidTelegram(telegram), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"        value \u003d telegram;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"     * Returns true if a given string is a valid telegram.","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"        if (!(other instanceof Telegram)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"larainezo"},"content":"        Telegram otherTelegram \u003d (Telegram) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"        return value.equals(otherTelegram.value);","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"donwong2308":10,"larainezo":14,"-":45}},{"path":"src/main/java/seedu/address/model/tag/DormTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PallonCX"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"PallonCX"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"PallonCX"},"content":" * Represents a Dorm Tag in Dormie.","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"PallonCX"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"PallonCX"},"content":"public class DormTag extends Tag {","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"PallonCX"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dorm Tag should be a non-empty string\";","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"PallonCX"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s*$).+\";","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"PallonCX"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"PallonCX"},"content":"     * Constructs a {@code DormTag}.","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"PallonCX"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"PallonCX"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"PallonCX"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"PallonCX"},"content":"    public DormTag(String tagName) {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"PallonCX"},"content":"        super(tagName);","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"PallonCX"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"PallonCX"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"PallonCX"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"PallonCX"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"PallonCX"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"PallonCX"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"PallonCX"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"PallonCX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"PallonCX"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"PallonCX"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"PallonCX"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"PallonCX"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"PallonCX"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"PallonCX"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"PallonCX"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"PallonCX"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"PallonCX"},"content":"        return tagName.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"PallonCX"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"PallonCX"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"PallonCX"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"PallonCX"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"PallonCX"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"PallonCX"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"PallonCX":55}},{"path":"src/main/java/seedu/address/model/tag/FreeTimeTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"JustWeiHao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":" * Represents a Free Time Tag in Dormie.","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"public class FreeTimeTag extends Tag implements Comparable\u003cFreeTimeTag\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Free Time Tag should be Mon-Sun:HHmm-HHmm (24hr format)\";","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"    public static final String MESSAGE_INVALID_TIME_INTERVAL \u003d \"Start time should be earlier than End time\";","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"            \"^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])-(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$\";","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"     * Constructs a {@code FreeTimeTag}.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"    public FreeTimeTag(String tagName) {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"        super(tagName);","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"        checkArgument(isValidTimeInterval(tagName), MESSAGE_INVALID_TIME_INTERVAL);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"     * Checks if the start time is before the end time","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"     * @param input A valid free time tag","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"     * @return true if the start time is before the end time","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"    public static boolean isValidTimeInterval(String input) {","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"        String[] split \u003d input.split(\"-\");","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"        String startString \u003d split[0];","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"        String endString \u003d split[1];","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"        int start \u003d Integer.parseInt(startString.substring(4));","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"        int end \u003d Integer.parseInt(endString);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"        return start \u003c end;","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"JustWeiHao"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"JustWeiHao"},"content":"     * Returns true if the current time is contained within the tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"JustWeiHao"},"content":"     * @param currentTime the current time in the format of \"Mon-Sun:HHmm\"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"JustWeiHao"},"content":"     * @return true if the current time is contained within the tag","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"JustWeiHao"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"JustWeiHao"},"content":"    public boolean isContained(String currentTime) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"JustWeiHao"},"content":"        requireNonNull(currentTime);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"JustWeiHao"},"content":"        if (!currentTime.matches(\"^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"JustWeiHao"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"JustWeiHao"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"JustWeiHao"},"content":"        String[] split \u003d tagName.split(\":\");","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"JustWeiHao"},"content":"        if (!split[0].equals(currentTime.substring(0, 3))) {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"JustWeiHao"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"JustWeiHao"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"JustWeiHao"},"content":"        String[] time \u003d split[1].split(\"-\");","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"JustWeiHao"},"content":"        String start \u003d time[0];","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"JustWeiHao"},"content":"        String end \u003d time[1];","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"JustWeiHao"},"content":"        String currentTimeStamp \u003d currentTime.substring(4);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"JustWeiHao"},"content":"        return currentTimeStamp.compareTo(start) \u003e\u003d 0 \u0026\u0026 currentTimeStamp.compareTo(end) \u003c\u003d 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"larainezo"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"larainezo"},"content":"    public int compareTo(FreeTimeTag other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"larainezo"},"content":"        String trimmedThis \u003d this.toString().substring(1, this.toString().length() - 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"larainezo"},"content":"        String thisDay \u003d trimmedThis.substring(0, 3);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"larainezo"},"content":"        Integer thisDayNum;","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"larainezo"},"content":"        if (thisDay.equals(\"Mon\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"larainezo"},"content":"            thisDayNum \u003d 1;","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"larainezo"},"content":"        } else if (thisDay.equals(\"Tue\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"larainezo"},"content":"            thisDayNum \u003d 2;","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"larainezo"},"content":"        } else if (thisDay.equals(\"Wed\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"larainezo"},"content":"            thisDayNum \u003d 3;","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"larainezo"},"content":"        } else if (thisDay.equals(\"Thu\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"larainezo"},"content":"            thisDayNum \u003d 4;","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"larainezo"},"content":"        } else if (thisDay.equals(\"Fri\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"larainezo"},"content":"            thisDayNum \u003d 5;","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"larainezo"},"content":"        } else if (thisDay.equals(\"Sat\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"larainezo"},"content":"            thisDayNum \u003d 6;","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"larainezo"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"larainezo"},"content":"            thisDayNum \u003d 7;","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"larainezo"},"content":"        Integer thisStart \u003d Integer.parseInt(trimmedThis.substring(4, 8));","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"larainezo"},"content":"        Integer thisEnd \u003d Integer.parseInt(trimmedThis.substring(9, 13));","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"larainezo"},"content":"        String trimmedOther \u003d other.toString().substring(1, other.toString().length() - 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"larainezo"},"content":"        Integer otherStart \u003d Integer.parseInt(trimmedOther.substring(4, 8));","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"larainezo"},"content":"        Integer otherEnd \u003d Integer.parseInt(trimmedOther.substring(9, 13));","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"larainezo"},"content":"        Integer otherDayNum;","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"larainezo"},"content":"        if (trimmedOther.substring(0, 3).equals(\"Mon\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"larainezo"},"content":"            otherDayNum \u003d 1;","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"larainezo"},"content":"        } else if (trimmedOther.substring(0, 3).equals(\"Tue\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"larainezo"},"content":"            otherDayNum \u003d 2;","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"larainezo"},"content":"        } else if (trimmedOther.substring(0, 3).equals(\"Wed\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"larainezo"},"content":"            otherDayNum \u003d 3;","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"larainezo"},"content":"        } else if (trimmedOther.substring(0, 3).equals(\"Thu\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"larainezo"},"content":"            otherDayNum \u003d 4;","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"larainezo"},"content":"        } else if (trimmedOther.substring(0, 3).equals(\"Fri\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"larainezo"},"content":"            otherDayNum \u003d 5;","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"larainezo"},"content":"        } else if (trimmedOther.substring(0, 3).equals(\"Sat\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"larainezo"},"content":"            otherDayNum \u003d 6;","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"larainezo"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"larainezo"},"content":"            otherDayNum \u003d 7;","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"larainezo"},"content":"        if (thisDayNum \u003c otherDayNum) {","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"larainezo"},"content":"            return -1;","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"larainezo"},"content":"        } else if (thisDayNum.equals(otherDayNum)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"larainezo"},"content":"            if (thisStart \u003c otherStart) {","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"larainezo"},"content":"                return -1;","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"larainezo"},"content":"            } else if ((thisStart.equals(otherStart)) \u0026\u0026 (thisEnd \u003c otherEnd)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"larainezo"},"content":"                return -1;","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"larainezo"},"content":"            } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"larainezo"},"content":"                return 1;","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"larainezo"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"larainezo"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"larainezo"},"content":"            return 1;","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"larainezo"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"donwong2308"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"donwong2308"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"donwong2308"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"donwong2308"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"donwong2308"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"donwong2308"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"donwong2308"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"donwong2308"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"donwong2308"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"donwong2308"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"donwong2308"},"content":"        return tagName.hashCode();","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"donwong2308"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"donwong2308"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"donwong2308"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"donwong2308":72,"larainezo":59,"JustWeiHao":22}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":" *  Represents a Tag in Dormie.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"public abstract class Tag {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag is in the wrong format\";","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"     * Constructs a Tag.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"     * @param tagName the name of the tag","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"    public abstract int hashCode();","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"     * Format state of Tag object for viewing.","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"    public abstract String toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"donwong2308":9,"-":22}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"nyankoclaws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"nyankoclaws"},"content":"        // If updated on the lastResultRelease for this AY","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate date1 \u003d LocalDate.parse(\"2020-04-12\");","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"nyankoclaws"},"content":"        date1 \u003d date1.withYear(LocalDate.now().getYear());","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"nyankoclaws"},"content":"        if (date1.isAfter(LocalDate.now())) {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"nyankoclaws"},"content":"            date1 \u003d date1.minusYears(1);","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"nyankoclaws"},"content":"        // If updated on the firstResultRelease for this AY","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate date2 \u003d LocalDate.parse(\"2020-04-05\");","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"nyankoclaws"},"content":"        date2 \u003d date2.withYear(LocalDate.now().getYear());","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"nyankoclaws"},"content":"        if (date2.isAfter(LocalDate.now())) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"nyankoclaws"},"content":"            date2 \u003d date2.minusYears(1);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"nyankoclaws"},"content":"        // If updated before the firstResultRelease for this AY","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate date3 \u003d date2.minusDays(1);","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"                    new RoomNumber(\"21-06-40 \" + date1.toString(), true), new Telegram(\"alexYeoh\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"PallonCX"},"content":"                    new Birthday(\"03/02/2000\"), new DormTag(\"PGPR\"), getTagSet(\"Tue:0700-2100\")),","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"nyankoclaws"},"content":"                    new RoomNumber(\"21-07-18 \" + date1.toString(), true), new Telegram(\"berniceYu\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"PallonCX"},"content":"                    new Birthday(\"21/02/1999\"), new DormTag(\"PGPR\"), getTagSet(\"Tue:0700-2100\")),","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"                    new RoomNumber(\"21-11-04 \" + date2.toString(), true), new Telegram(\"charlotteOliveiro\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"PallonCX"},"content":"                    new Birthday(\"02/04/2000\"), new DormTag(\"UTR\"), getTagSet(\"Tue:0700-2100\")),","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"nyankoclaws"},"content":"                    new RoomNumber(\"21-16-43 \" + date2.toString(), true), new Telegram(\"davidLi\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"PallonCX"},"content":"                    new Birthday(\"21/04/1998\"), new DormTag(\"UTR\"), getTagSet(\"Tue:0700-2100\")),","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"                    new RoomNumber(\"21-17-35 \" + date3.toString(), true), new Telegram(\"irfanIbrahim\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"PallonCX"},"content":"                    new Birthday(\"16/04/1993\"), new DormTag(\"UTR\"), getTagSet(\"Tue:0700-2100\")),","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"                    new RoomNumber(\"21-11-31 \" + date3.toString(), true), new Telegram(\"royBalakrishnan\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"PallonCX"},"content":"                    new Birthday(\"18/09/1992\"), new DormTag(\"PGPR\"), getTagSet(\"Tue:0700-2100\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"donwong2308"},"content":"    public static Set\u003cFreeTimeTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"donwong2308"},"content":"                .map(FreeTimeTag::new)","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"donwong2308":6,"PallonCX":7,"nyankoclaws":24,"-":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedFreeTimeTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"class JsonAdaptedFreeTimeTag {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"    private final String freeTimeTagName;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"    public JsonAdaptedFreeTimeTag(String freeTimeTagName) {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"        this.freeTimeTagName \u003d freeTimeTagName;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"    public JsonAdaptedFreeTimeTag(FreeTimeTag source) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"        freeTimeTagName \u003d source.tagName;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"        return freeTimeTagName;","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"    public FreeTimeTag toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"        if (!FreeTimeTag.isValidTagName(freeTimeTagName) || !FreeTimeTag.isValidTimeInterval(freeTimeTagName)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"            throw new IllegalValueException(FreeTimeTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"        return new FreeTimeTag(freeTimeTagName);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"donwong2308":12,"-":37}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"    private final String roomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"    private final String telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"    private final String birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"PallonCX"},"content":"    private final String dormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"    private final List\u003cJsonAdaptedFreeTimeTag\u003e freeTimeTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"roomNumber\") String roomNumber,","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"                             @JsonProperty(\"telegram\") String telegram, @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"PallonCX"},"content":"                             @JsonProperty(\"dormTag\") String dormTag,","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedFreeTimeTag\u003e freeTimeTags) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"donwong2308"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"PallonCX"},"content":"        this.dormTag \u003d dormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"        if (freeTimeTags !\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"donwong2308"},"content":"            this.freeTimeTags.addAll(freeTimeTags);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"PallonCX"},"content":"        email \u003d source.getEmail() \u003d\u003d null ? null : source.getEmail().value;","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"nyankoclaws"},"content":"        roomNumber \u003d source.getRoomNumber() \u003d\u003d null ? null : source.getRoomNumber().toStringWDate();","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"PallonCX"},"content":"        telegram \u003d source.getTelegram() \u003d\u003d null ? null : source.getTelegram().value;","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"JustWeiHao"},"content":"        birthday \u003d source.getBirthday() \u003d\u003d null ? null : String.valueOf(source.getBirthday().value);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"PallonCX"},"content":"        dormTag \u003d source.getDormTag() \u003d\u003d null ? null : source.getDormTag().tagName;","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"donwong2308"},"content":"        freeTimeTags.addAll(source.getTags().stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"donwong2308"},"content":"                .map(JsonAdaptedFreeTimeTag::new)","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"donwong2308"},"content":"        final List\u003cFreeTimeTag\u003e freeTimeTagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"donwong2308"},"content":"        for (JsonAdaptedFreeTimeTag freeTimeTag : freeTimeTags) {","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"donwong2308"},"content":"            freeTimeTagList.add(freeTimeTag.toModelType());","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"nyankoclaws"},"content":"        Email modelEmail \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"nyankoclaws"},"content":"        if (email !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"nyankoclaws"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"nyankoclaws"},"content":"        RoomNumber modelRoomNumber \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"nyankoclaws"},"content":"        if (roomNumber !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"nyankoclaws"},"content":"            if (!RoomNumber.isValidRoomNumberWDate(roomNumber)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"donwong2308"},"content":"                throw new IllegalValueException(RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"donwong2308"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"nyankoclaws"},"content":"            modelRoomNumber \u003d new RoomNumber(roomNumber, true);","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"nyankoclaws"},"content":"        Telegram modelTelegram \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"nyankoclaws"},"content":"        if (telegram !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"donwong2308"},"content":"            if (!Telegram.isValidTelegram(telegram)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"donwong2308"},"content":"                throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"donwong2308"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"nyankoclaws"},"content":"            modelTelegram \u003d new Telegram(telegram);","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"nyankoclaws"},"content":"        Birthday modelBirthday \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"nyankoclaws"},"content":"        if (birthday !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"donwong2308"},"content":"            if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"donwong2308"},"content":"                throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"nyankoclaws"},"content":"            modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"nyankoclaws"},"content":"        DormTag modelDormTag \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"nyankoclaws"},"content":"        if (dormTag !\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"PallonCX"},"content":"            if (!DormTag.isValidTagName(dormTag)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"PallonCX"},"content":"                throw new IllegalValueException(DormTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"PallonCX"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"nyankoclaws"},"content":"            modelDormTag \u003d new DormTag(dormTag);","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"donwong2308"},"content":"        final Set\u003cFreeTimeTag\u003e modelFreeTimeTags \u003d new HashSet\u003c\u003e(freeTimeTagList);","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"donwong2308"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelRoomNumber, modelTelegram, modelBirthday,","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"PallonCX"},"content":"                modelDormTag, modelFreeTimeTags);","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"donwong2308":32,"PallonCX":11,"nyankoclaws":19,"-":85,"JustWeiHao":1}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"nyankoclaws"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-f11-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nyankoclaws":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.Messages.MESSAGE_WELCOME;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"larainezo"},"content":"        resultDisplay.setFeedbackToUser(MESSAGE_WELCOME);","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"larainezo"},"content":"            System.out.println(commandResult);","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"larainezo":6,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"nyankoclaws"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"nyankoclaws"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"nyankoclaws"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"nyankoclaws"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"nyankoclaws"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"    private Label roomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"    private Label telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"    private Label birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"PallonCX"},"content":"    private FlowPane dormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"PallonCX"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"nyankoclaws"},"content":"    private ImageView birthdayIcon;","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"nyankoclaws"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"nyankoclaws"},"content":"    private ImageView changeRoomNumberIcon;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"nyankoclaws"},"content":"     * display.","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"donwong2308"},"content":"        roomNumber.setText(person.getRoomNumber() !\u003d null ? person.getRoomNumber().toString() : \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"donwong2308"},"content":"        telegram.setText(person.getTelegram() !\u003d null ? \"@\" + person.getTelegram().value : \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"donwong2308"},"content":"        birthday.setText(person.getBirthday() !\u003d null ? String.valueOf(person.getBirthday()) : \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"donwong2308"},"content":"        email.setText(person.getEmail() !\u003d null ? person.getEmail().value : \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"PallonCX"},"content":"        if (person.getDormTag() !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"PallonCX"},"content":"            dormTag.getChildren().add(new Label(person.getDormTag().tagName));","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"PallonCX"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"larainezo"},"content":"                .sorted()","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"PallonCX"},"content":"                .forEach(freeTag -\u003e tags.getChildren().add(new Label(freeTag.tagName)));","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"donwong2308"},"content":"        birthdayIcon.setVisible(person.getBirthday() !\u003d null ? person.getBirthday().isBirthday() : false);","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"nyankoclaws"},"content":"        changeRoomNumberIcon.setVisible(person.getRoomNumber() !\u003d null ? person.getRoomNumber().isOutdated() : false);","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"donwong2308":8,"PallonCX":8,"larainezo":1,"nyankoclaws":14,"-":51}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"larainezo":1,"-":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 20%);","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"nyankoclaws"},"content":"    background-color: #C7C7CC; /* Used in the default.html file */","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"nyankoclaws"},"content":"    -fx-base: #E5E5EA;","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"    -fx-control-inner-background: #E5E5EA;","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #E5E5EA;","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 20%);","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 20%);","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 20%);","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #F2F2F7;","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #C7C7CC;","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"nyankoclaws"},"content":"    -fx-border-color: #C7C7CC;","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"nyankoclaws"},"content":"     -fx-background-color: derive(#E5E5EA, 20%);","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"nyankoclaws"},"content":"     -fx-background-color: derive(#E5E5EA, 20%);","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"nyankoclaws"},"content":"     -fx-border-color: derive(#E5E5EA, 10%);","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 30%);","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 30%);","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"nyankoclaws"},"content":"    -fx-border-color: derive(#E5E5EA, 25%);","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 30%);","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"nyankoclaws"},"content":"    -fx-border-color: derive(#E5E5EA, 30%);","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 30%);","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 50%);","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 20%);","lastModifiedDate":"2024-04-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #E5E5EA;","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #C7C7CC;","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"nyankoclaws"},"content":"  -fx-background-color: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":233,"author":{"gitId":"nyankoclaws"},"content":"  -fx-text-fill: #E5E5EA;","lastModifiedDate":"2024-04-01"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"nyankoclaws"},"content":"    -fx-border-color: #000000, #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #E5E5EA;","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #E5E5EA;","lastModifiedDate":"2024-04-01"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #E5E5EA;","lastModifiedDate":"2024-04-01"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 25%);","lastModifiedDate":"2024-04-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"nyankoclaws"},"content":"    -fx-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":281,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 20%);","lastModifiedDate":"2024-04-01"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: derive(#E5E5EA, 50%);","lastModifiedDate":"2024-04-01"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #AF52DE;","lastModifiedDate":"2024-04-01"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: transparent #C7C7CC transparent #C7C7CC;","lastModifiedDate":"2024-04-01"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"nyankoclaws"},"content":"    -fx-border-color: #C7C7CC #C7C7CC #000000 #C7C7CC;","lastModifiedDate":"2024-04-01"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: transparent, #C7C7CC, transparent, #C7C7CC;","lastModifiedDate":"2024-04-01"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2024-03-28"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2024-03-28"},{"lineNumber":346,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":347,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #00C7BE;","lastModifiedDate":"2024-04-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":354,"author":{"gitId":"PallonCX"},"content":"#dormTag {","lastModifiedDate":"2024-03-28"},{"lineNumber":355,"author":{"gitId":"PallonCX"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-28"},{"lineNumber":356,"author":{"gitId":"PallonCX"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-28"},{"lineNumber":357,"author":{"gitId":"PallonCX"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":358,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":359,"author":{"gitId":"PallonCX"},"content":"#dormTag .label {","lastModifiedDate":"2024-03-28"},{"lineNumber":360,"author":{"gitId":"nyankoclaws"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2024-04-01"},{"lineNumber":361,"author":{"gitId":"nyankoclaws"},"content":"    -fx-background-color: #AF52DE;","lastModifiedDate":"2024-04-01"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-28"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-28"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-28"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"PallonCX":7,"nyankoclaws":57,"-":302}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"         title\u003d\"Dormie\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"nyankoclaws"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" maxWidth\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"nyankoclaws"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" maxWidth\u003d\"1.7976931348623157E308\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"donwong2308":1,"nyankoclaws":2,"-":57}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"nyankoclaws"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"nyankoclaws"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"nyankoclaws"},"content":"  xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"nyankoclaws"},"content":"  xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxWidth\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"nyankoclaws"},"content":"    \u003cHBox GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"nyankoclaws"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"nyankoclaws"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"nyankoclaws"},"content":"            \u003cLabel text\u003d\"Dorm:\" styleClass\u003d\"cell_small_label\" minWidth\u003d \"100\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"PallonCX"},"content":"            \u003cFlowPane fx:id\u003d\"dormTag\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"nyankoclaws"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"nyankoclaws"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"nyankoclaws"},"content":"            \u003cLabel text\u003d\"Free Time:\" styleClass\u003d\"cell_small_label\" minWidth\u003d \"100\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"nyankoclaws"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"            \u003cLabel text\u003d\"Phone:\" styleClass\u003d\"cell_small_label\" minWidth\u003d \"100\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"nyankoclaws"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"nyankoclaws"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"nyankoclaws"},"content":"            \u003cLabel text\u003d\"Room Number:\" styleClass\u003d\"cell_small_label\" minWidth\u003d \"100\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"            \u003cLabel fx:id\u003d\"roomNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$roomNumber\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"nyankoclaws"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"nyankoclaws"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"nyankoclaws"},"content":"            \u003cLabel text\u003d\"Email:\" styleClass\u003d\"cell_small_label\" minWidth\u003d \"100\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"nyankoclaws"},"content":"            \u003cLabel text\u003d\"Telegram:\" styleClass\u003d\"cell_small_label\" minWidth\u003d \"100\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"larainezo"},"content":"            \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"nyankoclaws"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"nyankoclaws"},"content":"            \u003cLabel text\u003d\"Birthday:\" styleClass\u003d\"cell_small_label\" minWidth\u003d \"100\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"            \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthday\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"nyankoclaws"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"nyankoclaws"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"nyankoclaws"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"nyankoclaws"},"content":"      \u003cHBox alignment\u003d\"CENTER_RIGHT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"nyankoclaws"},"content":"        \u003cImageView fx:id\u003d\"birthdayIcon\" fitHeight\u003d\"25\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"nyankoclaws"},"content":"          \u003cImage url\u003d\"/images/birthday_cake.png\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"nyankoclaws"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"nyankoclaws"},"content":"        \u003cImageView fx:id\u003d\"changeRoomNumberIcon\" fitHeight\u003d\"25\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"nyankoclaws"},"content":"          \u003cImage url\u003d\"/images/calendar_alert.png\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"nyankoclaws"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"nyankoclaws"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PallonCX":1,"larainezo":3,"nyankoclaws":38,"-":34}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"nyankoclaws"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxWidth\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"nyankoclaws"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" maxWidth\u003d\"1.7976931348623157E308\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nyankoclaws":2,"-":6}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DORM_TAG_DESC_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOMNUMBER_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"PallonCX"},"content":"                + EMAIL_DESC_AMY + ROOMNUMBER_DESC_AMY + TELEGRAM_DESC_AMY + BIRTHDAY_DESC_AMY + DORM_TAG_DESC_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"donwong2308"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withFreeTimeTags().build();","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"donwong2308":4,"PallonCX":2,"-":172}},{"path":"src/test/java/seedu/address/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PallonCX"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"PallonCX"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"PallonCX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"PallonCX"},"content":"public class MessagesTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"PallonCX"},"content":"    private static final String FORMATTED_ALL_FIELDS_MESSAGE \u003d \"Johnny G; Phone: 98765432; \"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"            + \"Email: john@gmail.com; Room Number: sw-01-01; Telegram: Johnny; Birthday: 01 January 2000; \"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"PallonCX"},"content":"            + \"Dorm Tag: [PGPR]; Free Time Tags: [Sun:1000-1400]\";","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"    private static final String FORMATTED_ALL_MANDATORY_FIELDS_MESSAGE \u003d \"Johnny; Phone: 98765432; \"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"            + \"Free Time Tags: [Sun:1000-1400]\";","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"PallonCX"},"content":"    private static final String FORMATTED_ALL_MANDATORY_AND_SOME_OPTIONAL_FIELDS_MESSAGE \u003d \"Johnny; Phone: 98765432; \"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"            + \"Room Number: sw-01-01; Birthday: 01 January 2000; \" + \"Free Time Tags: [Sun:1000-1400]\";","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"PallonCX"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"PallonCX"},"content":"    public void format_personWithAllFields_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"PallonCX"},"content":"        Name name \u003d new Name(\"Johnny G\");","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"PallonCX"},"content":"        Phone phone \u003d new Phone(\"98765432\");","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"PallonCX"},"content":"        Email email \u003d new Email(\"john@gmail.com\");","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"nyankoclaws"},"content":"        RoomNumber roomNumber \u003d new RoomNumber(\"sw-01-01\");","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"PallonCX"},"content":"        Telegram telegram \u003d new Telegram(\"Johnny\");","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"PallonCX"},"content":"        Birthday birthday \u003d new Birthday(\"01-01-2000\");","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"PallonCX"},"content":"        DormTag dormTag \u003d new DormTag(\"PGPR\");","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"        Set\u003cFreeTimeTag\u003e freeTimeTag \u003d Set.of(new FreeTimeTag(\"Sun:1000-1400\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"PallonCX"},"content":"        Person person \u003d new Person(name, phone, email, roomNumber, telegram, birthday, dormTag, freeTimeTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"PallonCX"},"content":"        assertMessageSuccess(person, FORMATTED_ALL_FIELDS_MESSAGE);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"PallonCX"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"PallonCX"},"content":"    public void format_personWithAllMandatoryFields_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"PallonCX"},"content":"        Name name \u003d new Name(\"Johnny\");","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"PallonCX"},"content":"        Phone phone \u003d new Phone(\"98765432\");","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"PallonCX"},"content":"        Email email \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"PallonCX"},"content":"        RoomNumber roomNumber \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"PallonCX"},"content":"        Telegram telegram \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"PallonCX"},"content":"        Birthday birthday \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"PallonCX"},"content":"        DormTag dormTag \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"        Set\u003cFreeTimeTag\u003e freeTimeTag \u003d Set.of(new FreeTimeTag(\"Sun:1000-1400\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"PallonCX"},"content":"        Person person \u003d new Person(name, phone, email, roomNumber, telegram, birthday, dormTag, freeTimeTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"PallonCX"},"content":"        assertMessageSuccess(person, FORMATTED_ALL_MANDATORY_FIELDS_MESSAGE);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"PallonCX"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"PallonCX"},"content":"    public void format_personWithAllMandatoryAndSomeOptionalFields_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"PallonCX"},"content":"        Name name \u003d new Name(\"Johnny\");","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"PallonCX"},"content":"        Phone phone \u003d new Phone(\"98765432\");","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"PallonCX"},"content":"        Email email \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"nyankoclaws"},"content":"        RoomNumber roomNumber \u003d new RoomNumber(\"sw-01-01\");","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"PallonCX"},"content":"        Telegram telegram \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"PallonCX"},"content":"        Birthday birthday \u003d new Birthday(\"01-01-2000\");","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"PallonCX"},"content":"        DormTag dormTag \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"donwong2308"},"content":"        Set\u003cFreeTimeTag\u003e freeTimeTag \u003d Set.of(new FreeTimeTag(\"Sun:1000-1400\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"PallonCX"},"content":"        Person person \u003d new Person(name, phone, email, roomNumber, telegram, birthday, dormTag, freeTimeTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"PallonCX"},"content":"        assertMessageSuccess(person, FORMATTED_ALL_MANDATORY_AND_SOME_OPTIONAL_FIELDS_MESSAGE);","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"PallonCX"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"PallonCX"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"PallonCX"},"content":"     * - the formatted message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"PallonCX"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"PallonCX"},"content":"    private void assertMessageSuccess(Person inputPerson, String expectedMessage) {","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"PallonCX"},"content":"        assertEquals(expectedMessage, Messages.format(inputPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"PallonCX"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"donwong2308":10,"PallonCX":70,"nyankoclaws":2}},{"path":"src/test/java/seedu/address/logic/commands/AddTimeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ADD_TIME_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ADD_TIME_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FREE_TIME_TAG_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FREE_TIME_TAG_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.AddTimeCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"import seedu.address.testutil.AddPersonFreeTimeDescriptorBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddTimeCommand.","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"public class AddTimeCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"        EditPersonDescriptor descriptor \u003d new AddPersonFreeTimeDescriptorBuilder()","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"                .withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"        AddTimeCommand addTimeCommand \u003d new AddTimeCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"        assertCommandFailure(addTimeCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"larainezo"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"        AddTimeCommand addTimeCommand \u003d new AddTimeCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"larainezo"},"content":"                new AddPersonFreeTimeDescriptorBuilder().withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build());","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"        assertCommandFailure(addTimeCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"     * Edit filtered list where no free time was specified","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"larainezo"},"content":"    public void execute_emptyFreeTime_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"larainezo"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"larainezo"},"content":"        Index outOfBoundIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"larainezo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"larainezo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"larainezo"},"content":"        AddTimeCommand addTimeCommand \u003d new AddTimeCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"larainezo"},"content":"                new AddPersonFreeTimeDescriptorBuilder().build());","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"larainezo"},"content":"        assertCommandFailure(addTimeCommand, model, Messages.MESSAGE_NO_FREETIME_SPECIFIED);","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"larainezo"},"content":"     * Edit filtered list where valid duplicate free time is specified","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"larainezo"},"content":"    public void execute_newDuplicateFreeTime_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"larainezo"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"larainezo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"larainezo"},"content":"        assertTrue(INDEX_FIRST_PERSON.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"larainezo"},"content":"        AddTimeCommand addTimeCommand \u003d new AddTimeCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"larainezo"},"content":"                new AddPersonFreeTimeDescriptorBuilder().withFreeTimeTags(VALID_FREE_TIME_TAG_AMY).build());","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"larainezo"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"larainezo"},"content":"        String expectedMessage \u003d String.format(AddTimeCommand.MESSAGE_ADD_FREETIME_SUCCESS,","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"larainezo"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"larainezo"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"larainezo"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"larainezo"},"content":"        assertCommandSuccess(addTimeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"larainezo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"larainezo"},"content":"        final AddTimeCommand standardCommand \u003d new AddTimeCommand(INDEX_FIRST_PERSON, DESC_ADD_TIME_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"larainezo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"larainezo"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_ADD_TIME_AMY);","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"larainezo"},"content":"        AddTimeCommand commandWithSameValues \u003d new AddTimeCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"larainezo"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"larainezo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"larainezo"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"larainezo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"larainezo"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"larainezo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"larainezo"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"larainezo"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"larainezo"},"content":"        assertFalse(standardCommand.equals(new AddTimeCommand(INDEX_SECOND_PERSON, DESC_ADD_TIME_AMY)));","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"larainezo"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"larainezo"},"content":"        assertFalse(standardCommand.equals(new AddTimeCommand(INDEX_FIRST_PERSON, DESC_ADD_TIME_BOB)));","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"larainezo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"larainezo"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"larainezo"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"larainezo"},"content":"        AddTimeCommand addTimeCommand \u003d new AddTimeCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"larainezo"},"content":"        String expected \u003d AddTimeCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"larainezo"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"larainezo"},"content":"        assertEquals(expected, addTimeCommand.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"larainezo":136}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DORMTAG;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOMNUMBER;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"import seedu.address.testutil.AddPersonFreeTimeDescriptorBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"import seedu.address.testutil.DeletePersonFreeTimeDescriptorBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALID_PHONE_AMY \u003d \"91111111\";","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALID_PHONE_BOB \u003d \"92222222\";","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALID_ROOMNUMBER_AMY \u003d \"sw-01-01\";","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALID_ROOMNUMBER_BOB \u003d \"nw-02-02\";","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALID_ROOMNUMBER_AMY_W_DATE \u003d \"sw-01-01 2023-10-21\";","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"nyankoclaws"},"content":"    public static final String VALID_ROOMNUMBER_BOB_W_DATE \u003d \"nw-02-02 2023-10-21\";","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"amyBee\";","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"bobChoo\";","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"01/01/2000\";","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"02/02/2000\";","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"PallonCX"},"content":"    public static final String VALID_DORM_TAG_AMY \u003d \"PGPR\";","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"PallonCX"},"content":"    public static final String VALID_DORM_TAG_BOB \u003d \"UTR\";","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"    public static final String VALID_FREE_TIME_TAG_AMY \u003d \"Mon:1000-1200\";","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"    public static final String VALID_FREE_TIME_TAG_BOB \u003d \"Wed:1400-2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"donwong2308"},"content":"    public static final String ROOMNUMBER_DESC_AMY \u003d \" \" + PREFIX_ROOMNUMBER + VALID_ROOMNUMBER_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"donwong2308"},"content":"    public static final String ROOMNUMBER_DESC_BOB \u003d \" \" + PREFIX_ROOMNUMBER + VALID_ROOMNUMBER_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"donwong2308"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"donwong2308"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"donwong2308"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"donwong2308"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"PallonCX"},"content":"    public static final String DORM_TAG_DESC_AMY \u003d \" \" + PREFIX_DORMTAG + VALID_DORM_TAG_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"PallonCX"},"content":"    public static final String DORM_TAG_DESC_BOB \u003d \" \" + PREFIX_DORMTAG + VALID_DORM_TAG_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"donwong2308"},"content":"    public static final String FREE_TIME_TAG_DESC_AMY \u003d \" \" + PREFIX_FREETIMETAG + VALID_FREE_TIME_TAG_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"donwong2308"},"content":"    public static final String FREE_TIME_TAG_DESC_BOB \u003d \" \" + PREFIX_FREETIMETAG + VALID_FREE_TIME_TAG_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"donwong2308"},"content":"    public static final String INVALID_ROOMNUMBER_DESC \u003d \" \" + PREFIX_ROOMNUMBER; // empty string not allowed for room","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"donwong2308"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM; // empty string not allowed for telegram","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"donwong2308"},"content":"    public static final String INVALID_BIRTHDAY_DESC \u003d \" \" + PREFIX_BIRTHDAY; // empty string not allowed for birthday","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"PallonCX"},"content":"    public static final String INVALID_DORM_TAG_DESC \u003d \" \" + PREFIX_DORMTAG; // empty string not allowed for dorm tag","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"donwong2308"},"content":"    public static final String INVALID_FREE_TIME_TAG_DESC \u003d \" \"","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"donwong2308"},"content":"            + PREFIX_FREETIMETAG; // empty string not allowed for free time tag","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"larainezo"},"content":"    public static final AddTimeCommand.EditPersonDescriptor DESC_ADD_TIME_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"larainezo"},"content":"    public static final AddTimeCommand.EditPersonDescriptor DESC_ADD_TIME_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"larainezo"},"content":"    public static final DeleteTimeCommand.EditPersonDescriptor DESC_DELETE_TIME_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"larainezo"},"content":"    public static final DeleteTimeCommand.EditPersonDescriptor DESC_DELETE_TIME_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"larainezo"},"content":"        DESC_ADD_TIME_AMY \u003d new AddPersonFreeTimeDescriptorBuilder().withFreeTimeTags(VALID_FREE_TIME_TAG_AMY).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"larainezo"},"content":"        DESC_ADD_TIME_BOB \u003d new AddPersonFreeTimeDescriptorBuilder().withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"larainezo"},"content":"        DESC_DELETE_TIME_AMY \u003d new DeletePersonFreeTimeDescriptorBuilder()","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"larainezo"},"content":"                .withFreeTimeTags(VALID_FREE_TIME_TAG_AMY).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"larainezo"},"content":"        DESC_DELETE_TIME_BOB \u003d new DeletePersonFreeTimeDescriptorBuilder()","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"larainezo"},"content":"                .withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"donwong2308"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withRoomNumber(VALID_ROOMNUMBER_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"donwong2308"},"content":"                .withTelegram(VALID_TELEGRAM_AMY).withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"PallonCX"},"content":"                .withDormTag(VALID_DORM_TAG_AMY)","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"donwong2308"},"content":"                .withFreeTimeTags(VALID_FREE_TIME_TAG_AMY).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"donwong2308"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withRoomNumber(VALID_ROOMNUMBER_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"donwong2308"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"PallonCX"},"content":"                .withDormTag(VALID_DORM_TAG_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"donwong2308"},"content":"                .withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"donwong2308":29,"PallonCX":8,"larainezo":12,"nyankoclaws":6,"-":110}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTimeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DELETE_TIME_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DELETE_TIME_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FREE_TIME_TAG_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FREE_TIME_TAG_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.DeleteTimeCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"import seedu.address.testutil.DeletePersonFreeTimeDescriptorBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DeleteTimeCommand.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"public class DeleteTimeCommandTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"        EditPersonDescriptor descriptor \u003d new DeletePersonFreeTimeDescriptorBuilder()","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"                .withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"        DeleteTimeCommand deleteTimeCommand \u003d new DeleteTimeCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"        assertCommandFailure(deleteTimeCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"larainezo"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"        DeleteTimeCommand deleteTimeCommand \u003d new DeleteTimeCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"larainezo"},"content":"                new DeletePersonFreeTimeDescriptorBuilder().withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build());","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"        assertCommandFailure(deleteTimeCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"     * Edit filtered list where no free time was specified.","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"larainezo"},"content":"    public void execute_emptyFreeTime_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"larainezo"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"larainezo"},"content":"        Index outOfBoundIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"larainezo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"larainezo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"larainezo"},"content":"        DeleteTimeCommand deleteTimeCommand \u003d new DeleteTimeCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"larainezo"},"content":"                new DeletePersonFreeTimeDescriptorBuilder().build());","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"larainezo"},"content":"        assertCommandFailure(deleteTimeCommand, model, Messages.MESSAGE_NO_FREETIME_SPECIFIED);","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"larainezo"},"content":"     * Edit filtered list where valid free time is specified","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"larainezo"},"content":"    public void execute_newFreeTime_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"larainezo"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"larainezo"},"content":"        Index outOfBoundIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"larainezo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"larainezo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"larainezo"},"content":"        DeleteTimeCommand deleteTimeCommand \u003d new DeleteTimeCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"larainezo"},"content":"                new DeletePersonFreeTimeDescriptorBuilder().withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build());","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"larainezo"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"larainezo"},"content":"        String expectedMessage \u003d String.format(DeleteTimeCommand.MESSAGE_DELETE_FREETIME_SUCCESS,","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"larainezo"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"larainezo"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"larainezo"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"larainezo"},"content":"        assertCommandSuccess(deleteTimeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"larainezo"},"content":"    public void execute_newMultipleFreeTime_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"larainezo"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"larainezo"},"content":"        Index outOfBoundIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"larainezo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"larainezo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"larainezo"},"content":"        DeleteTimeCommand deleteTimeCommand \u003d new DeleteTimeCommand(outOfBoundIndex,","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"larainezo"},"content":"                new DeletePersonFreeTimeDescriptorBuilder().withFreeTimeTags(VALID_FREE_TIME_TAG_AMY)","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"larainezo"},"content":"                        .withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build());","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"larainezo"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"larainezo"},"content":"        String expectedMessage \u003d String.format(DeleteTimeCommand.MESSAGE_DELETE_FREETIME_SUCCESS,","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"larainezo"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"larainezo"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"larainezo"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"larainezo"},"content":"        assertCommandSuccess(deleteTimeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"larainezo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"larainezo"},"content":"        final DeleteTimeCommand standardCommand \u003d new DeleteTimeCommand(INDEX_FIRST_PERSON, DESC_DELETE_TIME_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"larainezo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"larainezo"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_DELETE_TIME_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"larainezo"},"content":"        DeleteTimeCommand commandWithSameValues \u003d new DeleteTimeCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"larainezo"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"larainezo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"larainezo"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"larainezo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"larainezo"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"larainezo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"larainezo"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"larainezo"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"larainezo"},"content":"        assertFalse(standardCommand.equals(new DeleteTimeCommand(INDEX_SECOND_PERSON, DESC_DELETE_TIME_AMY)));","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"larainezo"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"larainezo"},"content":"        assertFalse(standardCommand.equals(new DeleteTimeCommand(INDEX_FIRST_PERSON, DESC_DELETE_TIME_BOB)));","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"larainezo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"larainezo"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"larainezo"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"larainezo"},"content":"        DeleteTimeCommand deleteTimeCommand \u003d new DeleteTimeCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"larainezo"},"content":"        String expected \u003d DeleteTimeCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"larainezo"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"larainezo"},"content":"        assertEquals(expected, deleteTimeCommand.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"larainezo":159}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DORM_TAG_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_AMY_W_DATE;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"        Person editedPerson \u003d new PersonBuilder()","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"nyankoclaws"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"nyankoclaws"},"content":"                .withRoomNumber(VALID_ROOMNUMBER_AMY_W_DATE)","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nyankoclaws"},"content":"                .withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"PallonCX"},"content":"                .withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"PallonCX"},"content":"                .withDormTag(VALID_DORM_TAG_AMY)","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"PallonCX"},"content":"                .build();","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"donwong2308"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"donwong2308"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"JustWeiHao"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + Set.of(index) + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"donwong2308":2,"PallonCX":4,"nyankoclaws":10,"-":176,"JustWeiHao":3}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"        // different room number -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withRoomNumber(VALID_ROOMNUMBER_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"donwong2308"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", roomNumber\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"donwong2308"},"content":"                + editPersonDescriptor.getRoomNumber().orElse(null) + \", telegram\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"donwong2308"},"content":"                + editPersonDescriptor.getTelegram().orElse(null) + \", birthday\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"donwong2308"},"content":"                + editPersonDescriptor.getBirthday().orElse(null) + \", freeTimeTags\u003d\"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"PallonCX"},"content":"                + editPersonDescriptor.getDormTag().orElse(null) + \", dormTag\u003d\"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"donwong2308":7,"PallonCX":1,"-":62}},{"path":"src/test/java/seedu/address/logic/commands/FindByNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"JustWeiHao"},"content":"public class FindByNameCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"JustWeiHao"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JustWeiHao"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand findFirstCommand \u003d new FindByNameCommand(firstPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand findSecondCommand \u003d new FindByNameCommand(secondPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand findFirstCommandCopy \u003d new FindByNameCommand(firstPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"JustWeiHao"},"content":"    public void instantiate_nullPredicate_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"JustWeiHao"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FindByNameCommand(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand command \u003d new FindByNameCommand(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand command \u003d new FindByNameCommand(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand findCommand \u003d new FindByNameCommand(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"JustWeiHao"},"content":"        String expected \u003d FindByNameCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":81,"JustWeiHao":15}},{"path":"src/test/java/seedu/address/logic/commands/FindFreePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.model.person.PersonIsFreePredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"JustWeiHao"},"content":"public class FindFreePersonCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JustWeiHao"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"JustWeiHao"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"JustWeiHao"},"content":"        PersonIsFreePredicate firstPredicate \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"JustWeiHao"},"content":"                new PersonIsFreePredicate(\"Mon:0700\");","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"JustWeiHao"},"content":"        PersonIsFreePredicate secondPredicate \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"JustWeiHao"},"content":"                new PersonIsFreePredicate(\"Tue:0700\");","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand findFirstCommand \u003d new FindFreePersonCommand(firstPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand findSecondCommand \u003d new FindFreePersonCommand(secondPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand findFirstCommandCopy \u003d new FindFreePersonCommand(firstPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"JustWeiHao"},"content":"    public void instantiate_nullPredicate_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"JustWeiHao"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FindFreePersonCommand(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"JustWeiHao"},"content":"        PersonIsFreePredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand command \u003d new FindFreePersonCommand(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"JustWeiHao"},"content":"    public void execute_freeTimeFound_personsFound() {","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"JustWeiHao"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"JustWeiHao"},"content":"        PersonIsFreePredicate predicate \u003d preparePredicate(\"Mon:1000\");","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand command \u003d new FindFreePersonCommand(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"JustWeiHao"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"JustWeiHao"},"content":"        PersonIsFreePredicate predicate \u003d new PersonIsFreePredicate(\"keyword\");","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"JustWeiHao"},"content":"        FindCommand findCommand \u003d new FindFreePersonCommand(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"JustWeiHao"},"content":"        String expected \u003d FindFreePersonCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"JustWeiHao"},"content":"    private PersonIsFreePredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"JustWeiHao"},"content":"        return new PersonIsFreePredicate(userInput);","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":64,"JustWeiHao":32}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DORM_TAG_DESC_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FREE_TIME_TAG_DESC_BOB;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOMNUMBER_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DORM_TAG_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.testutil.TypicalNewPersons.BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.testutil.NewPersonBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"        Person expectedPerson \u003d new NewPersonBuilder(BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"PallonCX"},"content":"                + ROOMNUMBER_DESC_BOB + TELEGRAM_DESC_BOB + BIRTHDAY_DESC_BOB + DORM_TAG_DESC_BOB","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"PallonCX"},"content":"                        + FREE_TIME_TAG_DESC_BOB,","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"PallonCX"},"content":"    public void parse_someFieldsPresent_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"PallonCX"},"content":"        Name name \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"PallonCX"},"content":"        Phone phone \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"PallonCX"},"content":"        Email email \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"PallonCX"},"content":"        RoomNumber roomNumber \u003d new RoomNumber(VALID_ROOMNUMBER_BOB);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"PallonCX"},"content":"        Telegram telegram \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"PallonCX"},"content":"        Birthday birthday \u003d new Birthday(VALID_BIRTHDAY_BOB);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"PallonCX"},"content":"        DormTag dormTag \u003d new DormTag(VALID_DORM_TAG_BOB);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"donwong2308"},"content":"        Set\u003cFreeTimeTag\u003e freeTimeTag \u003d Set.of(new FreeTimeTag(\"Wed:1400-2000\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"PallonCX"},"content":"        Person expectedPerson \u003d new Person(name, phone, email, roomNumber, telegram, birthday, dormTag, freeTimeTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"PallonCX"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"PallonCX"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"PallonCX"},"content":"                + ROOMNUMBER_DESC_BOB + BIRTHDAY_DESC_BOB + DORM_TAG_DESC_BOB + FREE_TIME_TAG_DESC_BOB,","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"PallonCX"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_preamble_fail() {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"JustWeiHao"},"content":"        // Non-empty preamble","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"JustWeiHao"},"content":"                        + ROOMNUMBER_DESC_BOB + TELEGRAM_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"JustWeiHao"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_nameMissing_fail() {","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"JustWeiHao"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"JustWeiHao"},"content":"                + ROOMNUMBER_DESC_BOB + TELEGRAM_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"JustWeiHao"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_phoneMissing_fail() {","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"JustWeiHao"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"JustWeiHao"},"content":"                        + ROOMNUMBER_DESC_BOB + TELEGRAM_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"donwong2308":8,"PallonCX":24,"nyankoclaws":3,"-":44,"JustWeiHao":14}},{"path":"src/test/java/seedu/address/logic/parser/AddTimeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.AddTimeCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"public class AddTimeCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTimeCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"    private AddTimeCommandParser parser \u003d new AddTimeCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"        // no index specified","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"        // negative index","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"        // zero index","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"larainezo":42}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.commands.FindByNameCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"JustWeiHao"},"content":"                FindByNameCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"JustWeiHao"},"content":"        assertEquals(new FindByNameCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":99,"JustWeiHao":3}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTimeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.DeleteTimeCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"public class DeleteTimeCommandParserTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTimeCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"    private DeleteTimeCommandParser parser \u003d new DeleteTimeCommandParser();","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"        // no index specified","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"        // negative index","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"        // zero index","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"larainezo":41}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROOMNUMBER_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOMNUMBER_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOMNUMBER_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOMNUMBER;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"donwong2308"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROOMNUMBER_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"donwong2308"},"content":"                RoomNumber.MESSAGE_CONSTRAINTS); // invalid room number","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"donwong2308"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"donwong2308"},"content":"                Telegram.MESSAGE_CONSTRAINTS); // invalid telegram","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"donwong2308"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BIRTHDAY_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"donwong2308"},"content":"                Birthday.MESSAGE_CONSTRAINTS); // invalid birthday","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"donwong2308"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ROOMNUMBER_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"donwong2308"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":105,"author":{"gitId":"donwong2308"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"donwong2308"},"content":"                + EMAIL_DESC_AMY + ROOMNUMBER_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"donwong2308"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withRoomNumber(VALID_ROOMNUMBER_AMY).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"donwong2308"},"content":"        // room number","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"donwong2308"},"content":"        userInput \u003d targetIndex.getOneBased() + ROOMNUMBER_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"donwong2308"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRoomNumber(VALID_ROOMNUMBER_AMY).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"donwong2308"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ROOMNUMBER_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"donwong2308"},"content":"                + PHONE_DESC_AMY + ROOMNUMBER_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"donwong2308"},"content":"                + PHONE_DESC_BOB + ROOMNUMBER_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"donwong2308"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOMNUMBER));","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"donwong2308"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ROOMNUMBER_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"donwong2308"},"content":"                + INVALID_PHONE_DESC + INVALID_ROOMNUMBER_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"donwong2308"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOMNUMBER));","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_multiplePersonEditName_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"JustWeiHao"},"content":"        String userInput \u003d String.format(\"%d %d %s\", INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"JustWeiHao"},"content":"                INDEX_SECOND_PERSON.getOneBased(), NAME_DESC_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, userInput, String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"NAME\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_multiplePersonEditPhone_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"JustWeiHao"},"content":"        String userInput \u003d String.format(\"%d %d %s\", INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"JustWeiHao"},"content":"                INDEX_SECOND_PERSON.getOneBased(), PHONE_DESC_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, userInput, String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"PHONE\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_multiplePersonEditEmail_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"JustWeiHao"},"content":"        String userInput \u003d String.format(\"%d %d %s\", INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"JustWeiHao"},"content":"                INDEX_SECOND_PERSON.getOneBased(), EMAIL_DESC_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, userInput, String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"EMAIL\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_multiplePersonEditRoomNumber_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"JustWeiHao"},"content":"        String userInput \u003d String.format(\"%d %d %s\", INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"JustWeiHao"},"content":"                INDEX_SECOND_PERSON.getOneBased(), ROOMNUMBER_DESC_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, userInput, String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"ROOM NUMBER\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_multiplePersonEditTelegram_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"JustWeiHao"},"content":"        String userInput \u003d String.format(\"%d %d %s\", INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"JustWeiHao"},"content":"                INDEX_SECOND_PERSON.getOneBased(), TELEGRAM_DESC_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, userInput, String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"TELEGRAM\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_multiplePersonEditBirthday_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"JustWeiHao"},"content":"        String userInput \u003d String.format(\"%d %d %s\", INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"JustWeiHao"},"content":"                INDEX_SECOND_PERSON.getOneBased(), BIRTHDAY_DESC_AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, userInput, String.format(EditCommand.MESSAGE_MULTIEDIT_FAIL, \"BIRTHDAY\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"donwong2308":31,"-":154,"JustWeiHao":36}},{"path":"src/test/java/seedu/address/logic/parser/FindByNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.commands.FindByNameCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"public class FindByNameCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"    private FindByNameCommandParser parser \u003d new FindByNameCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_nullArg_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JustWeiHao"},"content":"                FindByNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"JustWeiHao"},"content":"                new FindByNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":30,"JustWeiHao":11}},{"path":"src/test/java/seedu/address/logic/parser/FindFreePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustWeiHao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.commands.FindFreePersonCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JustWeiHao"},"content":"import seedu.address.model.person.PersonIsFreePredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JustWeiHao"},"content":"public class FindFreePersonCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JustWeiHao"},"content":"    private static final FindFreePersonCommandParser parser \u003d new FindFreePersonCommandParser();","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_nullArgs_throwNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_emptyArgs_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, \"Mon:0700-0900\", String.format(","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"JustWeiHao"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, FindFreePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, \"random\", String.format(","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"JustWeiHao"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, FindFreePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"JustWeiHao"},"content":"        assertParseFailure(parser, \"Ton:0700\", String.format(","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"JustWeiHao"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, FindFreePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"JustWeiHao"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"JustWeiHao"},"content":"        FindFreePersonCommand expected \u003d new FindFreePersonCommand(new PersonIsFreePredicate(\"Mon:0700\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"JustWeiHao"},"content":"        assertParseSuccess(parser, \"Mon:0700\", expected);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JustWeiHao":40}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"    private static final String INVALID_ROOMNUMBER \u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"    private static final String INVALID_TELEGRAM \u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"    private static final String INVALID_BIRTHDAY \u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"    private static final String VALID_PHONE \u003d \"92891682\";","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"nyankoclaws"},"content":"    private static final String VALID_ROOMNUMBER \u003d \"sw-05-05\";","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"    private static final String VALID_TELEGRAM \u003d \"rachelWalker\";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"    private static final String VALID_BIRTHDAY \u003d \"20/11/1998\";","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"donwong2308"},"content":"    public void parseRoomNumber_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"donwong2308"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRoomNumber((String) null));","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"donwong2308"},"content":"    public void parseRoomNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"donwong2308"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRoomNumber(INVALID_ROOMNUMBER));","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"donwong2308"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsRoomNumber() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"donwong2308"},"content":"        RoomNumber expectedRoomNumber \u003d new RoomNumber(VALID_ROOMNUMBER);","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"donwong2308"},"content":"        assertEquals(expectedRoomNumber, ParserUtil.parseRoomNumber(VALID_ROOMNUMBER));","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"donwong2308"},"content":"    public void parseRoomNumber_validValueWithWhitespace_returnsTrimmedRoomNumber() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"donwong2308"},"content":"        String roomNumberWithWhitespace \u003d WHITESPACE + VALID_ROOMNUMBER + WHITESPACE;","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"donwong2308"},"content":"        RoomNumber expectedRoomNumber \u003d new RoomNumber(VALID_ROOMNUMBER);","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"donwong2308"},"content":"        assertEquals(expectedRoomNumber, ParserUtil.parseRoomNumber(roomNumberWithWhitespace));","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"donwong2308"},"content":"    public void parseTelegram_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"donwong2308"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegram((String) null));","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"donwong2308"},"content":"    public void parseTelegram_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"donwong2308"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(INVALID_TELEGRAM));","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"donwong2308"},"content":"    public void parseTelegram_validValueWithoutWhitespace_returnsTelegram() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"donwong2308"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"donwong2308"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(VALID_TELEGRAM));","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"donwong2308"},"content":"    public void parseTelegram_validValueWithWhitespace_returnsTrimmedTelegram() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"donwong2308"},"content":"        String telegramWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM + WHITESPACE;","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"donwong2308"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"donwong2308"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(telegramWithWhitespace));","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"donwong2308"},"content":"    public void parseBirthday_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"donwong2308"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBirthday((String) null));","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"donwong2308"},"content":"    public void parseBirthday_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"donwong2308"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthday(INVALID_BIRTHDAY));","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"donwong2308"},"content":"    public void parseBirthday_validValueWithoutWhitespace_returnsBirthday() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"donwong2308"},"content":"        Birthday expectedBirthday \u003d new Birthday(VALID_BIRTHDAY);","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"donwong2308"},"content":"        assertEquals(expectedBirthday, ParserUtil.parseBirthday(VALID_BIRTHDAY));","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"donwong2308"},"content":"    public void parseBirthday_validValueWithWhitespace_returnsTrimmedBirthday() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"donwong2308"},"content":"        String birthdayWithWhitespace \u003d WHITESPACE + VALID_BIRTHDAY + WHITESPACE;","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"donwong2308"},"content":"        Birthday expectedBirthday \u003d new Birthday(VALID_BIRTHDAY);","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"donwong2308"},"content":"        assertEquals(expectedBirthday, ParserUtil.parseBirthday(birthdayWithWhitespace));","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"donwong2308"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"donwong2308"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"donwong2308"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"donwong2308"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"donwong2308"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"donwong2308"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"donwong2308"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"donwong2308"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"donwong2308"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"donwong2308"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"donwong2308"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"donwong2308"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"donwong2308"},"content":"    public void testParseFreeTimeTag_validTag() {","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"donwong2308"},"content":"        String validTag \u003d \"Mon:0900-1700\";","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"donwong2308"},"content":"            FreeTimeTag freeTimeTag \u003d ParserUtil.parseFreeTimeTag(validTag);","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"donwong2308"},"content":"            assertEquals(validTag.trim(), freeTimeTag.tagName);","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"donwong2308"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"donwong2308"},"content":"            fail(\"Valid tag should not throw ParseException\");","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"donwong2308"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"donwong2308"},"content":"    public void testParseFreeTimeTag_invalidTagName() {","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"donwong2308"},"content":"        String invalidTag \u003d \"Invalid Tag\";","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"donwong2308"},"content":"            ParserUtil.parseFreeTimeTag(invalidTag);","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"donwong2308"},"content":"            fail(\"Expected ParseException was not thrown\");","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"donwong2308"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"donwong2308"},"content":"            assertEquals(\"Free Time Tag should be Mon-Sun:HHmm-HHmm (24hr format)\",","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"donwong2308"},"content":"                    FreeTimeTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"donwong2308"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"donwong2308"},"content":"    public void testParseFreeTimeTag_invalidTimeInterval() {","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"donwong2308"},"content":"        String invalidTag \u003d \"Mon:2300-1700\";","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"donwong2308"},"content":"            ParserUtil.parseFreeTimeTag(invalidTag);","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"donwong2308"},"content":"            fail(\"Expected ParseException was not thrown\");","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"donwong2308"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"donwong2308"},"content":"            assertEquals(\"Start time should be earlier than End time\",","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"donwong2308"},"content":"                    FreeTimeTag.MESSAGE_INVALID_TIME_INTERVAL);","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"donwong2308":88,"nyankoclaws":1,"-":140}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_BOB_W_DATE;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withRoomNumber(VALID_ROOMNUMBER_BOB_W_DATE)","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"nyankoclaws"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withRoomNumber(VALID_ROOMNUMBER_BOB_W_DATE)","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"donwong2308"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"donwong2308":4,"nyankoclaws":3,"-":102}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nyankoclaws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"public class BirthdayTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"    public void constructor_invalidRoomNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"        String invalidBirthday \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Birthday(invalidBirthday));","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"    public void isValidBirthday() {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"        // null birthday","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthday.isValidBirthday(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"JustWeiHao"},"content":"        // invalid birthday","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"        assertFalse(Birthday.isValidBirthday(\"\")); // empty string","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"        assertFalse(Birthday.isValidBirthday(\" \")); // spaces only","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(Birthday.isValidBirthday(\"12-12\")); // missing year fields","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(Birthday.isValidBirthday(\"30-02-2024\")); // invalid day of month","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(Birthday.isValidBirthday(\"12-12-2024\")); // future date","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(Birthday.isValidBirthday(\"12-13-2024\")); // invalid month","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"JustWeiHao"},"content":"        // valid birthday","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(Birthday.isValidBirthday(\"12/12/2003\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(Birthday.isValidBirthday(\"29/02/2024\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(Birthday.isValidBirthday(\"26/03/2024\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"nyankoclaws"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"    public void isBirthdayTest() {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"        Birthday todayBirthday \u003d new Birthday(LocalDate.now().minusYears(1).toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(todayBirthday.isBirthday());","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"nyankoclaws"},"content":"        Birthday yesterdayBirthday \u003d new Birthday(LocalDate.now().minusYears(1)","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"nyankoclaws"},"content":"                .minusDays(1).toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(yesterdayBirthday.isBirthday());","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"        Birthday birthday \u003d new Birthday(\"01/01/2001\");","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"larainezo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"larainezo"},"content":"        assertTrue(birthday.equals(new Birthday(\"01/01/2001\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"larainezo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"larainezo"},"content":"        assertTrue(birthday.equals(birthday));","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"larainezo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"larainezo"},"content":"        assertFalse(birthday.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"larainezo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"larainezo"},"content":"        assertFalse(birthday.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"larainezo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"larainezo"},"content":"        assertFalse(birthday.equals(new Birthday(\"01/02/2001\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"larainezo":50,"nyankoclaws":12,"JustWeiHao":10}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":63,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(Email.isValidEmail(\"a1be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(Email.isValidEmail(\"peter.jack@very.very.very.long.example.com\")); // long domain name","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it.you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"nyankoclaws"},"content":"        Email email \u003d new Email(\"valid@email.hello\");","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(email.equals(new Email(\"valid@email.hello\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email.hello\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"nyankoclaws":12,"-":76}},{"path":"src/test/java/seedu/address/model/person/PersonIsFreePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustWeiHao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JustWeiHao"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"JustWeiHao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":"public class PersonIsFreePredicateTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"JustWeiHao"},"content":"    public void instantiate_null_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"JustWeiHao"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PersonIsFreePredicate(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JustWeiHao"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JustWeiHao"},"content":"        PersonIsFreePredicate firstPredicate \u003d new PersonIsFreePredicate(\"free\");","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"        PersonIsFreePredicate secondPredicate \u003d new PersonIsFreePredicate(\"busy\");","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"        PersonIsFreePredicate firstPredicateCopy \u003d new PersonIsFreePredicate(\"free\");","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(!firstPredicate.equals(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"JustWeiHao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(!firstPredicate.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"JustWeiHao"},"content":"        // different predicate","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(!firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JustWeiHao":34}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DORM_TAG_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FREE_TIME_TAG_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_BOB_W_DATE;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.testutil.TypicalNewPersons.BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"PallonCX"},"content":"    public void isSamePerson_trueCases_assertTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"PallonCX"},"content":"        // same object","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"PallonCX"},"content":"        // all attributes same","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"PallonCX"},"content":"        Person sameAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"PallonCX"},"content":"        assertTrue(ALICE.isSamePerson(sameAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"PallonCX"},"content":"        // same phone, all other attributes different","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"PallonCX"},"content":"        Person editedPhoneAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"PallonCX"},"content":"        assertTrue(BOB.isSamePerson(editedPhoneAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"PallonCX"},"content":"        // same email, all other attributes different","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"PallonCX"},"content":"        Person editedEmailAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"PallonCX"},"content":"        assertTrue(BOB.isSamePerson(editedEmailAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"PallonCX"},"content":"        // same telegram, all other attributes different","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"PallonCX"},"content":"        Person editedTelegramAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"PallonCX"},"content":"        assertTrue(BOB.isSamePerson(editedTelegramAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"PallonCX"},"content":"    public void isSamePerson_falseCases_assertFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"PallonCX"},"content":"        // null","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"PallonCX"},"content":"        // same name, all other attributes different","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"PallonCX"},"content":"        Person editedNameAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"PallonCX"},"content":"        assertFalse(BOB.isSamePerson(editedNameAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"PallonCX"},"content":"        // same birthday, all other attributes different","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"PallonCX"},"content":"        Person editedBirthdayAlice \u003d new PersonBuilder(ALICE).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"PallonCX"},"content":"        assertFalse(BOB.isSamePerson(editedBirthdayAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"PallonCX"},"content":"        // same room number, all other attributes different","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"PallonCX"},"content":"        Person editedRoomNumberAlice \u003d new PersonBuilder(ALICE).withRoomNumber(VALID_ROOMNUMBER_BOB_W_DATE).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"PallonCX"},"content":"        assertFalse(BOB.isSamePerson(editedRoomNumberAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"PallonCX"},"content":"        // same dorm, all other attributes different","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"PallonCX"},"content":"        Person editedDormAlice \u003d new PersonBuilder(ALICE).withDormTag(VALID_DORM_TAG_BOB).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"PallonCX"},"content":"        assertFalse(BOB.isSamePerson(editedDormAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"PallonCX"},"content":"        // same free time, all other attributes different","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"PallonCX"},"content":"        Person editedFreeTimeAlice \u003d new PersonBuilder(ALICE).withFreeTimeTags(VALID_FREE_TIME_TAG_BOB).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"PallonCX"},"content":"        assertFalse(BOB.isSamePerson(editedFreeTimeAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"donwong2308"},"content":"        // different room number -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"nyankoclaws"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRoomNumber(VALID_ROOMNUMBER_BOB_W_DATE).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"PallonCX"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"PallonCX"},"content":"    public void equals_someOptionalFieldsAreNull_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"PallonCX"},"content":"        Person aliceCopyWithoutEmail \u003d new Person(","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"PallonCX"},"content":"                ALICE.getName(),","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"PallonCX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"PallonCX"},"content":"                null,","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"PallonCX"},"content":"                ALICE.getRoomNumber(),","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"PallonCX"},"content":"                ALICE.getTelegram(),","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"donwong2308"},"content":"                ALICE.getBirthday(),","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"PallonCX"},"content":"                ALICE.getDormTag(),","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"donwong2308"},"content":"                ALICE.getTags());","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"PallonCX"},"content":"        assertFalse(ALICE.equals(aliceCopyWithoutEmail));","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"PallonCX"},"content":"        assertFalse(aliceCopyWithoutEmail.equals(ALICE));","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"PallonCX"},"content":"        Person aliceCopyWithoutRoomNumber \u003d new Person(","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"PallonCX"},"content":"                ALICE.getName(),","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"PallonCX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"PallonCX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"PallonCX"},"content":"                null,","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"PallonCX"},"content":"                ALICE.getTelegram(),","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"donwong2308"},"content":"                ALICE.getBirthday(),","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"PallonCX"},"content":"                ALICE.getDormTag(),","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"donwong2308"},"content":"                ALICE.getTags());","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"PallonCX"},"content":"        assertFalse(ALICE.equals(aliceCopyWithoutRoomNumber));","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"PallonCX"},"content":"        assertFalse(aliceCopyWithoutRoomNumber.equals(ALICE));","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"PallonCX"},"content":"        Person aliceCopyWithoutTelegram \u003d new Person(","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"PallonCX"},"content":"                ALICE.getName(),","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"PallonCX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"PallonCX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"PallonCX"},"content":"                ALICE.getRoomNumber(),","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"PallonCX"},"content":"                null,","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"donwong2308"},"content":"                ALICE.getBirthday(),","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"PallonCX"},"content":"                ALICE.getDormTag(),","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"donwong2308"},"content":"                ALICE.getTags());","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"PallonCX"},"content":"        assertFalse(ALICE.equals(aliceCopyWithoutTelegram));","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"PallonCX"},"content":"        assertFalse(aliceCopyWithoutTelegram.equals(ALICE));","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"PallonCX"},"content":"        Person aliceCopyWithoutBirthday \u003d new Person(","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"PallonCX"},"content":"                ALICE.getName(),","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"PallonCX"},"content":"                ALICE.getPhone(),","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"PallonCX"},"content":"                ALICE.getEmail(),","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"PallonCX"},"content":"                ALICE.getRoomNumber(),","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"PallonCX"},"content":"                ALICE.getTelegram(),","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"donwong2308"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"PallonCX"},"content":"                ALICE.getDormTag(),","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"donwong2308"},"content":"                ALICE.getTags());","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"PallonCX"},"content":"        assertFalse(ALICE.equals(aliceCopyWithoutBirthday));","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"PallonCX"},"content":"        assertFalse(aliceCopyWithoutBirthday.equals(ALICE));","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"larainezo"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \", email\u003d\" + ALICE.getEmail() + \", roomNumber\u003d\" + ALICE.getRoomNumber()","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"PallonCX"},"content":"                + \", telegram\u003d\" + ALICE.getTelegram() + \", birthday\u003d\" + ALICE.getBirthday()","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"PallonCX"},"content":"                + \", dormTag\u003d\" + ALICE.getDormTag() + \"}\";","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"donwong2308":11,"PallonCX":81,"larainezo":1,"nyankoclaws":3,"-":69}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(Phone.isValidPhone(\"911\")); // 3 numbers","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(Phone.isValidPhone(\"73121534\")); // don\u0027t start with 9 or 8","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\")); // start with 9","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(Phone.isValidPhone(\"83121534\")); // start with 8","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"        Phone phone \u003d new Phone(\"99999999\");","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(phone.equals(new Phone(\"99999999\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(phone.equals(new Phone(\"99999998\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"nyankoclaws":8,"-":54}},{"path":"src/test/java/seedu/address/model/person/RoomNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nyankoclaws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"nyankoclaws"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"public class RoomNumberTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RoomNumber(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"    public void constructor_invalidRoomNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"        String invalidRoomNumber \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RoomNumber(invalidRoomNumber));","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"    public void isValidRoomNumber() {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"        // null address","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"        assertThrows(NullPointerException.class, () -\u003e RoomNumber.isValidRoomNumber(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"\")); // empty string","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\" \")); // spaces only","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"        // valid addresses","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(RoomNumber.isValidRoomNumber(\"sw-12-12\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(RoomNumber.isValidRoomNumber(\"kw-01-02\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(RoomNumber.isValidRoomNumber(\"kms-03-01\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"nyankoclaws"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"nyankoclaws"},"content":"    public void isValidRoomNumberWDate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"nyankoclaws"},"content":"        // null address","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"nyankoclaws"},"content":"        assertThrows(NullPointerException.class, () -\u003e RoomNumber.isValidRoomNumberWDate(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(RoomNumber.isValidRoomNumberWDate(\"sw-12-12\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate yesterday \u003d today.minusDays(1);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate tomorrow \u003d today.plusDays(1);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"        // valid addresses \u0026 dates","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(RoomNumber.isValidRoomNumberWDate(\"sw-12-12 \" + today.toString()));","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(RoomNumber.isValidRoomNumberWDate(\"kw-01-02 \" + tomorrow.toString()));","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(RoomNumber.isValidRoomNumberWDate(\"kms-03-01 \" + yesterday.toString()));","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"        // valid addresses \u0026 invalid date formats","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(RoomNumber.isValidRoomNumberWDate(\"sw-12-12 \" + today.format(formatter)));","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(RoomNumber.isValidRoomNumberWDate(\"kw-01-02 \" + tomorrow.format(formatter)));","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(RoomNumber.isValidRoomNumberWDate(\"kms-03-01 \" + yesterday.format(formatter)));","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"nyankoclaws"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"nyankoclaws"},"content":"    public void isValidDate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(RoomNumber.isValidDate(today));","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate yesterday \u003d today.minusDays(1);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(RoomNumber.isValidDate(yesterday));","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate tomorrow \u003d today.plusDays(1);","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(RoomNumber.isValidDate(tomorrow));","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"nyankoclaws"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"nyankoclaws"},"content":"    public void isOutdated() {","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"nyankoclaws"},"content":"        RoomNumber roomNumber \u003d new RoomNumber(\"sw-01-01\");","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(roomNumber.isOutdated());","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"nyankoclaws"},"content":"        // If updated on the lastResultRelease for this AY","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate date1 \u003d LocalDate.parse(\"2020-04-12\");","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"nyankoclaws"},"content":"        date1 \u003d date1.withYear(LocalDate.now().getYear());","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"nyankoclaws"},"content":"        if (date1.isAfter(LocalDate.now())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"nyankoclaws"},"content":"            date1 \u003d date1.minusYears(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(RoomNumber.isOutdated(date1));","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse((new RoomNumber(\"sw-01-01 \" + date1.toString(), true)).isOutdated());","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"nyankoclaws"},"content":"        // If updated on the firstResultRelease for this AY","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate date2 \u003d LocalDate.parse(\"2020-04-05\");","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"nyankoclaws"},"content":"        date2 \u003d date2.withYear(LocalDate.now().getYear());","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"nyankoclaws"},"content":"        if (date2.isAfter(LocalDate.now())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"nyankoclaws"},"content":"            date2 \u003d date2.minusYears(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(RoomNumber.isOutdated(date2));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse((new RoomNumber(\"sw-01-01 \" + date2.toString(), true)).isOutdated());","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"nyankoclaws"},"content":"        // If updated before the firstResultRelease for this AY","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate date3 \u003d date2.minusDays(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(RoomNumber.isOutdated(date3));","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue((new RoomNumber(\"sw-01-01 \" + date3.toString(), true)).isOutdated());","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"nyankoclaws"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"nyankoclaws"},"content":"    public void toStringWDate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"nyankoclaws"},"content":"        // Room number with today lastModified","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"nyankoclaws"},"content":"        String roomNum \u003d \"sw-01-01\";","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"nyankoclaws"},"content":"        RoomNumber roomNumber \u003d new RoomNumber(roomNum);","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"nyankoclaws"},"content":"        String expected \u003d roomNum + \" \" + LocalDate.now().toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(roomNumber.toStringWDate().equals(expected));","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"nyankoclaws"},"content":"        // Room number with set lastModified","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"nyankoclaws"},"content":"        String dateStr \u003d \"2022-05-02\";","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"nyankoclaws"},"content":"        LocalDate date1 \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"nyankoclaws"},"content":"        RoomNumber roomNumber1 \u003d new RoomNumber(roomNum + \" \" + date1.toString(), true);","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"nyankoclaws"},"content":"        String expected1 \u003d roomNum + \" \" + dateStr;","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(roomNumber1.toStringWDate().equals(expected1));","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"larainezo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"nyankoclaws"},"content":"        RoomNumber roomNumber \u003d new RoomNumber(\"sw-01-01\");","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"larainezo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(roomNumber.equals(new RoomNumber(\"sw-01-01\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"larainezo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"larainezo"},"content":"        assertTrue(roomNumber.equals(roomNumber));","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"larainezo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"larainezo"},"content":"        assertFalse(roomNumber.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"larainezo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"larainezo"},"content":"        assertFalse(roomNumber.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"larainezo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"nyankoclaws"},"content":"        assertFalse(roomNumber.equals(new RoomNumber(\"nw-02-02\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"larainezo":50,"nyankoclaws":88}},{"path":"src/test/java/seedu/address/model/person/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"public class TelegramTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"    public void constructor_invalidRoomNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"        String invalidTelegram \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidTelegram));","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"        // null address","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTelegram(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"        assertFalse(Telegram.isValidTelegram(\"\")); // empty string","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"        assertFalse(Telegram.isValidTelegram(\" \")); // spaces only","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"        // valid addresses","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"        assertTrue(Telegram.isValidTelegram(\"testHandle\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"        assertTrue(Telegram.isValidTelegram(\"hello123\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"        assertTrue(Telegram.isValidTelegram(\"sampleHandle\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"        Telegram telegram \u003d new Telegram(\"testHandle\");","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"        assertTrue(telegram.equals(new Telegram(\"testHandle\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"        assertTrue(telegram.equals(telegram));","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"        assertFalse(telegram.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"larainezo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"larainezo"},"content":"        assertFalse(telegram.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"larainezo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"larainezo"},"content":"        assertFalse(telegram.equals(new Telegram(\"testHandle2\")));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"larainezo":56}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.testutil.TypicalNewPersons.ALICE;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.testutil.TypicalNewPersons.BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.testutil.NewPersonBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"        Person editedAlice \u003d new NewPersonBuilder(ALICE).withRoomNumber(VALID_ROOMNUMBER_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"nyankoclaws"},"content":"        NewPersonBuilder hi \u003d new NewPersonBuilder(ALICE).withRoomNumber(VALID_ROOMNUMBER_BOB);","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"nyankoclaws"},"content":"        Person editedAlice \u003d new NewPersonBuilder(ALICE).withRoomNumber(VALID_ROOMNUMBER_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":165,"author":{"gitId":"nyankoclaws"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"nyankoclaws"},"content":"            uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"donwong2308":1,"nyankoclaws":8,"-":164}},{"path":"src/test/java/seedu/address/model/tag/FreeTimeTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustWeiHao"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JustWeiHao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"JustWeiHao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JustWeiHao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JustWeiHao"},"content":"public class FreeTimeTagTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"    public void isValidTimeInterval() {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"        assertTrue(FreeTimeTag.isValidTimeInterval(\"Mon:0700-0900\")); // Start \u003e End","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"        assertFalse(FreeTimeTag.isValidTimeInterval(\"Mon:0700-0700\")); // Start \u003d\u003d End","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"        assertFalse(FreeTimeTag.isValidTimeInterval(\"Mon:0701-0700\")); // Start \u003c End","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"JustWeiHao"},"content":"    public void isContained() {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JustWeiHao"},"content":"        FreeTimeTag freeTimeTag \u003d new FreeTimeTag(\"Mon:0700-0900\");","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(freeTimeTag.isContained(\"Mon:0700\")); // On time","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(freeTimeTag.isContained(\"Mon:0800\")); // In between","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(freeTimeTag.isContained(\"Mon:0900\")); // On time","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(freeTimeTag.isContained(\"Tue:0700\")); // Different day","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(freeTimeTag.isContained(\"Mon:0659\")); // Earlier time","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(freeTimeTag.isContained(\"Mon:0901\")); // Later time","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"JustWeiHao"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JustWeiHao"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"JustWeiHao"},"content":"        FreeTimeTag freeTimeTag1 \u003d new FreeTimeTag(\"Mon:0700-0900\");","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"JustWeiHao"},"content":"        FreeTimeTag freeTimeTag2 \u003d new FreeTimeTag(\"Tue:0700-0900\");","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"JustWeiHao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(freeTimeTag1.equals(freeTimeTag1));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"JustWeiHao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"JustWeiHao"},"content":"        FreeTimeTag freeTimeTag1Copy \u003d new FreeTimeTag(\"Mon:0700-0900\");","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"JustWeiHao"},"content":"        assertTrue(freeTimeTag1.equals(freeTimeTag1Copy));","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"JustWeiHao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(freeTimeTag1.equals(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"JustWeiHao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(freeTimeTag1.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"JustWeiHao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"JustWeiHao"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"JustWeiHao"},"content":"        assertFalse(freeTimeTag1.equals(freeTimeTag2));","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"JustWeiHao"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"nyankoclaws"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"nyankoclaws"},"content":"    public void compareTo() {","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"nyankoclaws"},"content":"        FreeTimeTag freeTimeTag1 \u003d new FreeTimeTag(\"Mon:0700-0900\");","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"nyankoclaws"},"content":"        FreeTimeTag freeTimeTag2 \u003d new FreeTimeTag(\"Tue:0700-0900\");","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"        FreeTimeTag freeTimeTag3 \u003d new FreeTimeTag(\"Wed:0700-0900\");","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"        FreeTimeTag freeTimeTag4 \u003d new FreeTimeTag(\"Thu:0700-0900\");","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"nyankoclaws"},"content":"        FreeTimeTag freeTimeTag5 \u003d new FreeTimeTag(\"Fri:0700-0900\");","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"nyankoclaws"},"content":"        FreeTimeTag freeTimeTag6 \u003d new FreeTimeTag(\"Sat:0700-0900\");","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"        FreeTimeTag freeTimeTag7 \u003d new FreeTimeTag(\"Sun:0700-0900\");","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"nyankoclaws"},"content":"        FreeTimeTag freeTimeTag8 \u003d new FreeTimeTag(\"Mon:0700-0901\");","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"nyankoclaws"},"content":"        FreeTimeTag freeTimeTag9 \u003d new FreeTimeTag(\"Mon:0701-0900\");","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"nyankoclaws"},"content":"        // Compares all days for the same time","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag1.compareTo(freeTimeTag1) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag2.compareTo(freeTimeTag2) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag3.compareTo(freeTimeTag3) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag4.compareTo(freeTimeTag4) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag5.compareTo(freeTimeTag5) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag6.compareTo(freeTimeTag6) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag7.compareTo(freeTimeTag7) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"nyankoclaws"},"content":"        // Compares different days","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag1.compareTo(freeTimeTag2) \u003d\u003d -1);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag2.compareTo(freeTimeTag1) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"nyankoclaws"},"content":"        // Compares different start and end timings","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag1.compareTo(freeTimeTag8) \u003d\u003d -1);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag8.compareTo(freeTimeTag1) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag1.compareTo(freeTimeTag9) \u003d\u003d -1);","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag9.compareTo(freeTimeTag1) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag8.compareTo(freeTimeTag9) \u003d\u003d -1);","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(freeTimeTag9.compareTo(freeTimeTag8) \u003d\u003d 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"JustWeiHao"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"donwong2308":7,"nyankoclaws":35,"JustWeiHao":42}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nyankoclaws"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"nyankoclaws"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nyankoclaws"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"nyankoclaws"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"nyankoclaws"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"nyankoclaws"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"nyankoclaws"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"nyankoclaws"},"content":"     * Ensures that sample data is initialised properly.","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"nyankoclaws"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"nyankoclaws"},"content":"    public void sampleAddressBookTest() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"nyankoclaws"},"content":"        ReadOnlyAddressBook addressBookFromSample \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nyankoclaws"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"nyankoclaws"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"nyankoclaws":22}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"    private static final String INVALID_ROOMNUMBER \u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"    private static final String INVALID_TELEGRAM \u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"    private static final String INVALID_BIRTHDAY \u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"PallonCX"},"content":"    private static final String INVALID_DORMTAG \u003d \" \";","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"    private static final String INVALID_FREETIMETAGS \u003d \"Mon:1pm-2pm\";","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"nyankoclaws"},"content":"    private static final String VALID_ROOMNUMBER \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"nyankoclaws"},"content":"                BENSON.getRoomNumber() \u003d\u003d null ? null : BENSON.getRoomNumber().toStringWDate();","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"PallonCX"},"content":"    private static final String VALID_BIRTHDAY \u003d String.valueOf(BENSON.getBirthday().value);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"PallonCX"},"content":"    private static final String VALID_DORMTAG \u003d BENSON.getDormTag().toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"    private static final List\u003cJsonAdaptedFreeTimeTag\u003e VALID_FREETIMETAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"            .map(JsonAdaptedFreeTimeTag::new)","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"nyankoclaws"},"content":"        JsonAdaptedPerson person1 \u003d new JsonAdaptedPerson(ALICE);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"nyankoclaws"},"content":"        assertEquals(ALICE, person1.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"nyankoclaws"},"content":"        JsonAdaptedPerson person2 \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"        assertEquals(BENSON, person2.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"        JsonAdaptedPerson person3 \u003d new JsonAdaptedPerson(CARL);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"nyankoclaws"},"content":"        assertEquals(CARL, person3.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"nyankoclaws"},"content":"        JsonAdaptedPerson person4 \u003d new JsonAdaptedPerson(DANIEL);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"        assertEquals(DANIEL, person4.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"nyankoclaws"},"content":"        JsonAdaptedPerson person5 \u003d new JsonAdaptedPerson(ELLE);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"nyankoclaws"},"content":"        assertEquals(ELLE, person5.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"donwong2308"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOMNUMBER, VALID_TELEGRAM,","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"PallonCX"},"content":"                        VALID_BIRTHDAY, VALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"nyankoclaws"},"content":"        JsonAdaptedPerson person1 \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ROOMNUMBER,","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"PallonCX"},"content":"                VALID_TELEGRAM, VALID_BIRTHDAY, VALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"nyankoclaws"},"content":"        String expectedMessage1 \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"nyankoclaws"},"content":"        assertThrows(IllegalValueException.class, expectedMessage1, person1::toModelType);","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"donwong2308"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ROOMNUMBER,","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"PallonCX"},"content":"                VALID_TELEGRAM, VALID_BIRTHDAY, VALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"donwong2308"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ROOMNUMBER, VALID_TELEGRAM,","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"PallonCX"},"content":"                        VALID_BIRTHDAY, VALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"donwong2308"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ROOMNUMBER,","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"PallonCX"},"content":"                VALID_TELEGRAM, VALID_BIRTHDAY, VALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"donwong2308"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ROOMNUMBER, VALID_TELEGRAM,","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"PallonCX"},"content":"                        VALID_BIRTHDAY, VALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"donwong2308"},"content":"    public void toModelType_invalidRoomNumber_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"donwong2308"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ROOMNUMBER, VALID_TELEGRAM,","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"PallonCX"},"content":"                        VALID_BIRTHDAY, VALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"donwong2308"},"content":"        String expectedMessage \u003d RoomNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"donwong2308"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"donwong2308"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOMNUMBER, INVALID_TELEGRAM,","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"PallonCX"},"content":"                        VALID_BIRTHDAY, VALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"donwong2308"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"donwong2308"},"content":"    public void toModelType_invalidBirthday_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"donwong2308"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"donwong2308"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOMNUMBER, VALID_TELEGRAM,","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"PallonCX"},"content":"                        INVALID_BIRTHDAY, VALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"donwong2308"},"content":"        String expectedMessage \u003d Birthday.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"donwong2308"},"content":"    public void toModelType_invalidFreeTimeTags_throwsIllegalValueException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"donwong2308"},"content":"        List\u003cJsonAdaptedFreeTimeTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"donwong2308"},"content":"        invalidTags.add(new JsonAdaptedFreeTimeTag(INVALID_FREETIMETAGS));","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"donwong2308"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOMNUMBER,","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"PallonCX"},"content":"                VALID_TELEGRAM, VALID_BIRTHDAY, VALID_DORMTAG, invalidTags);","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"donwong2308"},"content":"        String expectedMessage \u003d FreeTimeTag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"donwong2308"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"PallonCX"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"PallonCX"},"content":"    public void toModelType_invalidDormTag_throwsIllegalValueException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"PallonCX"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"PallonCX"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOMNUMBER, VALID_TELEGRAM,","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"PallonCX"},"content":"                        VALID_BIRTHDAY, INVALID_DORMTAG, VALID_FREETIMETAGS);","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"PallonCX"},"content":"        String expectedMessage \u003d DormTag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"PallonCX"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"donwong2308":32,"PallonCX":22,"nyankoclaws":19,"-":83}},{"path":"src/test/java/seedu/address/testutil/AddPersonFreeTimeDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.AddTimeCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"public class AddPersonFreeTimeDescriptorBuilder {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"    public AddPersonFreeTimeDescriptorBuilder() {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"    public AddPersonFreeTimeDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"    public AddPersonFreeTimeDescriptorBuilder(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"     * that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"    public AddPersonFreeTimeDescriptorBuilder withFreeTimeTags(String... freeTimeTags) {","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"        Set\u003cFreeTimeTag\u003e tagSet \u003d Stream.of(freeTimeTags).map(FreeTimeTag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"        descriptor.getTags();","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"        return descriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"larainezo":48}},{"path":"src/test/java/seedu/address/testutil/DeletePersonFreeTimeDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larainezo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"larainezo"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"larainezo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"larainezo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"larainezo"},"content":"import seedu.address.logic.commands.DeleteTimeCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"larainezo"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"larainezo"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"larainezo"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"larainezo"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"larainezo"},"content":"public class DeletePersonFreeTimeDescriptorBuilder {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"larainezo"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"larainezo"},"content":"    public DeletePersonFreeTimeDescriptorBuilder() {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"larainezo"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"larainezo"},"content":"    public DeletePersonFreeTimeDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"larainezo"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"larainezo"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"larainezo"},"content":"    public DeletePersonFreeTimeDescriptorBuilder(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"larainezo"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"larainezo"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"larainezo"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"larainezo"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"larainezo"},"content":"     * that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"larainezo"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"larainezo"},"content":"    public DeletePersonFreeTimeDescriptorBuilder withFreeTimeTags(String... freeTimeTags) {","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"larainezo"},"content":"        Set\u003cFreeTimeTag\u003e tagSet \u003d Stream.of(freeTimeTags).map(FreeTimeTag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"larainezo"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"larainezo"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"larainezo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"larainezo"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"larainezo"},"content":"        return descriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"larainezo"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"larainezo"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"larainezo":47}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"        descriptor.setRoomNumber(person.getRoomNumber());","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"        descriptor.setTelegram(person.getTelegram());","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"        descriptor.setBirthday(person.getBirthday());","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"PallonCX"},"content":"        descriptor.setDormTag(person.getDormTag());","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"donwong2308"},"content":"     * Sets the {@code RoomNumber} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"donwong2308"},"content":"    public EditPersonDescriptorBuilder withRoomNumber(String roomNumber) {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"donwong2308"},"content":"        descriptor.setRoomNumber(new RoomNumber(roomNumber));","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"donwong2308"},"content":"     * Sets the {@code Telegram} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"donwong2308"},"content":"    public EditPersonDescriptorBuilder withTelegram(String telegram) {","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"donwong2308"},"content":"        descriptor.setTelegram(new Telegram(telegram));","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"donwong2308"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"donwong2308"},"content":"     * Sets the {@code Birthday} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"donwong2308"},"content":"    public EditPersonDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"donwong2308"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"PallonCX"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"PallonCX"},"content":"     * Sets the {@code DormTag} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"PallonCX"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"PallonCX"},"content":"    public EditPersonDescriptorBuilder withDormTag(String dormTag) {","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"PallonCX"},"content":"        descriptor.setDormTag(new DormTag(dormTag));","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"donwong2308"},"content":"    public EditPersonDescriptorBuilder withFreeTimeTags(String... freeTimeTags) {","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"donwong2308"},"content":"        Set\u003cFreeTimeTag\u003e tagSet \u003d Stream.of(freeTimeTags).map(FreeTimeTag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"donwong2308":23,"PallonCX":7,"-":87}},{"path":"src/test/java/seedu/address/testutil/NewPersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nyankoclaws"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"nyankoclaws"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"nyankoclaws"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"nyankoclaws"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"nyankoclaws"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"nyankoclaws"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"nyankoclaws"},"content":"public class NewPersonBuilder {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"nyankoclaws"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"nyankoclaws"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"nyankoclaws"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"nyankoclaws"},"content":"    public static final String DEFAULT_ROOMNUMBER \u003d \"sw-01-01\";","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"nyankoclaws"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"amyBee\";","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"nyankoclaws"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"01/01/2000\";","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"PallonCX"},"content":"    public static final String DEFAULT_DORMTAG \u003d \"PGPR\";","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"nyankoclaws"},"content":"    private Name name;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"nyankoclaws"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"nyankoclaws"},"content":"    private Email email;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"nyankoclaws"},"content":"    private RoomNumber roomNumber;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"nyankoclaws"},"content":"    private Telegram telegram;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"nyankoclaws"},"content":"    private Birthday birthday;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"PallonCX"},"content":"    private DormTag dormTag;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"nyankoclaws"},"content":"    private Set\u003cFreeTimeTag\u003e freeTimeTags;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"nyankoclaws"},"content":"     * Creates a {@code NewPersonBuilder} with the default details.","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"nyankoclaws"},"content":"    public NewPersonBuilder() {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"nyankoclaws"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"        email \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"nyankoclaws"},"content":"        roomNumber \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"nyankoclaws"},"content":"        telegram \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"nyankoclaws"},"content":"        birthday \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"PallonCX"},"content":"        dormTag \u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"        freeTimeTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"nyankoclaws"},"content":"     * Initializes the NewPersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"nyankoclaws"},"content":"    public NewPersonBuilder(Person personToCopy) {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"nyankoclaws"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"nyankoclaws"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"nyankoclaws"},"content":"        roomNumber \u003d personToCopy.getRoomNumber();","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"nyankoclaws"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"nyankoclaws"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"PallonCX"},"content":"        dormTag \u003d personToCopy.getDormTag();","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"nyankoclaws"},"content":"        freeTimeTags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"nyankoclaws"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"nyankoclaws"},"content":"    public NewPersonBuilder withName(String name) {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"nyankoclaws"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"nyankoclaws"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"nyankoclaws"},"content":"     * Sets the {@code RoomNumber} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"nyankoclaws"},"content":"    public NewPersonBuilder withRoomNumber(String roomNumber) {","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"nyankoclaws"},"content":"        this.roomNumber \u003d new RoomNumber(roomNumber);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"nyankoclaws"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"nyankoclaws"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"nyankoclaws"},"content":"    public NewPersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"nyankoclaws"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"nyankoclaws"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"nyankoclaws"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"nyankoclaws"},"content":"    public NewPersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"nyankoclaws"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"nyankoclaws"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"nyankoclaws"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"nyankoclaws"},"content":"    public NewPersonBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"nyankoclaws"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"nyankoclaws"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"nyankoclaws"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"nyankoclaws"},"content":"    public NewPersonBuilder withEmail(String email) {","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"nyankoclaws"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"nyankoclaws"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"PallonCX"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"PallonCX"},"content":"     * Sets the {@code DormTag} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"PallonCX"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"PallonCX"},"content":"    public NewPersonBuilder withDormTag(String dormTag) {","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"PallonCX"},"content":"        this.dormTag \u003d new DormTag(dormTag);","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"PallonCX"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"nyankoclaws"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"nyankoclaws"},"content":"     * Sets the {@code FreeTimeTag} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"nyankoclaws"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"nyankoclaws"},"content":"    public NewPersonBuilder withFreeTimeTags(String... freeTime) {","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"nyankoclaws"},"content":"        this.freeTimeTags \u003d SampleDataUtil.getTagSet(freeTime);","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"nyankoclaws"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"nyankoclaws"},"content":"    public Person build() {","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"PallonCX"},"content":"        return new Person(name, phone, email, roomNumber, telegram, birthday, dormTag, freeTimeTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"nyankoclaws"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"nyankoclaws"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"PallonCX":14,"nyankoclaws":121}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"PallonCX"},"content":"import seedu.address.model.tag.DormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"nyankoclaws"},"content":"    public static final String DEFAULT_ROOMNUMBER \u003d \"sw-01-01 2023-10-20\";","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"amyBee\";","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"01/01/2000\";","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"PallonCX"},"content":"    public static final String DEFAULT_DORMTAG \u003d \"PGPR\";","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"    private RoomNumber roomNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"    private Telegram telegram;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"    private Birthday birthday;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"PallonCX"},"content":"    private DormTag dormTag;","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"    private Set\u003cFreeTimeTag\u003e freeTimeTags;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"        email \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"nyankoclaws"},"content":"        roomNumber \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"nyankoclaws"},"content":"        telegram \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"nyankoclaws"},"content":"        birthday \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"PallonCX"},"content":"        dormTag \u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"        freeTimeTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"donwong2308"},"content":"        roomNumber \u003d personToCopy.getRoomNumber();","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"donwong2308"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"donwong2308"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"PallonCX"},"content":"        dormTag \u003d personToCopy.getDormTag();","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"donwong2308"},"content":"        freeTimeTags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"donwong2308"},"content":"     * Sets the {@code RoomNumber} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"donwong2308"},"content":"    public PersonBuilder withRoomNumber(String roomNumber) {","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"nyankoclaws"},"content":"        this.roomNumber \u003d new RoomNumber(roomNumber, true);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"donwong2308"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"donwong2308"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"donwong2308"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"donwong2308"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"donwong2308"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"donwong2308"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"donwong2308"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"PallonCX"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"PallonCX"},"content":"     * Sets the {@code DormTag} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"PallonCX"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"PallonCX"},"content":"    public PersonBuilder withDormTag(String dormTag) {","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"PallonCX"},"content":"        this.dormTag \u003d new DormTag(dormTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"PallonCX"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"PallonCX"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"donwong2308"},"content":"     * Sets the {@code FreeTimeTag} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"donwong2308"},"content":"    public PersonBuilder withFreeTimeTags(String ... freeTime) {","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"donwong2308"},"content":"        this.freeTimeTags \u003d SampleDataUtil.getTagSet(freeTime);","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"donwong2308"},"content":"        return this;","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":132,"author":{"gitId":"PallonCX"},"content":"        return new Person(name, phone, email, roomNumber, telegram, birthday, dormTag, freeTimeTags);","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"donwong2308":36,"PallonCX":14,"nyankoclaws":6,"-":79}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DORMTAG;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREETIMETAG;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOMNUMBER;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"import seedu.address.model.tag.FreeTimeTag;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"nyankoclaws"},"content":"        if (person.getEmail() !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"nyankoclaws"},"content":"        if (person.getRoomNumber() !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"nyankoclaws"},"content":"            sb.append(PREFIX_ROOMNUMBER + person.getRoomNumber().toString() + \" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"        if (person.getTelegram() !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"            sb.append(PREFIX_TELEGRAM + person.getTelegram().value + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"nyankoclaws"},"content":"        if (person.getBirthday() !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"JustWeiHao"},"content":"            sb.append(PREFIX_BIRTHDAY + String.valueOf(person.getBirthday().value) + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"                s -\u003e sb.append(PREFIX_FREETIMETAG + s.tagName + \" \")","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"donwong2308"},"content":"        descriptor.getRoomNumber().ifPresent(roomNumber -\u003e sb.append(PREFIX_ROOMNUMBER)","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"nyankoclaws"},"content":"                .append(roomNumber.toString()).append(\" \"));","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"donwong2308"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM).append(telegram.value).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"donwong2308"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY).append(birthday.value).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"PallonCX"},"content":"        descriptor.getDormTag().ifPresent(dormTag -\u003e sb.append(PREFIX_DORMTAG).append(dormTag.tagName).append(\" \"));","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"donwong2308"},"content":"            Set\u003cFreeTimeTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"donwong2308"},"content":"                sb.append(PREFIX_FREETIMETAG);","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"donwong2308"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_FREETIMETAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"donwong2308":13,"PallonCX":4,"nyankoclaws":10,"-":53,"JustWeiHao":1}},{"path":"src/test/java/seedu/address/testutil/TypicalNewPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nyankoclaws"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DORM_TAG_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FREE_TIME_TAG_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"nyankoclaws"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"nyankoclaws"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"nyankoclaws"},"content":" * tests.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"nyankoclaws"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"nyankoclaws"},"content":"public class TypicalNewPersons {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"nyankoclaws"},"content":"    // All fields present","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"nyankoclaws"},"content":"    public static final Person ALICE \u003d new NewPersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"nyankoclaws"},"content":"            .withRoomNumber(\"nw-12-12\").withTelegram(\"alicePauline\").withBirthday(\"23/12/1990\")","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"PallonCX"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\").withDormTag(\"PGPR\")","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"PallonCX"},"content":"            .withFreeTimeTags(\"Mon:1000-1400\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"nyankoclaws"},"content":"    // Room number not present","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"nyankoclaws"},"content":"    public static final Person BENSON \u003d new NewPersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"nyankoclaws"},"content":"            .withTelegram(\"bensonMeier\").withBirthday(\"25/02/2001\")","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"PallonCX"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withDormTag(\"PGPR\")","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"PallonCX"},"content":"            .withFreeTimeTags(\"Mon:1000-1400\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"nyankoclaws"},"content":"    // Email not present","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"nyankoclaws"},"content":"    public static final Person CARL \u003d new NewPersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"nyankoclaws"},"content":"            .withRoomNumber(\"IW-03-12\").withTelegram(\"carlKurz\")","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"12/04/1995\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"UTR\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"nyankoclaws"},"content":"    // Telegram not present","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"nyankoclaws"},"content":"    public static final Person DANIEL \u003d new NewPersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"cornelia@example.com\").withRoomNumber(\"an-10-10\")","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"10/10/2002\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"UTR\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"nyankoclaws"},"content":"    // Birthday not present","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"    public static final Person ELLE \u003d new NewPersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822243\")","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"werner@example.com\").withRoomNumber(\"tt-02-12B\")","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"PallonCX"},"content":"            .withTelegram(\"elleMeyer\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"PGPR\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"nyankoclaws"},"content":"    public static final Person FIONA \u003d new NewPersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94822427\")","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"lydia@example.com\").withRoomNumber(\"od-05-12S\").withTelegram(\"fionaKunz\")","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"12/05/2002\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"UTR\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"PallonCX"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"nyankoclaws"},"content":"    public static final Person GEORGE \u003d new NewPersonBuilder().withName(\"George Best\").withPhone(\"94824142\")","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"anna@example.com\").withRoomNumber(\"ie-23-12B\").withTelegram(\"georgeBest\")","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"22/12/1997\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"PGPR\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"nyankoclaws"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"    public static final Person BOB \u003d new NewPersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(VALID_EMAIL_BOB).withRoomNumber(VALID_ROOMNUMBER_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(VALID_BIRTHDAY_BOB).withFreeTimeTags(VALID_FREE_TIME_TAG_BOB)","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(VALID_DORM_TAG_BOB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"nyankoclaws"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"PallonCX":23,"nyankoclaws":40}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DORM_TAG_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"PallonCX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DORM_TAG_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_AMY_W_DATE;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"nyankoclaws"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOMNUMBER_BOB_W_DATE;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"nyankoclaws"},"content":" * A utility class containing a list of existing {@code Person} objects to be used in tests.","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"nyankoclaws"},"content":"    // All fields present","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"nyankoclaws"},"content":"            .withRoomNumber(\"nw-12-12 2023-10-21\").withTelegram(\"alicePauline\").withBirthday(\"23/12/1990\")","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"PallonCX"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\").withDormTag(\"PGPR\")","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"larainezo"},"content":"            .withFreeTimeTags(\"Mon:1000-1200\").build();","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"nyankoclaws"},"content":"    // Room number not present","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"nyankoclaws"},"content":"            .withTelegram(\"bensonMeier\").withBirthday(\"25/02/2001\")","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"PallonCX"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withDormTag(\"PGPR\")","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"PallonCX"},"content":"            .withFreeTimeTags(\"Mon:1000-1400\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"nyankoclaws"},"content":"    // Email not present","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"nyankoclaws"},"content":"            .withRoomNumber(\"IW-03-12 2023-10-21\").withTelegram(\"carlKurz\")","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"12/04/1995\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"UTR\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"nyankoclaws"},"content":"    // Telegram not present","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"cornelia@example.com\").withRoomNumber(\"an-10-10 2023-10-21\")","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"10/10/2002\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"UTR\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"nyankoclaws"},"content":"    // Birthday not present","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822243\")","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"werner@example.com\").withRoomNumber(\"tt-02-12B 2023-10-21\")","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"PallonCX"},"content":"            .withTelegram(\"elleMeyer\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"PGPR\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94822427\")","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"lydia@example.com\").withRoomNumber(\"od-05-12S 2023-10-21\").withTelegram(\"fionaKunz\")","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"12/05/2002\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"UTR\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"donwong2308"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824142\")","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"anna@example.com\").withRoomNumber(\"ie-23-12B 2023-10-21\").withTelegram(\"georgeBest\")","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"22/12/1997\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"PGPR\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"donwong2308"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84812424\")","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"stefan@example.com\").withRoomNumber(\"wk-02-32A 2023-10-21\").withTelegram(\"hoonMeier\")","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"06/01/1992\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"UTR\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"donwong2308"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821311\")","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(\"hans@example.com\").withRoomNumber(\"kl-01-32D 2023-10-21\").withTelegram(\"idaMueller\")","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(\"09/09/1998\").withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(\"PGPR\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(VALID_EMAIL_AMY).withRoomNumber(VALID_ROOMNUMBER_AMY_W_DATE).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(VALID_BIRTHDAY_AMY).withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(VALID_DORM_TAG_AMY).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"nyankoclaws"},"content":"            .withEmail(VALID_EMAIL_BOB).withRoomNumber(VALID_ROOMNUMBER_BOB_W_DATE).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"PallonCX"},"content":"            .withBirthday(VALID_BIRTHDAY_BOB).withFreeTimeTags(\"Mon:1000-1400\")","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"PallonCX"},"content":"            .withDormTag(VALID_DORM_TAG_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"donwong2308":9,"PallonCX":23,"larainezo":1,"nyankoclaws":19,"-":48}}]
