[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"# InternHub","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F14-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-F14-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"## Overview","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"InternHub is a comprehensive project designed to assist Computer Science (CS) students in managing their internship applications. This project serves various purposes:","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"- It can be utilized as a starting point for a course project, offering students a foundation rather than building everything from scratch.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"- It serves as a case study for understanding the development of a desktop application in an Object-Oriented Programming (OOP) fashion.","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"- The project provides a well-written code base, surpassing the typical size of beginner-level SE modules (around 6 KLoC) without becoming overwhelming.","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"- Extensive user and developer documentation is included to facilitate understanding and usage.","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"## Project Details","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"- **Name:** InternHub","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"- **Type:** Desktop Application","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"- **Initiative:** Part of the se-education.org initiative","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"- **Documentation:** [InternHub Product Website](https://ay2324s2-cs2103t-f14-1.github.io/tp/index.html)","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"## Features","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"InternHub is specifically tailored for CS students, offering the following features:","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"- Organization and optimization of internship application details.","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"- Seamless management of contacts, interview dates, internship duration, salary and job description.","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"- Editable fields to meet sudden changes in attributes.","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"- Tagging system to categorize and track the stages of each interview process.","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"- Filtering and sorting capabilities for efficient access to relevant information.","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"## Getting Started","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"For detailed information on using InternHub, refer to our [User Guide](https://ay2324s2-cs2103t-f14-1.github.io/tp/UserGuide.html).","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"## Contributing","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"eunrcn":34,"ashleygoh1":2,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"mainClassName \u003d \u0027seedu.internhub.Main\u0027","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"run {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"ashleygoh1"},"content":"    archiveFileName \u003d \u0027internhub.jar\u0027","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ashleygoh1":6,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"### Ashley Goh","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"\u003cimg src\u003d\"images/ashleygoh1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"[[github](http://github.com/ashleygoh1)]","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"[[portfolio](team/ashley.md)]","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"* Role: Developer","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"* Responsibilities: Model","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"### Chai Ming How","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"\u003cimg src\u003d\"images/minghowc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"[[github](http://github.com/minghowC)]","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"[[portfolio](team/minghow.md)]","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"* Role: Developer","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"minghowC"},"content":"* Responsibilities: Features Testing","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"### Chen Yixin","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"\u003cimg src\u003d\"images/chenyixin0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"[[github](http://github.com/chenyixin0)]","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"[[portfolio](team/yixin.md)]","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"### Eunice Koh","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"\u003cimg src\u003d\"images/eunrcn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"[[github](http://github.com/eunrcn)]","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"[[portfolio](team/eunice.md)]","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"* Responsibilities: Model","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"### Jawad Afthab","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"\u003cimg src\u003d\"images/jawad280.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"[[github](http://github.com/Jawad280)]","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"[[portfolio](team/jawad.md)]","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"eunrcn":2,"minghowC":1,"Jawad280":3,"ashleygoh1":20,"-":36}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"# InternHub Developer Guide","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"ashleygoh1"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package. The three over-arching sub-packages are `core`, `exceptions`, and `util`.","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"ashleygoh1"},"content":"`core`: This package defines classes for user configuration, GUI settings, and even a version number.","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"ashleygoh1"},"content":"`exceptions`: This package defines exceptions thrown by InternHub when it encounters an error state.","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"ashleygoh1"},"content":"`util`: This package defines utility classes for certain operations, like file I/O, argument validation, and image processing.","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"ashleygoh1"},"content":"### Add Command","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"ashleygoh1"},"content":"#### Implementation","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"ashleygoh1"},"content":"This command adds an internship application into the InternHub using the company name, phone number, email, address, tag, job description, interview date, intern duration, salary and note.","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"ashleygoh1"},"content":"The following steps show how the add internship application feature works:","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"ashleygoh1"},"content":"The `add` command entered by the user is parsed and the different fields are tokenized.","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"ashleygoh1"},"content":"`AddCommand#execute(Model model)` is invoked which checks for validity of the entered parameter values.","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"ashleygoh1"},"content":"The command is then executed by creating a new Person object using the parameter values entered and adding the Person object into the InternHub.","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"ashleygoh1"},"content":"If successful, a `CommandResult` object is created to show a success message in the feedback box of the ui.","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"ashleygoh1"},"content":"The diagram below shows the class diagram for AddCommand.","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"ashleygoh1"},"content":"\u003cpuml src\u003d\"diagrams/AddCommandClassDiagram.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"ashleygoh1"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"ashleygoh1"},"content":"Alternative 1 (current choice): Creates a new Person object in AddCommandParser.","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"ashleygoh1"},"content":"Pros: Simpler to test and understand.","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"ashleygoh1"},"content":"Cons: Command object should not know details about model i.e. Person.","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"ashleygoh1"},"content":"Alternative 2: New Person object is created and added to InternHub in model.","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"ashleygoh1"},"content":"Pros: Command has no knowledge of Model and its attributes.","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"ashleygoh1"},"content":"Cons: More prone to error.","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"ashleygoh1"},"content":"The Diagram below shows the sequence diagram for AddCommand. All Initialization commands above are similar in their interactions with the [logic component](###logic-component) and [model component](###model-component).","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"ashleygoh1"},"content":"\u003cpuml src\u003d\"diagrams/AddSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"eunrcn"},"content":"### Edit Command","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"eunrcn"},"content":"#### Implementation","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"eunrcn"},"content":"The `EditCommand` allows users to modify the details of an existing person in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"eunrcn"},"content":"### Command Structure","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"eunrcn"},"content":"- **Command Word**: `edit`","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"eunrcn"},"content":"- **Parameters**:","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"eunrcn"},"content":"- `INDEX`: Positive integer representing the index of the person in the displayed list.","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"eunrcn"},"content":"- `[NAME]`, `[PHONE]`, `[EMAIL]`, `[ADDRESS]`, `[JOB DESCRIPTION]`, `[INTERVIEW DATE]`, `[INTERN DURATION]`, `[SALARY]`, `[TAG]`: Optional parameters to specify the new values for corresponding fields. Existing values will be overwritten.","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"eunrcn"},"content":"### Execution Steps","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"eunrcn"},"content":"1. Parsing:","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"eunrcn"},"content":"- The input arguments are parsed to extract the index and the new values for the person\u0027s details.","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"eunrcn"},"content":"2. Validation:","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"eunrcn"},"content":"- The validity of the index and the absence of duplicate prefixes are verified.","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"eunrcn"},"content":"3. Creation of Edit Descriptor:","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"eunrcn"},"content":"- An `EditPersonDescriptor` object is created to store the edited details.","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"eunrcn"},"content":"4. Field Editing:","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"eunrcn"},"content":"- Each provided field is set in the `EditPersonDescriptor`.","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"eunrcn"},"content":"5. Execution:","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"eunrcn"},"content":"- The `EditCommand` is executed, modifying the specified person\u0027s details in the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"eunrcn"},"content":"6. Feedback:","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"eunrcn"},"content":"- A success message is generated to confirm the editing operation.","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"eunrcn"},"content":"## Design Considerations","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"eunrcn"},"content":"- **Overwriting vs. Appending**: The command allows overwriting existing details with new ones. This simplifies the implementation and usage of the command.","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"eunrcn"},"content":"- **Error Handling**: The command ensures that at least one field is edited and provides appropriate error messages for invalid inputs.","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"eunrcn"},"content":"\u003cpuml src\u003d\"diagrams/EditCommandClassDiagram.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"eunrcn"},"content":"### Implementation","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"eunrcn"},"content":"Suppose we have a person with the following details:","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"eunrcn"},"content":"- Name: John Doe","lastModifiedDate":"2024-03-31"},{"lineNumber":234,"author":{"gitId":"eunrcn"},"content":"- Phone: 12345678","lastModifiedDate":"2024-03-31"},{"lineNumber":235,"author":{"gitId":"eunrcn"},"content":"- Email: johndoe@example.com","lastModifiedDate":"2024-03-31"},{"lineNumber":236,"author":{"gitId":"eunrcn"},"content":"- Address: Block 123, Avenue Street, #08-123","lastModifiedDate":"2024-03-31"},{"lineNumber":237,"author":{"gitId":"eunrcn"},"content":"- Job Description: Software Engineer","lastModifiedDate":"2024-03-31"},{"lineNumber":238,"author":{"gitId":"eunrcn"},"content":"- Interview Date: 2024-04-15","lastModifiedDate":"2024-03-31"},{"lineNumber":239,"author":{"gitId":"eunrcn"},"content":"- Intern Duration: 3 months","lastModifiedDate":"2024-03-31"},{"lineNumber":240,"author":{"gitId":"eunrcn"},"content":"- Salary: $3000","lastModifiedDate":"2024-03-31"},{"lineNumber":241,"author":{"gitId":"eunrcn"},"content":"- Tags: #java, #software","lastModifiedDate":"2024-03-31"},{"lineNumber":242,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":243,"author":{"gitId":"eunrcn"},"content":"Now, the user wants to edit John Doe\u0027s phone number and address. They issue the following command:","lastModifiedDate":"2024-03-31"},{"lineNumber":244,"author":{"gitId":"eunrcn"},"content":"edit 1 p/87654321 a/Block 456, New Avenue, #05-678","lastModifiedDate":"2024-03-31"},{"lineNumber":245,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":246,"author":{"gitId":"eunrcn"},"content":"The `EditCommand` will update John Doe\u0027s phone number to `87654321` and address to `Block 456, New Avenue, #05-678`. ","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"eunrcn"},"content":"Upon successful execution, a message will be displayed confirming the changes made to John Doe\u0027s details.","lastModifiedDate":"2024-03-31"},{"lineNumber":248,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":249,"author":{"gitId":"eunrcn"},"content":"\u003cpuml src\u003d\"diagrams/EditSequenceDiagram.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":250,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":251,"author":{"gitId":"Jawad280"},"content":"### Note Command","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"Jawad280"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"Jawad280"},"content":"The Note Command feature allows users to retrieve the note attribute of a contact based on its index and reflects it in the Command Box as an edit command, enabling users to make changes to the note seamlessly.","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"Jawad280"},"content":"The following steps outline how the Note Command feature operates:","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"Jawad280"},"content":"1. Command Parsing","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"Jawad280"},"content":"    - When a user inputs the `note` command followed by an `index`, the `NoteCommandParser` is invoked to parse this input","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"Jawad280"},"content":"    - The index provided is extracted from the input string","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"Jawad280"},"content":"2. Execution","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"Jawad280"},"content":"    - Upon parsing, the `NoteCommand` is instantiated with the parsed index.","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"Jawad280"},"content":"    - The `NoteCommand#execute(Model model)` is then called, passing the current application model","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"Jawad280"},"content":"3. Index validation","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"Jawad280"},"content":"    - Within the `execute` method, the validity of the index entered is checked. This involves ensuring the index falls within the current range of the contact list","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"Jawad280"},"content":"    - If index is invalid, a `CommandException` is thrown with an error message","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"Jawad280"},"content":"4. Note Retrieval","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"Jawad280"},"content":"    - Assuming the index is valid, the `NoteCommand` retrieves the **filtered list of contacts** (`List\u003cPerson\u003e`) from the model","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"Jawad280"},"content":"    - The note content of the contact corresponding to the provided index is then fetched.","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"Jawad280"},"content":"5. Command Result","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"Jawad280"},"content":"    - Upon retrieving the note content, the `NoteCommand` constructs a new `CommandResult` with the following params :","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"Jawad280"},"content":"        - **feedbackToUser** : `edit [INDEX of Contact] n/{existing note}`","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"Jawad280"},"content":"        - **personToView** : `Current company contact`","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"Jawad280"},"content":"6. Reflecting the feedback on Command Box","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"Jawad280"},"content":"    - In `CommandBox#handleCommandEntered()`, if the `feedbackToUser` of the CommandResult object starts with `edit ` (ie our note Command Result), we set the text of the command box to be the `feedbackToUser`","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"Jawad280"},"content":"\u003cpuml src\u003d\"diagrams/NoteCommandClassDiagram.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"Jawad280"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"Jawad280"},"content":"**Alternative 1 : Use edit to make changes to note attribute**","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"Jawad280"},"content":"- Pros:","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"Jawad280"},"content":"    - Easier implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"Jawad280"},"content":"    - No need for new command to be created","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"Jawad280"},"content":"- Cons:","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"Jawad280"},"content":"    - Edit will **OVERWRITE** old data","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"Jawad280"},"content":"**Alternative 2 (Current Implementation) : Create `note` command**","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"Jawad280"},"content":"- Pros:","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"Jawad280"},"content":"    - Allows for editing and updating existing note content","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"Jawad280"},"content":"    - Will not overwrite old data","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"Jawad280"},"content":"- Cons:","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"Jawad280"},"content":"    - An additional command has to be implemented","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"Jawad280"},"content":"    - Essentially an abstracted \u0026 glorified edit feature","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"Jawad280"},"content":"\u003cpuml src\u003d\"diagrams/NoteSequenceDiagram.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":334,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":353,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":359,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":375,"author":{"gitId":"Jawad280"},"content":"### Design considerations:","lastModifiedDate":"2024-03-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"ashleygoh1"},"content":"* CS students","lastModifiedDate":"2024-03-02"},{"lineNumber":414,"author":{"gitId":"ashleygoh1"},"content":"* has a need to keep track of contacts of companies and interview dates during thier internship hunt","lastModifiedDate":"2024-03-02"},{"lineNumber":415,"author":{"gitId":"ashleygoh1"},"content":"* prefer a one-stop, centralised dashboard to manage all contact details of companies","lastModifiedDate":"2024-03-02"},{"lineNumber":416,"author":{"gitId":"ashleygoh1"},"content":"* is reasonably comfortable in using a more CLI based app","lastModifiedDate":"2024-03-02"},{"lineNumber":417,"author":{"gitId":"ashleygoh1"},"content":"* wants to be better organized","lastModifiedDate":"2024-03-02"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"ashleygoh1"},"content":"**Value proposition**: Ultimate companion for Computer Science (CS) students embarking on their internship journey !","lastModifiedDate":"2024-03-02"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":426,"author":{"gitId":"eunrcn"},"content":"| Priority | As an …​             | I want to …​                                            | So that I can…​                                                                                   |","lastModifiedDate":"2024-03-01"},{"lineNumber":427,"author":{"gitId":"Jawad280"},"content":"|----------|----------------------|---------------------------------------------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-01"},{"lineNumber":428,"author":{"gitId":"Jawad280"},"content":"| `* * *`  | internship applicant | add contact information of internship companies         | easily access their details when needed                                                           |","lastModifiedDate":"2024-03-01"},{"lineNumber":429,"author":{"gitId":"Jawad280"},"content":"| `* * *`  | internship applicant | delete contact information of internship companies      | easily remove any old or irrelevant company contacts                                              |","lastModifiedDate":"2024-03-01"},{"lineNumber":430,"author":{"gitId":"Jawad280"},"content":"| `* * *`  | internship applicant | edit contact information of internship companies        | easily update any details on the go                                                               |","lastModifiedDate":"2024-03-01"},{"lineNumber":431,"author":{"gitId":"Jawad280"},"content":"| `* * *`  | internship applicant | see usage instructions                                  | refer to instructions when I forget how to use the AddressBook                                    |","lastModifiedDate":"2024-03-01"},{"lineNumber":432,"author":{"gitId":"Jawad280"},"content":"| `* * *`  | internship applicant | find the contact information of a certain company       | easily search which company contact I want by name                                                |","lastModifiedDate":"2024-03-01"},{"lineNumber":433,"author":{"gitId":"Jawad280"},"content":"| `* * *`  | internship applicant | keep track of the status of each internship application | categorize and easily follow up accordingly                                                       |","lastModifiedDate":"2024-03-01"},{"lineNumber":434,"author":{"gitId":"Jawad280"},"content":"| `* * *`  | internship applicant | sort company contacts by dates                          | prioritize and plan for upcoming interviews                                                       |","lastModifiedDate":"2024-03-01"},{"lineNumber":435,"author":{"gitId":"Jawad280"},"content":"| `* * `   | internship applicant | filter company contacts by date                         | quickly access contacts associated with a specific date                                           |","lastModifiedDate":"2024-03-01"},{"lineNumber":436,"author":{"gitId":"Jawad280"},"content":"| `* * `   | internship applicant | filter company contacts by tag                          | easily find and manage contacts within specific categories                                        |","lastModifiedDate":"2024-03-01"},{"lineNumber":437,"author":{"gitId":"Jawad280"},"content":"| `* * `   | internship applicant | add a time to a company contact                         | record when a specific task or interaction needs to be done                                       |","lastModifiedDate":"2024-03-01"},{"lineNumber":438,"author":{"gitId":"Jawad280"},"content":"| `* `     | internship applicant | add notes to company contacts                           | include important details or information about specific interviews and what I can learn from them |","lastModifiedDate":"2024-03-01"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"Jawad280"},"content":"**Use Case: Input Company Contact Information**","lastModifiedDate":"2024-03-01"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"Jawad280"},"content":"**Actor:** Internship Applicant","lastModifiedDate":"2024-03-01"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"Jawad280"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2024-03-01"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"Jawad280"},"content":"1. Internship Applicant inputs contact information of internship company.","lastModifiedDate":"2024-03-01"},{"lineNumber":452,"author":{"gitId":"Jawad280"},"content":"2. System stores the contact information.","lastModifiedDate":"2024-03-01"},{"lineNumber":453,"author":{"gitId":"Jawad280"},"content":"3. Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"Jawad280"},"content":"**Extensions:**","lastModifiedDate":"2024-03-01"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"Jawad280"},"content":"* 1a. System detects an error in the entered data.","lastModifiedDate":"2024-03-01"},{"lineNumber":458,"author":{"gitId":"Jawad280"},"content":"    * 1a1. System requests for the correct data.","lastModifiedDate":"2024-03-01"},{"lineNumber":459,"author":{"gitId":"Jawad280"},"content":"    * 1a2. Internship Applicant enters new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":460,"author":{"gitId":"Jawad280"},"content":"    * Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2024-03-01"},{"lineNumber":461,"author":{"gitId":"Jawad280"},"content":"    * Use case resumes from step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"Jawad280"},"content":"* *a. At any time, Internship Applicant chooses to cancel the input.","lastModifiedDate":"2024-03-01"},{"lineNumber":464,"author":{"gitId":"Jawad280"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"Jawad280"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"Jawad280"},"content":"**Use Case: Delete Company Contact Information**","lastModifiedDate":"2024-03-01"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"Jawad280"},"content":"**Actor:** Internship Applicant","lastModifiedDate":"2024-03-01"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"Jawad280"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2024-03-01"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":474,"author":{"gitId":"Jawad280"},"content":"1. Internship Applicant inputs index of contact to be deleted.","lastModifiedDate":"2024-03-01"},{"lineNumber":475,"author":{"gitId":"Jawad280"},"content":"2. System deletes the relevant contact information.","lastModifiedDate":"2024-03-01"},{"lineNumber":476,"author":{"gitId":"Jawad280"},"content":"3. Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":478,"author":{"gitId":"Jawad280"},"content":"**Extensions:**","lastModifiedDate":"2024-03-01"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":480,"author":{"gitId":"Jawad280"},"content":"* 1a. System detects an error in index of contact","lastModifiedDate":"2024-03-01"},{"lineNumber":481,"author":{"gitId":"Jawad280"},"content":"    * 1a1. System requests for proper input of index (1 to current number of contacts)","lastModifiedDate":"2024-03-01"},{"lineNumber":482,"author":{"gitId":"Jawad280"},"content":"    * 1a2. Internship Applicant enters the correct index.","lastModifiedDate":"2024-03-01"},{"lineNumber":483,"author":{"gitId":"Jawad280"},"content":"    * Steps 1a1-1a2 are repeated until the selection is correct.","lastModifiedDate":"2024-03-01"},{"lineNumber":484,"author":{"gitId":"Jawad280"},"content":"    * Use case resumes from step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":486,"author":{"gitId":"Jawad280"},"content":"* *a. At any time, the Internship Applicant chooses to cancel to detect contact.","lastModifiedDate":"2024-03-01"},{"lineNumber":487,"author":{"gitId":"Jawad280"},"content":"    * *a1. System cancels deletion of contact.","lastModifiedDate":"2024-03-01"},{"lineNumber":488,"author":{"gitId":"Jawad280"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":489,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":490,"author":{"gitId":"Jawad280"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":491,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":492,"author":{"gitId":"Jawad280"},"content":"**Use Case: Edit Contacts Info**","lastModifiedDate":"2024-03-01"},{"lineNumber":493,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":494,"author":{"gitId":"Jawad280"},"content":"**Actor:** Internship Applicant","lastModifiedDate":"2024-03-01"},{"lineNumber":495,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":496,"author":{"gitId":"Jawad280"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2024-03-01"},{"lineNumber":497,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":498,"author":{"gitId":"Jawad280"},"content":"1. Internship Applicant chooses contact to edit by its index and enters relevant fields to be modified","lastModifiedDate":"2024-03-01"},{"lineNumber":499,"author":{"gitId":"Jawad280"},"content":"2. System modifies that corresponding field of that contact","lastModifiedDate":"2024-03-01"},{"lineNumber":500,"author":{"gitId":"Jawad280"},"content":"3. Use case ends","lastModifiedDate":"2024-03-01"},{"lineNumber":501,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":502,"author":{"gitId":"Jawad280"},"content":"**Extensions:**","lastModifiedDate":"2024-03-01"},{"lineNumber":503,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":504,"author":{"gitId":"Jawad280"},"content":"* 1a. System detects an error in index of contact","lastModifiedDate":"2024-03-01"},{"lineNumber":505,"author":{"gitId":"Jawad280"},"content":"    * 1a1. System requests for proper input of index (1 to current number of contacts)","lastModifiedDate":"2024-03-01"},{"lineNumber":506,"author":{"gitId":"Jawad280"},"content":"    * 1a2. Internship Applicant enters the correct index.","lastModifiedDate":"2024-03-01"},{"lineNumber":507,"author":{"gitId":"Jawad280"},"content":"    * Steps 1a1-1a2 are repeated until the selection is correct.","lastModifiedDate":"2024-03-01"},{"lineNumber":508,"author":{"gitId":"Jawad280"},"content":"    * Use case resumes from step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":509,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":510,"author":{"gitId":"Jawad280"},"content":"* 1a. System detects an error in the fields to be edited (No fields at all or incorrect field prefixes)","lastModifiedDate":"2024-03-01"},{"lineNumber":511,"author":{"gitId":"Jawad280"},"content":"    * 1a1. System requests for proper input of fields and correct prefix","lastModifiedDate":"2024-03-01"},{"lineNumber":512,"author":{"gitId":"Jawad280"},"content":"    * 1a2. Internship Applicant enters the fields to be edited.","lastModifiedDate":"2024-03-01"},{"lineNumber":513,"author":{"gitId":"Jawad280"},"content":"    * Steps 1a1-1a2 are repeated until the selection is correct.","lastModifiedDate":"2024-03-01"},{"lineNumber":514,"author":{"gitId":"Jawad280"},"content":"    * Use case resumes from step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":515,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":516,"author":{"gitId":"Jawad280"},"content":"* *a. At any time, the Internship Applicant chooses to cancel to edit contact.","lastModifiedDate":"2024-03-01"},{"lineNumber":517,"author":{"gitId":"Jawad280"},"content":"    * *a1. System cancels edit of contact.","lastModifiedDate":"2024-03-01"},{"lineNumber":518,"author":{"gitId":"Jawad280"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":519,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":520,"author":{"gitId":"Jawad280"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":521,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":522,"author":{"gitId":"Jawad280"},"content":"**Use Case: Filter Contacts by Tag**","lastModifiedDate":"2024-03-01"},{"lineNumber":523,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":524,"author":{"gitId":"Jawad280"},"content":"**Actor:** Internship Applicant","lastModifiedDate":"2024-03-01"},{"lineNumber":525,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":526,"author":{"gitId":"Jawad280"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2024-03-01"},{"lineNumber":527,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":528,"author":{"gitId":"Jawad280"},"content":"1. Internship Applicant chooses to filter contacts by tag.","lastModifiedDate":"2024-03-01"},{"lineNumber":529,"author":{"gitId":"Jawad280"},"content":"2. Internship Applicant inputs the tag.","lastModifiedDate":"2024-03-01"},{"lineNumber":530,"author":{"gitId":"Jawad280"},"content":"3. System filters the contacts associated with the selected tag.","lastModifiedDate":"2024-03-01"},{"lineNumber":531,"author":{"gitId":"Jawad280"},"content":"4. System displays the filtered contacts.","lastModifiedDate":"2024-03-01"},{"lineNumber":532,"author":{"gitId":"Jawad280"},"content":"5. Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":533,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":534,"author":{"gitId":"Jawad280"},"content":"**Extensions:**","lastModifiedDate":"2024-03-01"},{"lineNumber":535,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":536,"author":{"gitId":"Jawad280"},"content":"* 2a. System detects an error in tag to be filtered","lastModifiedDate":"2024-03-01"},{"lineNumber":537,"author":{"gitId":"Jawad280"},"content":"    * 2a1. System requests for proper input of tag (One of existing tags)","lastModifiedDate":"2024-03-01"},{"lineNumber":538,"author":{"gitId":"Jawad280"},"content":"    * 2a2. Internship Applicant enters the correct tag.","lastModifiedDate":"2024-03-01"},{"lineNumber":539,"author":{"gitId":"Jawad280"},"content":"    * Steps 2a1-2a2 are repeated until the selection is correct.","lastModifiedDate":"2024-03-01"},{"lineNumber":540,"author":{"gitId":"Jawad280"},"content":"    * Use case resumes from step 3.","lastModifiedDate":"2024-03-01"},{"lineNumber":541,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":542,"author":{"gitId":"Jawad280"},"content":"* *a. At any time, the Internship Applicant chooses to cancel the filtering.","lastModifiedDate":"2024-03-01"},{"lineNumber":543,"author":{"gitId":"Jawad280"},"content":"    * *a1. System cancels the filtering.","lastModifiedDate":"2024-03-01"},{"lineNumber":544,"author":{"gitId":"Jawad280"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":545,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":546,"author":{"gitId":"Jawad280"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":547,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":548,"author":{"gitId":"Jawad280"},"content":"**Use Case: View information of a contact**","lastModifiedDate":"2024-03-01"},{"lineNumber":549,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":550,"author":{"gitId":"Jawad280"},"content":"**Actor:** Internship Applicant","lastModifiedDate":"2024-03-01"},{"lineNumber":551,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":552,"author":{"gitId":"Jawad280"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2024-03-01"},{"lineNumber":553,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":554,"author":{"gitId":"Jawad280"},"content":"1. Internship Applicant chooses contact to be viewed on view panel.","lastModifiedDate":"2024-03-01"},{"lineNumber":555,"author":{"gitId":"Jawad280"},"content":"2. System requests for the specific contact index.","lastModifiedDate":"2024-03-01"},{"lineNumber":556,"author":{"gitId":"Jawad280"},"content":"3. Internship Applicant enters the contact index.","lastModifiedDate":"2024-03-01"},{"lineNumber":557,"author":{"gitId":"Jawad280"},"content":"4. System views the relevant contact on the view panel.","lastModifiedDate":"2024-03-01"},{"lineNumber":558,"author":{"gitId":"Jawad280"},"content":"5. Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":559,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":560,"author":{"gitId":"Jawad280"},"content":"**Extensions:**","lastModifiedDate":"2024-03-01"},{"lineNumber":561,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":562,"author":{"gitId":"Jawad280"},"content":"* 3a. IH detects an error in index of contact","lastModifiedDate":"2024-03-01"},{"lineNumber":563,"author":{"gitId":"Jawad280"},"content":"    * 3a1. System requests for proper input of index (1 to current number of contacts)","lastModifiedDate":"2024-03-01"},{"lineNumber":564,"author":{"gitId":"Jawad280"},"content":"    * 3a2. Internship Applicant enters the correct index.","lastModifiedDate":"2024-03-01"},{"lineNumber":565,"author":{"gitId":"Jawad280"},"content":"    * Steps 3a1-3a2 are repeated until the selection is correct.","lastModifiedDate":"2024-03-01"},{"lineNumber":566,"author":{"gitId":"Jawad280"},"content":"    * Use case resumes from step 3.","lastModifiedDate":"2024-03-01"},{"lineNumber":567,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":568,"author":{"gitId":"Jawad280"},"content":"* *a. At any time, Internship Applicant chooses to cancel to view contact.","lastModifiedDate":"2024-03-01"},{"lineNumber":569,"author":{"gitId":"Jawad280"},"content":"    * *a1. System cancels viewing of contact.","lastModifiedDate":"2024-03-01"},{"lineNumber":570,"author":{"gitId":"Jawad280"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"Jawad280"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":574,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":583,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":592,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":593,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"eunrcn"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2024-03-27"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"eunrcn"},"content":"2. Saving window preferences","lastModifiedDate":"2024-03-27"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"eunrcn"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":609,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"eunrcn"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2024-03-27"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"eunrcn"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"eunrcn"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":623,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"eunrcn"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":626,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"eunrcn"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2024-03-27"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"eunrcn"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"eunrcn":67,"Jawad280":172,"ashleygoh1":50,"-":347}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"   1. Run the `seedu.internhub.Main` and try a few commands.","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"ashleygoh1":1,"-":60}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Testing guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Testing guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"   e.g. `seedu.internhub.commons.StringUtilTest`","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"   e.g. `seedu.internhub.storage.StorageManagerTest`","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"   e.g. `seedu.internhub.logic.LogicManagerTest`","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ashleygoh1":3,"-":38}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"# Internhub User Guide","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"## Welcome !","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"Are you an undergraduate navigating the maze of internship opportunities?","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"Look no further! InternHub is here to revolutionize the way you manage your internship contacts.","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"This User Guide (UG) serves as a comprehensive resource to aid users in understanding and effectively utilizing the application.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"It provides detailed instructions on installation, usage, and navigation, ensuring users can maximize the benefits of Intern Hub for managing internship contacts.","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"## Who can use InternHub ?","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"InternHub is designed for undergraduates, professors, and career guidance officers seeking a streamlined approach to managing internship contacts.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"InternHub is crafted with the intention of being **user-friendly** for individuals with varying levels of computer experience.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"We trust that you\u0027ll find the interface intuitive and easy to navigate, whether you\u0027re a tech-savvy enthusiast or just starting to explore desktop applications.","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"We\u0027re here to support you every step of the way on your internship management journey!","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"For users who are **new to InternHub**, click [here](#introduction-to-the-user-guide) for a helpful starting point !","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"Experienced users can jump straight to exploring our [features](#features) !","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"## Introduction to the User Guide","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"Our team at InternHub have carefully designed this user guide to be your one-stop solution for everything related to InternHub !","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"### Icons used","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"| Icons   | Representation                                |","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"|---------|-----------------------------------------------|","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"| Note    | Additional useful information                 |","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"| Caution | Provides warnings on some potential errors    |","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"| Tip     | Nifty tricks to make your experience smoother |","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"1. Check Java Version \u0026 Install Java","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"    - For this application, your system is required to have Java 11 installed","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"    - To check if you have Java installed, open your command prompt or terminal and type : `java -version`","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"      - If Java is installed, you will see the version number in the output :","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"      - \u003cimg src\u003d\"images/quickstart/java-installation.png\" \u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    - If Java is not installed or your version does not match as the output above :","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"      - Visit the Official [Oracle website](https://www.oracle.com/java/technologies/downloads/#java11) to download jdk-11 \u0026 follow the download instructions","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"      - For **mac** users, download the jdk-11 from [here](https://www.azul.com/downloads/?version\u003djava-11-lts\u0026os\u003dmacos\u0026architecture\u003darm-64-bit\u0026package\u003djdk-fx#zulu)","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"2. Download the latest `internhub.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your InternHub.","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"    - The home folder will serve as InternHub\u0027s central location","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"    - This folder is where InternHub will keep all its important files and saved data","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"4. Once you have set up the _home folder_, right-click on the _home folder_ and click copy to copy the path to this directory.","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"5. Open up a new terminal or command prompt window","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"6. Type `cd ` and paste the _home folder_ path, your command should look something like this : `cd /Users/john/home folder`, then hit enter.","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"7. Now in the same command prompt or terminal window, enter the `java -jar internhub.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"8. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"ashleygoh1"},"content":"   * `add c/Food Panda p/12345678 e/panda@food.com a/CBD t/F jd/Front End Intern d/15-04-2024 0900 id/6 months s/500","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"     ` : Adds a contact named `Food Panda` to the Address Book.","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"9. Refer to the [Features](#features) for details of each command.","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Jawad280"},"content":"## Getting familiar with the UI of InternHub","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Jawad280"},"content":"_Add Latest UI with labels to mark the CommandBox, ResultBox, List of Contacts, View Panel_","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Jawad280"},"content":"- **Command Box** ","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"  - This is where you enter the commands !","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Jawad280"},"content":"- **Result Display** ","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Jawad280"},"content":"  - The output message after each command is displayed here","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Jawad280"},"content":"- **List of Contacts** ","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"  - The panel displays list of all internship company contacts","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"- **View Panel** ","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"  - The panel displays the internship company contact card","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"ashleygoh1"},"content":"  e.g. in `add c/COMPANY_NAME`, `COMPANY_NAME` is a parameter which can be used as `add c/Food Panda`.","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"ashleygoh1"},"content":"  e.g `c/COMPANY_NAME [a/ADDRESS]` can be used as `c/Food Panda a/CBD` or as `c/Food Panda`.","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"ashleygoh1"},"content":"  e.g. if the command specifies `add c/COMPANY_NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER add c/COMPANY_NAME` is also acceptable.","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Jawad280"},"content":"### Adding a contact: `add`","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"eunrcn"},"content":"To add a internship contact to your address book, follow these simple steps:","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"eunrcn"},"content":"1. Type `add` followed by the details of the contact you want to add.","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"Jawad280"},"content":"2. Use `c/` for the company name, `p/` for the phone number, `e/` for the email, `a/` for the address, `t/` for tags, `jd/` for job description, `d/` for interview date, `id/` for intern duration, `s/` for salary and `n/` for note.","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"Jawad280"},"content":"Format: `add c/COMPANY_NAME p/PHONE_NUMBER e/EMAIL a/[ADDRESS] t/TAG jd/JOB_DESCRIPTION d/[INTERVIEW_DATE] id/INTERN_DURATION s/salary n/[NOTE]`","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"eunrcn"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e heheh","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"ashleygoh1"},"content":"* `add c/FoodPanda p/12345678 e/panda@food.com a/CBD t/F jd/Front End Intern d/15-04-2024 0900 id/6 months s/500`","lastModifiedDate":"2024-02-27"},{"lineNumber":147,"author":{"gitId":"ashleygoh1"},"content":"* `add c/Shoppa p/99912345 e/panda@food.com t/F jd/Software Developer Intern  id/6 months s/500`","lastModifiedDate":"2024-02-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Jawad280"},"content":"### Listing all contacts : `list`","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Jawad280"},"content":"Shows a list of all contacts in the address book sorted in ascending order of interview dates. If a company contact does not have any interview dates yet, it will be pushed to the end of the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"Jawad280"},"content":"### Viewing a contact : `view`","lastModifiedDate":"2024-03-02"},{"lineNumber":156,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":157,"author":{"gitId":"Jawad280"},"content":"Views the details of the contact on the view panel in address book.","lastModifiedDate":"2024-03-02"},{"lineNumber":158,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":159,"author":{"gitId":"Jawad280"},"content":"Format: `View INDEX`","lastModifiedDate":"2024-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":161,"author":{"gitId":"Jawad280"},"content":"* Views the contact at the specified `INDEX`. The index refers to the index number shown in the displayed contact list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":163,"author":{"gitId":"Jawad280"},"content":"Example:","lastModifiedDate":"2024-03-02"},{"lineNumber":164,"author":{"gitId":"Jawad280"},"content":"*  `view 3` Displays the company card of the 3rd contact in the list on the view panel.","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"Jawad280"},"content":"* **INSERT PICTURE OF view 3 WITH LABEL !**","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":167,"author":{"gitId":"Jawad280"},"content":"### Editing a contact : `edit`","lastModifiedDate":"2024-03-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"Jawad280"},"content":"Edits an existing contact detail in the address book.","lastModifiedDate":"2024-03-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"eunrcn"},"content":"Format: `Edit INDEX c/[COMPANY_NAME] p/[PHONE_NUMBER] e/[EMAIL] a/[ADDRESS] t/[TAG] jd/[JOB_DESCRIPTION] d/[INTERVIEW_DATE] id/[INTERN_DURATION] s/[SALARY]`","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"Jawad280"},"content":"* Edits the contact at the specified `INDEX`. The index refers to the index number shown in the displayed contact list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Jawad280"},"content":"* For `[INTERVIEW_DATE]`, if you want to remove a date, just enter `d/` and it will remove that field.","lastModifiedDate":"2024-03-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"Jawad280"},"content":"*  `edit 1 p/91234567 e/foodpanda@example.com` Edits the phone number and email address of the 1st contact to be `91234567` and `foodpanda@example.com` respectively.","lastModifiedDate":"2024-03-01"},{"lineNumber":180,"author":{"gitId":"Jawad280"},"content":"*  `edit 2 c/shopee` Edits the company name of the 2nd contact to be `shopee`.","lastModifiedDate":"2024-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"Jawad280"},"content":"### Locating contacts by name: `find`","lastModifiedDate":"2024-03-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Jawad280"},"content":"Finds contacts whose names contain any of the given keywords.","lastModifiedDate":"2024-03-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"chenyixin0"},"content":"* The search is case-insensitive. e.g `shoppa` will match `Shoppa`","lastModifiedDate":"2024-02-29"},{"lineNumber":189,"author":{"gitId":"chenyixin0"},"content":"* The order of the keywords does not matter. e.g. `Food Panda` will match `Panda Food`","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"chenyixin0"},"content":"* Only full words will be matched e.g. `Shopp` will not match `Shoppa`","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"Jawad280"},"content":"* Contacts matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-01"},{"lineNumber":193,"author":{"gitId":"Jawad280"},"content":"  e.g. `Happy Burger` will return `Happy Meal`, `Burger Queen`","lastModifiedDate":"2024-03-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"Jawad280"},"content":"* `find Happy` returns `happy` and `Happy Burger`","lastModifiedDate":"2024-03-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"Jawad280"},"content":"### Deleting a contact : `delete`","lastModifiedDate":"2024-03-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"Jawad280"},"content":"Deletes the specified contact from the address book.","lastModifiedDate":"2024-03-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Jawad280"},"content":"* Deletes the contact at the specified `INDEX`.","lastModifiedDate":"2024-03-01"},{"lineNumber":207,"author":{"gitId":"Jawad280"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2024-03-01"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"Jawad280"},"content":"* `list` followed by `delete 2` deletes the 2nd contact in the address book.","lastModifiedDate":"2024-03-01"},{"lineNumber":212,"author":{"gitId":"Jawad280"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st contact in the results of the `find` command.","lastModifiedDate":"2024-03-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12"},{"lineNumber":239,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":242,"author":{"gitId":"eunrcn"},"content":"### Finding the data : `find`","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"eunrcn"},"content":"To find specific data entries, use the `find` command followed by keywords related to the data you\u0027re looking for. This command will help you quickly locate the information you need within your address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"eunrcn"},"content":"Format: `find Grab`","lastModifiedDate":"2024-03-27"},{"lineNumber":247,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":248,"author":{"gitId":"Jawad280"},"content":"### Adding a Note : `note`","lastModifiedDate":"2024-03-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"Jawad280"},"content":"This command will allow you to add \u0026 edit notes to an internship company contact. There are 2 ways to execute this command based on your use\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"Jawad280"},"content":"Format: `note INDEX`","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"Jawad280"},"content":"1. Adding a note when **creating a new company contact**","lastModifiedDate":"2024-03-27"},{"lineNumber":255,"author":{"gitId":"Jawad280"},"content":"    - Simply include the note you want in the **add** command using the syntax `n/[NOTE]`","lastModifiedDate":"2024-03-27"},{"lineNumber":256,"author":{"gitId":"Jawad280"},"content":"    - `add c/FoodPanda ...other attributes... n/This is a note`","lastModifiedDate":"2024-03-27"},{"lineNumber":257,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":258,"author":{"gitId":"Jawad280"},"content":"2. Updating a note of an **existing company contact**","lastModifiedDate":"2024-03-27"},{"lineNumber":259,"author":{"gitId":"Jawad280"},"content":"    - Suppose you want to edit the note of company contact at index **2**","lastModifiedDate":"2024-03-27"},{"lineNumber":260,"author":{"gitId":"Jawad280"},"content":"    - Use the `note 2` and when you hit enter, it will retrieve the note content of the company contact at index 2 in the command box **as an edit command** :","lastModifiedDate":"2024-03-27"},{"lineNumber":261,"author":{"gitId":"Jawad280"},"content":"      - `edit 2 n/[note that exists currently in the company contact at index 2]`","lastModifiedDate":"2024-03-27"},{"lineNumber":262,"author":{"gitId":"Jawad280"},"content":"    - Simply update the note content and hit enter again, now the company contact will reflect the latest note","lastModifiedDate":"2024-03-27"},{"lineNumber":263,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":264,"author":{"gitId":"Jawad280"},"content":"To delete a note, simply use `edit INDEX n/`","lastModifiedDate":"2024-03-27"},{"lineNumber":265,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":266,"author":{"gitId":"Jawad280"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":267,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":268,"author":{"gitId":"Jawad280"},"content":"**Caution:**","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"Jawad280"},"content":"If you use `edit INDEX n/your updates for the new note`, this **WILL OVERWRITE** the old note of the company contact at `INDEX`\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":270,"author":{"gitId":"Jawad280"},"content":"For these kinds of scenarios, make use of the `note INDEX` function !","lastModifiedDate":"2024-03-27"},{"lineNumber":271,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"Jawad280"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":273,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":274,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":275,"author":{"gitId":"eunrcn"},"content":"### Filtering the data (by tags) : `filter`","lastModifiedDate":"2024-03-27"},{"lineNumber":276,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":277,"author":{"gitId":"eunrcn"},"content":"Filtering data allows you to narrow down your search results to focus on specific criteria. Use the `filter t/` command to filter by tag and find exactly the internships that have an interview.","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":280,"author":{"gitId":"eunrcn"},"content":"Format: `filter t/ I`","lastModifiedDate":"2024-03-27"},{"lineNumber":281,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":282,"author":{"gitId":"eunrcn"},"content":"### Sending reminders : `reminder`","lastModifiedDate":"2024-03-27"},{"lineNumber":283,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":284,"author":{"gitId":"eunrcn"},"content":"Sending reminders is a great way to stay organized and on top of important tasks. While our application currently doesn\u0027t have a built-in reminder feature, you can manually retrieve reminders using this command. It will show the interviews you have within the next 3 days.","lastModifiedDate":"2024-03-27"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"eunrcn"},"content":"Format: `reminder`","lastModifiedDate":"2024-03-27"},{"lineNumber":287,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":288,"author":{"gitId":"eunrcn"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-27"},{"lineNumber":289,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"chenyixin0"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InternHub home folder.","lastModifiedDate":"2024-02-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"eunrcn"},"content":"**Q**: How do I check my Java version?\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":295,"author":{"gitId":"eunrcn"},"content":"**A**: You can check your Java version by opening a command terminal and typing `java -version`.","lastModifiedDate":"2024-03-27"},{"lineNumber":296,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":297,"author":{"gitId":"eunrcn"},"content":"**Q**: How do I download Java 11?\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":298,"author":{"gitId":"eunrcn"},"content":"**A**: You can download Java 11 from the official Oracle website or adoptopenjdk.net. Choose the appropriate installer for your operating system and follow the installation instructions provided.","lastModifiedDate":"2024-03-27"},{"lineNumber":299,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":300,"author":{"gitId":"eunrcn"},"content":"**Q**: What is a home folder?\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":301,"author":{"gitId":"eunrcn"},"content":"**A**: The home folder is the main directory associated with a user account on a computer. It typically contains user-specific settings, documents, downloads, and other personal files.","lastModifiedDate":"2024-03-27"},{"lineNumber":302,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":303,"author":{"gitId":"eunrcn"},"content":"**Q**: Does the user know how to open the command terminal/how to change directory (cd) into a folder?\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":304,"author":{"gitId":"eunrcn"},"content":"**A**: Users should refer to the documentation or help resources specific to their operating system for instructions on opening a command terminal and navigating to a directory using the `cd` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":305,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":306,"author":{"gitId":"eunrcn"},"content":"**Q**: How do I run addressbook.jar?\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":307,"author":{"gitId":"eunrcn"},"content":"**A**: You can run addressbook.jar by opening a command terminal, navigating to the directory containing the jar file using the `cd` command, and then typing `java -jar addressbook.jar` and pressing Enter.","lastModifiedDate":"2024-03-27"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":309,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"Jawad280"},"content":"| Action       | Format, Examples                                                                                                                                                                                                                                           |","lastModifiedDate":"2024-03-01"},{"lineNumber":320,"author":{"gitId":"eunrcn"},"content":"|--------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-27"},{"lineNumber":321,"author":{"gitId":"Jawad280"},"content":"| **Add**      | `add c/COMPANY_NAME p/PHONE_NUMBER e/EMAIL a/[ADDRESS] t/TAG jd/JOB_DESCRIPTION d/[INTERVIEW_DATE] id/INTERN_DURATION s/salary` \u003cbr\u003e e.g., `add c/FoodPanda p/12345678 e/panda@food.com a/CBD t/F jd/Front End Intern d/15-04-2024 0900 id/6 months s/500` |","lastModifiedDate":"2024-03-01"},{"lineNumber":322,"author":{"gitId":"Jawad280"},"content":"| **Clear**    | `clear`                                                                                                                                                                                                                                                    |","lastModifiedDate":"2024-03-01"},{"lineNumber":323,"author":{"gitId":"Jawad280"},"content":"| **Delete**   | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                                        |","lastModifiedDate":"2024-03-01"},{"lineNumber":324,"author":{"gitId":"Jawad280"},"content":"| **Edit**     | `Edit INDEX c/[COMPANY_NAME] p/[PHONE_NUMBER] e/[EMAIL] a/[ADDRESS] t/[TAG] jd/[JOB_DESCRIPTION] d/[INTERVIEW_DATE] id/[INTERN_DURATION] s/[salary]`\u003cbr\u003e e.g.,`Edit 2 p/9998765`                                                                           |","lastModifiedDate":"2024-03-01"},{"lineNumber":325,"author":{"gitId":"Jawad280"},"content":"| **Find**     | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find foodpanda`                                                                                                                                                                                                  |","lastModifiedDate":"2024-03-01"},{"lineNumber":326,"author":{"gitId":"Jawad280"},"content":"| **Note**     | `note INDEX`                                                                                                                                                                                                                                               |","lastModifiedDate":"2024-03-27"},{"lineNumber":327,"author":{"gitId":"Jawad280"},"content":"| **List**     | `list`                                                                                                                                                                                                                                                     |","lastModifiedDate":"2024-03-01"},{"lineNumber":328,"author":{"gitId":"Jawad280"},"content":"| **View**     | `view INDEX`\u003cbr\u003e e.g., `view 3`                                                                                                                                                                                                                            |","lastModifiedDate":"2024-03-02"},{"lineNumber":329,"author":{"gitId":"Jawad280"},"content":"| **Help**     | `help`                                                                                                                                                                                                                                                     |","lastModifiedDate":"2024-03-01"},{"lineNumber":330,"author":{"gitId":"eunrcn"},"content":"| **Find**     | `find STRING`\u003cbr\u003e e.g., `find Grab`                                                                                                                                                                                                                        |","lastModifiedDate":"2024-03-27"},{"lineNumber":331,"author":{"gitId":"eunrcn"},"content":"| **Filter**   | `filter t/ I`                                                                                                                                                                                                                                              |","lastModifiedDate":"2024-03-27"},{"lineNumber":332,"author":{"gitId":"eunrcn"},"content":"| **Reminder** | `reminder`                                                                                                                                                                                                                                                 |","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"eunrcn":40,"chenyixin0":4,"Jawad280":129,"ashleygoh1":7,"-":152}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eInternHub\u003c/a\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ashleygoh1":1,"-":66}},{"path":"docs/diagrams/AddCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"hide empty attributes","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"hide empty methods","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"hide circle","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"skinparam shadowing false","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"skinparam classFontStyle Bold","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"skinparam ActivityBackgroundColor Silver","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"skinparam ActivityBorderColor DimGray","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"skinparam class {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"    BackgroundColor Cornsilk","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"    ArrowColor DimGray","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"    BorderThickness 1","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"    BorderColor DimGray","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"title \"Add Command Class diagram\"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"class \"AddCommand\" as Object\\AddCommand {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"     - toAdd: Person","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"     + execute(model) : CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"     + equals(other) : boolean","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"Interface \"Command\" as Object\\Command \u003c\u003cabstract\u003e\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"    + execute(model)","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"class \"Person\" as Object\\Person {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"    - companyName: Name","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"    - phone: Phone Number","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"    - email: Email","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"    - tag: Tag","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"    - address: Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"    - jobDescription: JobDescription","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"    - interviewDate: InterviewDate","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"    - internDuration: InternDuration","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"    - salary: Salary","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"    - note: Note","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"class \"Model\" as Object\\Model \u003c\u003cinterace\u003e\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"    - addressbook: AddressBook","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"    + hasPerson(person: Person): boolean","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"    + addPerson(person: Person): void","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"Object\\AddCommand --\u003e Object\\Model","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"Object\\AddCommand ...\u003e Object\\Person","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"Object\\AddCommand --|\u003e Object\\Command","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ashleygoh1":56}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"!include style.puml","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"participant \":InternHubParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"[-\u003e LogicManager : execute(person)","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"activate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(person)","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"create AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"AddressBookParser -\u003e AddCommandParser : parse(person)","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"create AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"activate AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"AddCommand --\u003e AddCommandParser :","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"destroy AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"LogicManager -\u003e AddCommand : execute(m)","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"activate AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"AddCommand -\u003e Model : AddCommand(personResult)","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"activate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"create CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ashleygoh1"},"content":"activate CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ashleygoh1"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"ashleygoh1"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"ashleygoh1"},"content":"AddCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"ashleygoh1"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"ashleygoh1"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"ashleygoh1"},"content":"legend","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"ashleygoh1"},"content":"let person \u003d \u0027add c/Happy Burger p/98765432 e/HappyBurger@example.com a/311, Clementi Ave 2, #02-25 t/I jd/Software Developer intern d/03-03-2024 1200 id/3 months s/1000\u0027","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"let personResult \u003d \u0027name, phone, email, address, tag, internDuration, interviewDate, jobDescription, salary, note\u0027","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"ashleygoh1"},"content":"endlegend","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"ashleygoh1"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ashleygoh1":77}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e Tag","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e InternDuration","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e InterviewDate","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e JobDescription","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e Salary","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"Person *--\u003e Note","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"eunrcn":5,"ashleygoh1":1,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"participant \":InternHubParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ashleygoh1":1,"-":69}},{"path":"docs/diagrams/EditCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"@startuml","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"hide empty attributes","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"hide empty methods","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"hide circle","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"skinparam shadowing false","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"skinparam classFontStyle Bold","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"skinparam ActivityBackgroundColor Silver","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"skinparam ActivityBorderColor DimGray","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"skinparam class {","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    BackgroundColor Cornsilk","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    ArrowColor DimGray","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"    BorderThickness 1","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    BorderColor DimGray","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"title \"Edit Command Class diagram\"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"class \"EditCommand\" as Object\\EditCommand {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"     - index: Index","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"     - editPersonDescriptor: EditPersonDescriptor","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"     + execute(model) : CommandResult","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"     + equals(other) : boolean","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"class \"Command\" as Object\\Command \u003c\u003cabstract\u003e\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"    + execute(model)","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"class \"EditPersonDescriptor\" as Object\\EditPersonDescriptor {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"    - name: Name","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"    - phone: Phone","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"    - email: Email","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"    - address: Address","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"    - tag: Tag","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"    - jobDescription: JobDescription","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"    - interviewDate: InterviewDate","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"    - internDuration: InternDuration","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"    - salary: Salary","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"    - note: Note","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"class \"Index\" as Object\\Index {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"    // attributes omitted for brevity","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"class \"Model\" as Object\\Model \u003c\u003cinterface\u003e\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"    - addressbook: AddressBook","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"    + hasPerson(person: Person): boolean","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"    + addPerson(person: Person): void","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"Object\\EditCommand --\u003e Object\\Model","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"Object\\EditCommand ...\u003e Object\\EditPersonDescriptor","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"Object\\EditCommand --|\u003e Object\\Command","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"Object\\EditCommand --\u003e Object\\Index","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"@enduml","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"eunrcn":62}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"@startuml","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"!include style.puml","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"participant \":InternHubParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"participant \"a:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"end box","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"end box","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"[-\u003e LogicManager : execute(person)","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"activate LogicManager","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(person)","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"create EditCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"AddressBookParser -\u003e EditCommandParser : parse(person)","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"create EditCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"activate EditCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"EditCommand --\u003e EditCommandParser :","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"EditCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"destroy EditCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"LogicManager -\u003e EditCommand : execute(m)","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"activate EditCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"EditCommand -\u003e Model : EditCommand(personResult)","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"activate Model","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"deactivate Model","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"create CommandResult","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"activate CommandResult","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"EditCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"legend","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"let person \u003d \u0027edit 1 n/NewName p/NewPhone e/NewEmail a/NewAddress t/NewTag jd/NewJobDescription id/NewInterviewDate d/NewInternDuration s/NewSalary n/NewNote\u0027","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"let personResult \u003d \u0027name, phone, email, address, tag, jobDescription, interviewDate, internDuration, salary, note\u0027","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"endlegend","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"@enduml","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"eunrcn":76}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"Class CompanyName","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"Class InternDuration","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"Class InterviewDate","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"Class JobDescription","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"Class Salary","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"Class Note","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e CompanyName","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e Tag","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e InternDuration","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e InterviewDate","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e JobDescription","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"Person *--\u003e Salary","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"Person *--\u003e Note","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"CompanyName -[hidden]right-\u003e Phone","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"eunrcn":12,"ashleygoh1":2,"-":50}},{"path":"docs/diagrams/NoteCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"!pragma layout smetana","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"title NoteCommand Class Diagram","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"abstract class Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"    {abstract} execute(model: Model): CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"class NoteCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    +static final COMMAND_WORD: String","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    +static final MESSAGE_USAGE: String","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    -final targetIndex: Index","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    +execute(model: Model): CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    +equals(other: Object): boolean","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    +toString(): String","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"interface Model {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    -addressbook: AddressBook","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"NoteCommand --\u003e Model","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Jawad280":24}},{"path":"docs/diagrams/NoteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"actor User","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"box Ui #LightGreen","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"    participant \":CommandBox\" as CB #Green","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    participant \":InternHubParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    participant \":NoteCommandParser\" as NoteCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    participant \"n:NoteCommand\" as NoteCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"User -\u003e CB : \"note 3\"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"activate CB","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"CB -\u003e LogicManager : execute(\"note 3\")","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"activate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"note 3\")","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"create NoteCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"AddressBookParser -\u003e NoteCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"activate NoteCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"create NoteCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"NoteCommandParser -\u003e NoteCommand: parse(\"3\")","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"activate NoteCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"NoteCommand --\u003e NoteCommandParser :","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"deactivate NoteCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"NoteCommandParser --\u003e AddressBookParser : n","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"deactivate NoteCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"NoteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"destroy NoteCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"AddressBookParser --\u003e LogicManager : n","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"LogicManager -\u003e NoteCommand : execute(m)","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"activate NoteCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"NoteCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"Model --\u003e NoteCommand : filteredPersons: ObservableList\u003cPerson\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"create CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"NoteCommand -\u003e CommandResult: feedbackToUser: \"edit 3 n/{existing note content}\"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"activate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"CommandResult --\u003e NoteCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"NoteCommand --\u003e LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"deactivate NoteCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"LogicManager --\u003e CB","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"CB --\u003e User : \"edit 3 n/{existing note content}\"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"deactivate CB","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Jawad280":78}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"Class ViewPanel","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"PersonListPanel -down-\u003e \"1\" ViewPanel","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"ViewPanel --|\u003e UiPart","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"ViewPanel ..\u003e Model","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jawad280":4,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"# InternHub","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"**InternHub is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"* If you are interested in using InternHub, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"* If you are interested about developing InternHub, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ashleygoh1":4,"-":17}},{"path":"docs/team/ashley.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"---","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"  layout: default.md","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"---","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"* **New Feature**: Allow user to add new contact to the address book.","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"  * What it does: Allow user to add the internship information that they applied for","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"  * Justification: This feature allow users to conveniently store all relevant internship details in one centralized location alongside their other contacts. This helps them stay organized and easily access internship information when needed.","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"  * Credits: The feature builds upon the robust foundation of AB3, optimizing code to accommodate new parameters.","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"* **Project management**:","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"  * Update existing tests for existing features with coverage of 78.57% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"  * User Guide:","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"    * Added documentation for the features `add` and `edit` [\\#72]()","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"* **Community**:","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"* **Tools**:","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"  * Set up codecov to the team repo","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ashleygoh1":36}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"ashleygoh1"},"content":"Create a `RemarkCommandParser` class in the `seedu.internhub.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"ashleygoh1"},"content":"Create a new `Remark` in `seedu.internhub.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"ashleygoh1"},"content":"Simply add the following to [`seedu.internhub.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-03-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":363,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"ashleygoh1":8,"-":396}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"The `address` field in `Person` is actually an instance of the `seedu.internhub.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ashleygoh1":1,"-":114}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.internhub.logic.Logic`.","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"A quick look at the `seedu.internhub.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ashleygoh1":2,"-":309}},{"path":"src/main/java/seedu/internhub/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.FileUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"ashleygoh1":4,"-":69}},{"path":"src/main/java/seedu/internhub/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"ashleygoh1":2,"-":39}},{"path":"src/main/java/seedu/internhub/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.Config;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.Version;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ConfigUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.StringUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.LogicManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.AddressBookStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.Storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.StorageManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.UserPrefsStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.ui.Ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.ui.UiManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":25,"-":161}},{"path":"src/main/java/seedu/internhub/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.core;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":2,"-":64}},{"path":"src/main/java/seedu/internhub/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.core;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":2,"-":80}},{"path":"src/main/java/seedu/internhub/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.core;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":1,"-":105}},{"path":"src/main/java/seedu/internhub/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.core;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":1,"-":120}},{"path":"src/main/java/seedu/internhub/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.core.index;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ashleygoh1":2,"-":67}},{"path":"src/main/java/seedu/internhub/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.exceptions;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"ashleygoh1":1,"-":10}},{"path":"src/main/java/seedu/internhub/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.exceptions;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":1,"-":20}},{"path":"src/main/java/seedu/internhub/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.MainApp;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ashleygoh1":2,"-":40}},{"path":"src/main/java/seedu/internhub/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":1,"-":34}},{"path":"src/main/java/seedu/internhub/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.Config;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ashleygoh1":3,"-":20}},{"path":"src/main/java/seedu/internhub/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":1,"-":82}},{"path":"src/main/java/seedu/internhub/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"    public static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"    public static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":5,"-":139}},{"path":"src/main/java/seedu/internhub/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":2,"-":66}},{"path":"src/main/java/seedu/internhub/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"ashleygoh1":1,"-":52}},{"path":"src/main/java/seedu/internhub/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"     * @see Model#getAddressBook()","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ashleygoh1":10,"-":42}},{"path":"src/main/java/seedu/internhub/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.Command;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.InternHubParser;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.Storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"    private final InternHubParser internHubParser;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"        internHubParser \u003d new InternHubParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"        Command command \u003d internHubParser.parseCommand(commandText);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ashleygoh1":15,"-":73}},{"path":"src/main/java/seedu/internhub/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.Prefix;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"        builder.append(person.getCompanyName())","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"                .append(\"; Tags: \")","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"                .append(person.getTag())","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"                .append(\"; Job Description: \")","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"                .append(person.getJobDescription())","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"                .append(\"; Interview Date: \")","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"                .append(person.getInterviewDate())","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"                .append(\"; Internship Duration: \")","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"                .append(person.getInternDuration())","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"                .append(\"; Salary: \")","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"                .append(person.getSalary())","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"                .append(\"; Note: \")","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"                .append(person.getNote());","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":16,"-":45}},{"path":"src/main/java/seedu/internhub/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERN_DURATION;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_JOB_DESCRIPTION;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_TAG + \"TAG \"","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_JOB_DESCRIPTION + \"JOB DESCRIPTION \"","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"            + \"[\" + PREFIX_INTERVIEW_DATE + \"INTERVIEW DATE] \"","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_INTERN_DURATION + \"INTERN DURATION \"","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_SALARY + \"SALARY\"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_NOTE + \"NOTE\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_NAME + \"Happy Burger \"","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_EMAIL + \"HappyBurger@example.com \"","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_TAG + \"I \"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_JOB_DESCRIPTION + \"Software Developer intern \"","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_INTERVIEW_DATE + \"03-05-2024 1200 \"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_INTERN_DURATION + \"3 months \"","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_SALARY + \"1000 \"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"            + PREFIX_NOTE + \"Company CEO is John Doe\\n\";","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":32,"-":67}},{"path":"src/main/java/seedu/internhub/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":3,"-":20}},{"path":"src/main/java/seedu/internhub/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":3,"-":17}},{"path":"src/main/java/seedu/internhub/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"chenyixin0"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    private final Person viewPerson;","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"chenyixin0"},"content":"    private final FilteredList\u003cPerson\u003e viewList;","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        this.viewPerson \u003d null;","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"chenyixin0"},"content":"        this.viewList \u003d null;","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    public CommandResult(String feedbackToUser, Person viewPerson) {","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"        this.viewPerson \u003d viewPerson;","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"chenyixin0"},"content":"        this.viewList \u003d null;","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"chenyixin0"},"content":"    public CommandResult(String feedbackToUser, FilteredList\u003cPerson\u003e viewList) {","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"chenyixin0"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"chenyixin0"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"chenyixin0"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"chenyixin0"},"content":"        this.viewPerson \u003d null;","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"chenyixin0"},"content":"        this.viewList \u003d viewList;","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"    public Person getViewPerson() {","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"        return this.viewPerson;","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"chenyixin0"},"content":"    public FilteredList\u003cPerson\u003e getViewList() {","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"chenyixin0"},"content":"        return this.viewList;","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chenyixin0":15,"Jawad280":20,"ashleygoh1":3,"-":81}},{"path":"src/main/java/seedu/internhub/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"minghowC"},"content":"    // Output message: \"Deleted Person: Person Name\"","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"minghowC":1,"ashleygoh1":7,"-":62}},{"path":"src/main/java/seedu/internhub/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERN_DURATION;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_JOB_DESCRIPTION;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InternDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InterviewDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.JobDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Note;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Salary;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"            + \"[\" + PREFIX_JOB_DESCRIPTION + \"JOB DESCRIPTION] \"","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"            + \"[\" + PREFIX_INTERVIEW_DATE + \"INTERVIEW DATE] \"","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"            + \"[\" + PREFIX_INTERN_DURATION + \"INTERN DURATION] \"","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"            + \"[\" + PREFIX_SALARY + \"SALARY] \"","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"eunrcn"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getCompanyName());","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"        JobDescription updatedJobDescription \u003d editPersonDescriptor","lastModifiedDate":"2024-02-29"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"                .getJobDescription()","lastModifiedDate":"2024-02-29"},{"lineNumber":114,"author":{"gitId":"Jawad280"},"content":"                .orElse(personToEdit.getJobDescription());","lastModifiedDate":"2024-02-29"},{"lineNumber":115,"author":{"gitId":"Jawad280"},"content":"        InterviewDate updatedInterviewDate \u003d editPersonDescriptor","lastModifiedDate":"2024-02-29"},{"lineNumber":116,"author":{"gitId":"Jawad280"},"content":"                .getInterviewDate()","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"Jawad280"},"content":"                .orElse(personToEdit.getInterviewDate());","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"Jawad280"},"content":"        InternDuration updatedInternDuration \u003d editPersonDescriptor","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"Jawad280"},"content":"                .getInternDuration()","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"Jawad280"},"content":"                .orElse(personToEdit.getInternDuration());","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"eunrcn"},"content":"        Salary updatedSalary \u003d editPersonDescriptor.getSalary().orElse(personToEdit.getSalary());","lastModifiedDate":"2024-02-28"},{"lineNumber":122,"author":{"gitId":"Jawad280"},"content":"        Tag updatedTags \u003d editPersonDescriptor.getTag().orElse(personToEdit.getTag());","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"Jawad280"},"content":"        Note updatedNote \u003d editPersonDescriptor.getNote().orElse(personToEdit.getNote());","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"eunrcn"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"eunrcn"},"content":"                updatedJobDescription, updatedInterviewDate,","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"Jawad280"},"content":"                updatedInternDuration, updatedSalary, updatedNote);","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2024-02-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2024-02-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2024-02-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2024-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-02-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-02-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2024-02-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2024-02-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2024-02-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-02-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"Jawad280"},"content":"        private Tag tag;","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"eunrcn"},"content":"        private JobDescription jobDescription;","lastModifiedDate":"2024-02-28"},{"lineNumber":166,"author":{"gitId":"eunrcn"},"content":"        private InternDuration internDuration;","lastModifiedDate":"2024-02-28"},{"lineNumber":167,"author":{"gitId":"eunrcn"},"content":"        private InterviewDate interviewDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":168,"author":{"gitId":"eunrcn"},"content":"        private Salary salary;","lastModifiedDate":"2024-02-28"},{"lineNumber":169,"author":{"gitId":"Jawad280"},"content":"        private Note note;","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2024-02-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-02-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2024-02-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-02-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-02-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2024-02-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2024-02-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2024-02-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2024-02-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2024-02-28"},{"lineNumber":183,"author":{"gitId":"Jawad280"},"content":"            setTag(toCopy.tag);","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"eunrcn"},"content":"            setJobDescription(toCopy.jobDescription);","lastModifiedDate":"2024-02-28"},{"lineNumber":185,"author":{"gitId":"eunrcn"},"content":"            setInternDuration(toCopy.internDuration);","lastModifiedDate":"2024-02-28"},{"lineNumber":186,"author":{"gitId":"eunrcn"},"content":"            setInterviewDate(toCopy.interviewDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":187,"author":{"gitId":"eunrcn"},"content":"            setSalary(toCopy.salary);","lastModifiedDate":"2024-02-28"},{"lineNumber":188,"author":{"gitId":"Jawad280"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-02-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-02-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-02-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-02-28"},{"lineNumber":195,"author":{"gitId":"Jawad280"},"content":"            return CollectionUtil.isAnyNonNull(","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"Jawad280"},"content":"                    name, phone, email, address, tag, jobDescription, interviewDate, internDuration, salary, note","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"Jawad280"},"content":"            );","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-02-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-02-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2024-02-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2024-02-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-02-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-02-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-02-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2024-02-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-02-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-02-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2024-02-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2024-02-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2024-02-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2024-02-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2024-02-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2024-02-28"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":232,"author":{"gitId":"eunrcn"},"content":"        public void setJobDescription(JobDescription jobDescription) {","lastModifiedDate":"2024-02-28"},{"lineNumber":233,"author":{"gitId":"eunrcn"},"content":"            this.jobDescription \u003d jobDescription;","lastModifiedDate":"2024-02-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":236,"author":{"gitId":"eunrcn"},"content":"        public Optional\u003cJobDescription\u003e getJobDescription() {","lastModifiedDate":"2024-02-28"},{"lineNumber":237,"author":{"gitId":"eunrcn"},"content":"            return Optional.ofNullable(jobDescription);","lastModifiedDate":"2024-02-28"},{"lineNumber":238,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":239,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":240,"author":{"gitId":"eunrcn"},"content":"        public void setInternDuration(InternDuration internDuration) {","lastModifiedDate":"2024-02-28"},{"lineNumber":241,"author":{"gitId":"eunrcn"},"content":"            this.internDuration \u003d internDuration;","lastModifiedDate":"2024-02-28"},{"lineNumber":242,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":243,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":244,"author":{"gitId":"eunrcn"},"content":"        public Optional\u003cInternDuration\u003e getInternDuration() {","lastModifiedDate":"2024-02-28"},{"lineNumber":245,"author":{"gitId":"eunrcn"},"content":"            return Optional.ofNullable(internDuration);","lastModifiedDate":"2024-02-28"},{"lineNumber":246,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":247,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":248,"author":{"gitId":"eunrcn"},"content":"        public void setInterviewDate(InterviewDate interviewDate) {","lastModifiedDate":"2024-02-28"},{"lineNumber":249,"author":{"gitId":"eunrcn"},"content":"            this.interviewDate \u003d interviewDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":250,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":251,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":252,"author":{"gitId":"eunrcn"},"content":"        public Optional\u003cInterviewDate\u003e getInterviewDate() {","lastModifiedDate":"2024-02-28"},{"lineNumber":253,"author":{"gitId":"eunrcn"},"content":"            return Optional.ofNullable(interviewDate);","lastModifiedDate":"2024-02-28"},{"lineNumber":254,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":255,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":256,"author":{"gitId":"eunrcn"},"content":"        public void setSalary(Salary salary) {","lastModifiedDate":"2024-02-28"},{"lineNumber":257,"author":{"gitId":"eunrcn"},"content":"            this.salary \u003d salary;","lastModifiedDate":"2024-02-28"},{"lineNumber":258,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":259,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":260,"author":{"gitId":"eunrcn"},"content":"        public Optional\u003cSalary\u003e getSalary() {","lastModifiedDate":"2024-02-28"},{"lineNumber":261,"author":{"gitId":"eunrcn"},"content":"            return Optional.ofNullable(salary);","lastModifiedDate":"2024-02-28"},{"lineNumber":262,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":263,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":264,"author":{"gitId":"Jawad280"},"content":"        public void setTag(Tag tag) {","lastModifiedDate":"2024-02-29"},{"lineNumber":265,"author":{"gitId":"Jawad280"},"content":"            this.tag \u003d tag;","lastModifiedDate":"2024-02-29"},{"lineNumber":266,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":267,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":268,"author":{"gitId":"Jawad280"},"content":"        public Optional\u003cTag\u003e getTag() {","lastModifiedDate":"2024-02-29"},{"lineNumber":269,"author":{"gitId":"Jawad280"},"content":"            return Optional.ofNullable(tag);","lastModifiedDate":"2024-02-29"},{"lineNumber":270,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":271,"author":{"gitId":"Jawad280"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2024-03-20"},{"lineNumber":272,"author":{"gitId":"Jawad280"},"content":"            this.note \u003d note;","lastModifiedDate":"2024-03-20"},{"lineNumber":273,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":274,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":275,"author":{"gitId":"Jawad280"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2024-03-20"},{"lineNumber":276,"author":{"gitId":"Jawad280"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2024-03-20"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-02-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-28"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2024-02-28"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-02-28"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2024-02-28"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2024-02-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2024-02-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2024-02-28"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2024-02-28"},{"lineNumber":295,"author":{"gitId":"Jawad280"},"content":"                    \u0026\u0026 Objects.equals(tag, otherEditPersonDescriptor.tag)","lastModifiedDate":"2024-02-29"},{"lineNumber":296,"author":{"gitId":"eunrcn"},"content":"                    \u0026\u0026 Objects.equals(jobDescription, otherEditPersonDescriptor.jobDescription)","lastModifiedDate":"2024-02-28"},{"lineNumber":297,"author":{"gitId":"eunrcn"},"content":"                    \u0026\u0026 Objects.equals(internDuration, otherEditPersonDescriptor.internDuration)","lastModifiedDate":"2024-02-28"},{"lineNumber":298,"author":{"gitId":"eunrcn"},"content":"                    \u0026\u0026 Objects.equals(interviewDate, otherEditPersonDescriptor.interviewDate)","lastModifiedDate":"2024-02-28"},{"lineNumber":299,"author":{"gitId":"eunrcn"},"content":"                    \u0026\u0026 Objects.equals(salary, otherEditPersonDescriptor.salary);","lastModifiedDate":"2024-02-28"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2024-02-28"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-02-28"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-02-28"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-02-28"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-02-28"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2024-02-28"},{"lineNumber":309,"author":{"gitId":"Jawad280"},"content":"                    .add(\"tag\", tag)","lastModifiedDate":"2024-02-29"},{"lineNumber":310,"author":{"gitId":"Jawad280"},"content":"                    .add(\"job description\", jobDescription)","lastModifiedDate":"2024-02-29"},{"lineNumber":311,"author":{"gitId":"Jawad280"},"content":"                    .add(\"intern duration\", internDuration)","lastModifiedDate":"2024-02-29"},{"lineNumber":312,"author":{"gitId":"Jawad280"},"content":"                    .add(\"interview date\", interviewDate)","lastModifiedDate":"2024-02-29"},{"lineNumber":313,"author":{"gitId":"Jawad280"},"content":"                    .add(\"salary\", salary)","lastModifiedDate":"2024-02-29"},{"lineNumber":314,"author":{"gitId":"Jawad280"},"content":"                    .add(\"note\", note)","lastModifiedDate":"2024-03-20"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2024-02-28"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"eunrcn":57,"Jawad280":37,"ashleygoh1":28,"-":196}},{"path":"src/main/java/seedu/internhub/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ashleygoh1":2,"-":17}},{"path":"src/main/java/seedu/internhub/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"chenyixin0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.MatchingTagPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"chenyixin0"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"chenyixin0"},"content":" * Filters the list of companies to only show entries with the specified tag","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"chenyixin0"},"content":" * Tag searching is case-sensitive","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"chenyixin0"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"chenyixin0"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"chenyixin0"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"chenyixin0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters the current list of companies to only display \"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"chenyixin0"},"content":"            + \"those with the specified tag (case-sensitive) as a list with index numbers. \\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"chenyixin0"},"content":"            + \"Parameter: t/ TAG \\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"chenyixin0"},"content":"            + \"Example: \" + COMMAND_WORD + \" t/ I\";","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"chenyixin0"},"content":"    private final MatchingTagPredicate predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"chenyixin0"},"content":"    public FilterCommand(MatchingTagPredicate predicate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"chenyixin0"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"chenyixin0"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"chenyixin0"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"chenyixin0"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"chenyixin0"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"chenyixin0"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"chenyixin0"},"content":"                String.format(","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"chenyixin0"},"content":"                        Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"chenyixin0"},"content":"                        model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"chenyixin0"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"chenyixin0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"chenyixin0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"chenyixin0"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"chenyixin0"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"chenyixin0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"chenyixin0"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"chenyixin0"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"chenyixin0"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"chenyixin0"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"chenyixin0"},"content":"        return predicate.equals(otherFilterCommand.predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"chenyixin0"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"chenyixin0"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"chenyixin0"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"chenyixin0"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"chenyixin0"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"chenyixin0"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"chenyixin0":56,"ashleygoh1":5}},{"path":"src/main/java/seedu/internhub/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"chenyixin0"},"content":" * Finds and lists all companies in address book whose name contains any of the argument keywords.","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"chenyixin0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all companies whose names contain any of \"","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"chenyixin0"},"content":"            + \"Example: \" + COMMAND_WORD + \" food panda\";","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"chenyixin0"},"content":"        //requireNonNull(model);","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"chenyixin0"},"content":"        //model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"                String.format(","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"                        Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"                        model.generateNewFilteredPersonList(predicate).size()),","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"chenyixin0"},"content":"                        model.generateNewFilteredPersonList(predicate));","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chenyixin0":6,"Jawad280":3,"ashleygoh1":5,"-":45}},{"path":"src/main/java/seedu/internhub/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":2,"-":19}},{"path":"src/main/java/seedu/internhub/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jawad280":1,"ashleygoh1":3,"-":20}},{"path":"src/main/java/seedu/internhub/logic/commands/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":" * Fetches the note content of the contact of index.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"public class NoteCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"            + \": Fetches the note content of the index number used in the displayed contact list.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    public NoteCommand(Index targetIndex) {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"                String.format(\"edit %d n/\", targetIndex.getOneBased()) + personToView.getNote(),","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"                personToView);","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"        if (!(other instanceof NoteCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        NoteCommand otherNoteCommand \u003d (NoteCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"        return targetIndex.equals(otherNoteCommand.targetIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Jawad280":60,"ashleygoh1":7}},{"path":"src/main/java/seedu/internhub/logic/commands/ReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":" * Filters list to upcoming interviews in the next \u0027n\u0027 days","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    public static final String COMMAND_WORD \u003d \"reminder\";","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed applications that are due or have interviews in %1$d days.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"    private int numberOfDays;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"    public ReminderCommand(int numberOfDays) {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"        this.numberOfDays \u003d numberOfDays;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"        // Define a predicate to filter persons with interviews within N days","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"        Predicate\u003cPerson\u003e isWithinNDaysPredicate \u003d person -\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"                person.getInterviewDate() !\u003d null \u0026\u0026 person.getInterviewDate().isWithinNDays(numberOfDays);","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"        // Update the filtered list in the model using a predicate","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"        model.updateFilteredPersonList(isWithinNDaysPredicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, numberOfDays));","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"                || (other instanceof ReminderCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"eunrcn":19,"Jawad280":2,"ashleygoh1":16}},{"path":"src/main/java/seedu/internhub/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import java.util.List;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":" * Views a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"            + \": Views the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Viewing Person: %1$s\";","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        return new CommandResult(","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"                String.format(MESSAGE_VIEW_PERSON_SUCCESS, Messages.format(personToView)),","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"                personToView);","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"            return true;","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"            return false;","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"        return targetIndex.equals(otherViewCommand.targetIndex);","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"    public String toString() {","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"                .toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"Jawad280":62,"ashleygoh1":7}},{"path":"src/main/java/seedu/internhub/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands.exceptions;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.Command;","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ashleygoh1":2,"-":16}},{"path":"src/main/java/seedu/internhub/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InternDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InterviewDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.JobDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Note;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Salary;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"                        CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_TAG, CliSyntax.PREFIX_JOB_DESCRIPTION,","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"                        CliSyntax.PREFIX_INTERVIEW_DATE, CliSyntax.PREFIX_INTERN_DURATION,","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"                        CliSyntax.PREFIX_SALARY, CliSyntax.PREFIX_NOTE);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"                CliSyntax.PREFIX_TAG, CliSyntax.PREFIX_JOB_DESCRIPTION, CliSyntax.PREFIX_INTERN_DURATION,","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"                CliSyntax.PREFIX_SALARY) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"                CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_TAG, CliSyntax.PREFIX_JOB_DESCRIPTION,","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"                CliSyntax.PREFIX_INTERVIEW_DATE, CliSyntax.PREFIX_INTERN_DURATION,","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"                CliSyntax.PREFIX_SALARY, CliSyntax.PREFIX_NOTE);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"        Address address;","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"            try {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"                address \u003d ParserUtil.parseAddress(argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"                throw new ParseException(\"Error parsing address: \" + e.getMessage());","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"            address \u003d new Address(\"\"); // Provide a default empty address if not provided","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"ashleygoh1"},"content":"        Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(CliSyntax.PREFIX_TAG).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ashleygoh1"},"content":"        JobDescription jobDescription \u003d ParserUtil.parseJobDescription(","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"ashleygoh1"},"content":"                argMultimap.getValue(CliSyntax.PREFIX_JOB_DESCRIPTION).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"ashleygoh1"},"content":"        InterviewDate interviewDate \u003d new InterviewDate(null);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_INTERVIEW_DATE).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"ashleygoh1"},"content":"            try {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"ashleygoh1"},"content":"                String givenDate \u003d argMultimap.getValue(CliSyntax.PREFIX_INTERVIEW_DATE).get();","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"ashleygoh1"},"content":"                if (!givenDate.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"ashleygoh1"},"content":"                    interviewDate \u003d ParserUtil.parseInterviewDate(givenDate);","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"ashleygoh1"},"content":"                }","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"ashleygoh1"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"                throw new ParseException(\"Error parsing interview date: \" + e.getMessage());","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"ashleygoh1"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"ashleygoh1"},"content":"        InternDuration internDuration \u003d ParserUtil.parseInternDuration(","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"ashleygoh1"},"content":"                argMultimap.getValue(CliSyntax.PREFIX_INTERN_DURATION).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"ashleygoh1"},"content":"        Salary salary \u003d ParserUtil.parseSalary(argMultimap.getValue(CliSyntax.PREFIX_SALARY).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"ashleygoh1"},"content":"        Note note;","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"ashleygoh1"},"content":"            try {","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"ashleygoh1"},"content":"                note \u003d ParserUtil.parseNote(argMultimap.getValue(CliSyntax.PREFIX_NOTE).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"ashleygoh1"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"ashleygoh1"},"content":"                throw new ParseException(\"Error parsing note: \" + e.getMessage());","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"ashleygoh1"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"ashleygoh1"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"ashleygoh1"},"content":"            note \u003d new Note(\"\"); // Provide a default empty note if not provided","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"ashleygoh1"},"content":"        Person person \u003d new Person(name, phone, email, address, tag,","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"ashleygoh1"},"content":"                jobDescription, interviewDate, internDuration, salary, note);","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"ashleygoh1"},"content":"        return new AddCommand(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"ashleygoh1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"ashleygoh1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"ashleygoh1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"ashleygoh1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ashleygoh1":108}},{"path":"src/main/java/seedu/internhub/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"ashleygoh1":3,"-":75}},{"path":"src/main/java/seedu/internhub/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"ashleygoh1":1,"-":147}},{"path":"src/main/java/seedu/internhub/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"    public static final Prefix PREFIX_JOB_DESCRIPTION \u003d new Prefix(\"jd/\");","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"    public static final Prefix PREFIX_INTERVIEW_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"    public static final Prefix PREFIX_INTERN_DURATION \u003d new Prefix(\"id/\");","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"    public static final Prefix PREFIX_SALARY \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"n/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"eunrcn":1,"Jawad280":1,"ashleygoh1":6,"-":13}},{"path":"src/main/java/seedu/internhub/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ashleygoh1":5,"-":24}},{"path":"src/main/java/seedu/internhub/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.LogicManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.EditCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InterviewDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"                        CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_TAG,","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"                        CliSyntax.PREFIX_JOB_DESCRIPTION, CliSyntax.PREFIX_INTERVIEW_DATE,","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"                        CliSyntax.PREFIX_INTERN_DURATION, CliSyntax.PREFIX_SALARY,","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"                        CliSyntax.PREFIX_NOTE);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"        Index index;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"                CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_TAG,","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"                CliSyntax.PREFIX_JOB_DESCRIPTION, CliSyntax.PREFIX_INTERVIEW_DATE,","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"                CliSyntax.PREFIX_INTERN_DURATION,","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"                CliSyntax.PREFIX_SALARY);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"ashleygoh1"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ashleygoh1"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_JOB_DESCRIPTION).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"ashleygoh1"},"content":"            editPersonDescriptor.setJobDescription(","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"                    ParserUtil.parseJobDescription(argMultimap.getValue(CliSyntax.PREFIX_JOB_DESCRIPTION).get())","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"ashleygoh1"},"content":"            );","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_INTERVIEW_DATE).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"ashleygoh1"},"content":"            String givenDate \u003d argMultimap.getValue(CliSyntax.PREFIX_INTERVIEW_DATE).get();","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"ashleygoh1"},"content":"            if (!givenDate.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"ashleygoh1"},"content":"                editPersonDescriptor.setInterviewDate(","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"                        ParserUtil.parseInterviewDate(argMultimap.getValue(CliSyntax.PREFIX_INTERVIEW_DATE).get())","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"ashleygoh1"},"content":"                );","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"ashleygoh1"},"content":"            } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"ashleygoh1"},"content":"                editPersonDescriptor.setInterviewDate(new InterviewDate(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"ashleygoh1"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_INTERN_DURATION).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"ashleygoh1"},"content":"            editPersonDescriptor.setInternDuration(","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"ashleygoh1"},"content":"                    ParserUtil.parseInternDuration(argMultimap.getValue(CliSyntax.PREFIX_INTERN_DURATION).get())","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"ashleygoh1"},"content":"            );","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_SALARY).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"ashleygoh1"},"content":"            editPersonDescriptor.setSalary(ParserUtil.parseSalary(argMultimap.getValue(CliSyntax.PREFIX_SALARY).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"ashleygoh1"},"content":"            editPersonDescriptor.setTag(ParserUtil.parseTag(argMultimap.getValue(CliSyntax.PREFIX_TAG).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"ashleygoh1"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"ashleygoh1"},"content":"            editPersonDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(CliSyntax.PREFIX_NOTE).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"ashleygoh1"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"ashleygoh1"},"content":"            logger.info(\"At least one field to edit must be provided\");","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"ashleygoh1"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"ashleygoh1"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ashleygoh1":102}},{"path":"src/main/java/seedu/internhub/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.MatchingTagPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"chenyixin0"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"chenyixin0"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"chenyixin0"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"chenyixin0"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"chenyixin0"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"chenyixin0"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"chenyixin0"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"chenyixin0"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"chenyixin0"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"chenyixin0"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"chenyixin0"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"chenyixin0"},"content":"        String tagKeyword \u003d trimmedArgs.substring(trimmedArgs.indexOf(\" \") + 1).trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"chenyixin0"},"content":"        if (trimmedArgs.isEmpty() || tagKeyword.equals(\"t/\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"chenyixin0"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"chenyixin0"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"chenyixin0"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"chenyixin0"},"content":"        return new FilterCommand(new MatchingTagPredicate(tagKeyword));","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"chenyixin0"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"chenyixin0":23,"ashleygoh1":5}},{"path":"src/main/java/seedu/internhub/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.FindCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ashleygoh1":5,"-":28}},{"path":"src/main/java/seedu/internhub/logic/parser/InternHubParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.Command;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.EditCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.FindCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ListCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ReminderCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"public class InternHubParser {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(InternHubParser.class);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"chenyixin0"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"chenyixin0"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"minghowC"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"minghowC"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"ashleygoh1"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"            return new ClearCommand();","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"        case NoteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"            return new NoteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"        case ReminderCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"ashleygoh1"},"content":"            return new ReminderCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eunrcn":3,"chenyixin0":2,"minghowC":2,"Jawad280":4,"ashleygoh1":23,"-":56}},{"path":"src/main/java/seedu/internhub/logic/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":" * Parses input arguments and creates a new NoteCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"public class NoteCommandParser implements Parser\u003cNoteCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * Parses the given {@code String} of arguments in the context of the NoteCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * and returns a NoteCommand object for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    public NoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"            return new NoteCommand(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, NoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"eunrcn":1,"Jawad280":21,"ashleygoh1":5}},{"path":"src/main/java/seedu/internhub/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.Command;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"ashleygoh1":3,"-":13}},{"path":"src/main/java/seedu/internhub/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.StringUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InternDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InterviewDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.JobDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Note;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Salary;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"    public static final String MESSAGE_INVALID_NUMBER_OF_PEOPLE \u003d","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"            \"Number of people is not a non-zero unsigned integer.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"    public static final String MESSAGE_INVALID_DATE_TIME_FORMAT \u003d","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"            \"Date time is wrongly formatted. You need to input a date in yyyy-mm-dd or dd-mm-yyyy \"","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"                    + \"format and a time in HH:mm or HHmm (24hr clock) format (eg: 1800 or 18:00 for 6 pm). \"","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"                    + \"You can choose to entire enter a date first or time first in any of the formats mentioned\";","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"minghowC"},"content":"        if (!Tag.isValidTag(trimmedTag)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"ashleygoh1"},"content":"     * Parses a {@code String jobDescription} into an {@code jobDescription}.","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"ashleygoh1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"ashleygoh1"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"ashleygoh1"},"content":"     * @throws ParseException if the given {@code jobDescription} is invalid.","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"ashleygoh1"},"content":"    public static JobDescription parseJobDescription(String jobDescription) throws ParseException {","lastModifiedDate":"2024-02-25"},{"lineNumber":123,"author":{"gitId":"ashleygoh1"},"content":"        requireNonNull(jobDescription);","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"ashleygoh1"},"content":"        String trimmedJobDescription \u003d jobDescription.trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"ashleygoh1"},"content":"        if (!JobDescription.isValidJobDescription(trimmedJobDescription)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"ashleygoh1"},"content":"            throw new ParseException(JobDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":127,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"ashleygoh1"},"content":"        return new JobDescription(trimmedJobDescription);","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":130,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"ashleygoh1"},"content":"     * Parses {@code dateTime} into a {@code LocalDateTime} object.","lastModifiedDate":"2024-02-25"},{"lineNumber":133,"author":{"gitId":"ashleygoh1"},"content":"     * @throws ParseException if {@code dateTime} is of invalid format.","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":135,"author":{"gitId":"ashleygoh1"},"content":"    public static InterviewDate parseInterviewDate(String interviewDate) throws ParseException {","lastModifiedDate":"2024-02-25"},{"lineNumber":136,"author":{"gitId":"ashleygoh1"},"content":"        String trimmedDateTime \u003d interviewDate.trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"Jawad280"},"content":"        if (!InterviewDate.isValidDate(trimmedDateTime)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"Jawad280"},"content":"            throw new ParseException(InterviewDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"ashleygoh1"},"content":"        return new InterviewDate(trimmedDateTime);","lastModifiedDate":"2024-02-25"},{"lineNumber":141,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":142,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":143,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"ashleygoh1"},"content":"     * Parses a {@code String internDuration} into an {@code internDuration}.","lastModifiedDate":"2024-02-25"},{"lineNumber":145,"author":{"gitId":"ashleygoh1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-02-25"},{"lineNumber":146,"author":{"gitId":"ashleygoh1"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"ashleygoh1"},"content":"     * @throws ParseException if the given {@code internDuration} is invalid.","lastModifiedDate":"2024-02-25"},{"lineNumber":148,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":149,"author":{"gitId":"ashleygoh1"},"content":"    public static InternDuration parseInternDuration(String internDuration) throws ParseException {","lastModifiedDate":"2024-02-25"},{"lineNumber":150,"author":{"gitId":"ashleygoh1"},"content":"        String trimmedInternDuration \u003d internDuration.trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":151,"author":{"gitId":"ashleygoh1"},"content":"        if (!InternDuration.isValidInternDuration(trimmedInternDuration)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":152,"author":{"gitId":"ashleygoh1"},"content":"            throw new ParseException(InternDuration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":153,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":154,"author":{"gitId":"ashleygoh1"},"content":"        return new InternDuration(trimmedInternDuration);","lastModifiedDate":"2024-02-25"},{"lineNumber":155,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":156,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":157,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":158,"author":{"gitId":"ashleygoh1"},"content":"     * Parses a {@code String salary} into an {@code salary}.","lastModifiedDate":"2024-02-25"},{"lineNumber":159,"author":{"gitId":"ashleygoh1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-02-25"},{"lineNumber":160,"author":{"gitId":"ashleygoh1"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":161,"author":{"gitId":"ashleygoh1"},"content":"     * @throws ParseException if the given {@code salary} is invalid.","lastModifiedDate":"2024-02-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"ashleygoh1"},"content":"    public static Salary parseSalary(String salary) throws ParseException {","lastModifiedDate":"2024-02-25"},{"lineNumber":164,"author":{"gitId":"ashleygoh1"},"content":"        String trimmedSalary \u003d salary.trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":165,"author":{"gitId":"ashleygoh1"},"content":"        if (!Salary.isValidSalary(trimmedSalary)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":166,"author":{"gitId":"ashleygoh1"},"content":"            throw new ParseException(Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"ashleygoh1"},"content":"        return new Salary(trimmedSalary);","lastModifiedDate":"2024-02-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"Jawad280"},"content":"     * Parses a {@code String note} into an {@code note}.","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"Jawad280"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"Jawad280"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"Jawad280"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"Jawad280"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"Jawad280"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"minghowC":1,"Jawad280":14,"ashleygoh1":67,"-":99}},{"path":"src/main/java/seedu/internhub/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"ashleygoh1":1,"-":41}},{"path":"src/main/java/seedu/internhub/logic/parser/ReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ReminderCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":" * Parses input arguments and creates a new ReminderCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"public class ReminderCommandParser implements Parser\u003cReminderCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"    public static final String INVALID_NUMBER_OF_DAYS \u003d \"Number of days must be a positive integer.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"     * Parses the given {@code String} of arguments in the context of the ReminderCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"     * and returns a ReminderCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    public ReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"            int numberOfDays \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"            if (numberOfDays \u003c\u003d 0) {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"                throw new ParseException(INVALID_NUMBER_OF_DAYS);","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"            return new ReminderCommand(numberOfDays);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"            throw new ParseException(INVALID_NUMBER_OF_DAYS);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"eunrcn":14,"Jawad280":3,"ashleygoh1":13}},{"path":"src/main/java/seedu/internhub/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"public class ViewCommandParser {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"            throw new ParseException(","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"Jawad280":22,"ashleygoh1":5}},{"path":"src/main/java/seedu/internhub/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser.exceptions;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"ashleygoh1":2,"-":15}},{"path":"src/main/java/seedu/internhub/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.UniquePersonList;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"Jawad280"},"content":"        ObservableList\u003cPerson\u003e personList \u003d persons.asUnmodifiableObservableList();","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"Jawad280"},"content":"        // Sort the list","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"Jawad280"},"content":"        personList \u003d personList.sorted();","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"Jawad280"},"content":"        return personList;","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jawad280":4,"ashleygoh1":4,"-":125}},{"path":"src/main/java/seedu/internhub/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"chenyixin0"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"    Person choosePersonToView(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"chenyixin0"},"content":"    FilteredList\u003cPerson\u003e generateNewFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chenyixin0":3,"Jawad280":1,"ashleygoh1":3,"-":84}},{"path":"src/main/java/seedu/internhub/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"chenyixin0"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":132,"author":{"gitId":"chenyixin0"},"content":"    public FilteredList\u003cPerson\u003e generateNewFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-02-29"},{"lineNumber":133,"author":{"gitId":"chenyixin0"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"chenyixin0"},"content":"        return new FilteredList\u003c\u003e(filteredPersons, predicate);","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"chenyixin0"},"content":"        //return filteredPersons;","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":138,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"Jawad280"},"content":"    public Person choosePersonToView(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"Jawad280"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"Jawad280"},"content":"        for (Person p : filteredPersons) {","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"Jawad280"},"content":"            if (predicate.test(p)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"Jawad280"},"content":"                return p;","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"Jawad280"},"content":"        return null;","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chenyixin0":9,"Jawad280":11,"ashleygoh1":5,"-":143}},{"path":"src/main/java/seedu/internhub/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":2,"-":15}},{"path":"src/main/java/seedu/internhub/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ashleygoh1":2,"-":14}},{"path":"src/main/java/seedu/internhub/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":2,"-":86}},{"path":"src/main/java/seedu/internhub/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"        if (address.isEmpty()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"            checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"            value \u003d address;","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":7,"-":59}},{"path":"src/main/java/seedu/internhub/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":2,"-":77}},{"path":"src/main/java/seedu/internhub/model/person/InternDuration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":" * Represents a Person\u0027s Intern Duration in the address book.","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInternDuration(String)}","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"public class InternDuration {","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Intern Duration can take any values, and it should not be blank\";","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"    /*","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"     * The first character of the intern duration must not be a whitespace,","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"    public final String value;","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"     * Constructs an {@code internDuration}.","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"     * @param internDuration A valid intern duration.","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"    public InternDuration(String internDuration) {","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"        checkArgument(isValidInternDuration(internDuration), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"        value \u003d internDuration;","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"     * Returns true if a given string is a valid intern duration.","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"    public static boolean isValidInternDuration(String test) {","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"        return value;","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"            return true;","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"        if (!(other instanceof InternDuration)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"            return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"        InternDuration otherInternDuration \u003d (InternDuration) other;","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"        return value.equals(otherInternDuration.value);","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"        return value.hashCode();","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"ashleygoh1":63}},{"path":"src/main/java/seedu/internhub/model/person/InterviewDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":" * Represents a Person\u0027s interview date in the address book.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"public class InterviewDate {","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    public static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"            \"Interview Date \u0026 Time needs to follow this pattern : dd-mm-yyyy HHmm\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"                    + \"Interview Date \u0026 Time cannot be before today\u0027s date !\";","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"     * Constructs an {@code interview date}.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"     * @param interviewDate A valid interview date.","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"    public InterviewDate(String interviewDate) {","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"        if (interviewDate \u003d\u003d null) {","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"            value \u003d null;","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"            value \u003d LocalDateTime.parse(interviewDate, DATE_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"     * Checks if the entered interview date follows the format","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"            // Check the format of the interview date by parse","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"            LocalDateTime inputDate \u003d LocalDateTime.parse(test, DATE_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"            LocalDateTime currentDate \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"            // Set the time part of currentDate to 00:00","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"            currentDate \u003d currentDate.withHour(0).withMinute(0).withSecond(0);","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"            return inputDate.isAfter(currentDate);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"        String str \u003d \"\";","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"        if (value !\u003d null) {","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"            str \u003d value.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"        return str;","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"            return true;","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"ashleygoh1"},"content":"            return false;","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"ashleygoh1"},"content":"        InterviewDate otherInterviewDate \u003d (InterviewDate) other;","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"ashleygoh1"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"ashleygoh1"},"content":"            return otherInterviewDate.value \u003d\u003d null;","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"ashleygoh1"},"content":"        return value.equals(otherInterviewDate.value);","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"ashleygoh1"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"ashleygoh1"},"content":"        return value.hashCode();","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"     * Checks if this InterviewDate is in the next N days.","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"    public boolean isWithinNDays(int numberOfDays) {","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"        // Get the current date and time","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"        // Calculate the difference in days between the interview date and the current date","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"Jawad280"},"content":"        long daysDifference \u003d ChronoUnit.DAYS.between(currentDate.toLocalDate(), value.toLocalDate());","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"        assert daysDifference \u003e\u003d 0 : \"daysDifference should not be negative\";","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"        // Check if the difference is less than or equal to numberOfDays","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"        return daysDifference \u003e -1 \u0026\u0026 daysDifference \u003c\u003d numberOfDays;","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"eunrcn":16,"Jawad280":27,"ashleygoh1":54}},{"path":"src/main/java/seedu/internhub/model/person/JobDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":" * Represents a Person\u0027s job description in the address book.","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJobDescription(String)}","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"public class JobDescription {","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Job Description can take any values, and it should not be blank\";","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"    /*","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"     * The first character of the job description must not be a whitespace,","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S.*\";","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"    public final String value;","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"     * Constructs an {@code Job Description}.","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"     * @param jobDescription A valid Job Description.","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"    public JobDescription(String jobDescription) {","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"        requireNonNull(jobDescription);","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"        checkArgument(isValidJobDescription(jobDescription), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"        value \u003d jobDescription;","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"     * Returns true if a given string is a valid job description.","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"    public static boolean isValidJobDescription(String test) {","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"        return value;","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"            return true;","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"        if (!(other instanceof JobDescription)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"            return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"        JobDescription otherJobDescription \u003d (JobDescription) other;","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"        return value.equals(otherJobDescription.value);","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"ashleygoh1"},"content":"        return value.hashCode();","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"ashleygoh1":65}},{"path":"src/main/java/seedu/internhub/model/person/MatchingTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"chenyixin0"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"chenyixin0"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"chenyixin0"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches the tag given.","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"chenyixin0"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"chenyixin0"},"content":"public class MatchingTagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"chenyixin0"},"content":"    private final String tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"chenyixin0"},"content":"    public MatchingTagPredicate(String tag) {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"chenyixin0"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"chenyixin0"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"chenyixin0"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"        return (tag).equals(person.getTag().getTagShort());","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"chenyixin0"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"chenyixin0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"chenyixin0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"chenyixin0"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"chenyixin0"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"chenyixin0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"chenyixin0"},"content":"        if (!(other instanceof MatchingTagPredicate)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"chenyixin0"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"chenyixin0"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate otherMatchingTagPredicate \u003d (MatchingTagPredicate) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"chenyixin0"},"content":"        return tag.equals(otherMatchingTagPredicate.tag);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"chenyixin0"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"chenyixin0"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"chenyixin0"},"content":"        return \"tag \" + tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"chenyixin0"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"chenyixin0":38,"ashleygoh1":2}},{"path":"src/main/java/seedu/internhub/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":2,"-":65}},{"path":"src/main/java/seedu/internhub/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.StringUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getCompanyName().fullName, keyword));","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ashleygoh1":4,"-":40}},{"path":"src/main/java/seedu/internhub/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNote(String)}","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"public class Note {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Notes can take any values, and it should not be blank\";","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    public final String value;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"     * @param note A valid name.","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    public Note(String note) {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"        if (note.isEmpty()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"            value \u003d \"\";","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"            checkArgument(isValidNote(note), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"            value \u003d note;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"     * Returns true if a given string is a valid note.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    public static boolean isValidNote(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        return value;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"        return value.equals(otherNote.value);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Jawad280":59,"ashleygoh1":2}},{"path":"src/main/java/seedu/internhub/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"public class Person implements Comparable\u003cPerson\u003e {","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"    private final Name companyName;","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"    private final Tag tag;","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"    private final JobDescription jobDescription;","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"    private final InterviewDate interviewDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"    private final InternDuration internDuration;","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"    private final Salary salary;","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    private final Note note;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"    public Person(Name companyName, Phone phone, Email email, Address address, Tag tag,","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"                  JobDescription jobDescription, InterviewDate interviewDate,","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"                  InternDuration internDuration, Salary salary, Note note) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"        requireAllNonNull(companyName, phone, email, tag, jobDescription);","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"        this.jobDescription \u003d jobDescription;","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"        this.internDuration \u003d internDuration;","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"    public Name getCompanyName() {","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"        return companyName;","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"ashleygoh1"},"content":"    public Tag getTag() {","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"ashleygoh1"},"content":"        return tag;","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"ashleygoh1"},"content":"    public JobDescription getJobDescription() {","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"ashleygoh1"},"content":"        return jobDescription;","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"ashleygoh1"},"content":"    public InterviewDate getInterviewDate() {","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"ashleygoh1"},"content":"        return interviewDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"ashleygoh1"},"content":"    public InternDuration getInternDuration() {","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"ashleygoh1"},"content":"        return internDuration;","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"ashleygoh1"},"content":"    public Salary getSalary() {","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"ashleygoh1"},"content":"        return salary;","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"    public Note getNote() {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"        return note;","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"ashleygoh1"},"content":"     * Returns true if both inputs have the same company name and job description.","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"ashleygoh1"},"content":"     * This defines a weaker notion of equality between two inputs.","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"ashleygoh1"},"content":"                \u0026\u0026 otherPerson.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"ashleygoh1"},"content":"                \u0026\u0026 otherPerson.getJobDescription().equals(getJobDescription());","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"ashleygoh1"},"content":"     * Returns true if both inputs have the same identity and data fields.","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"ashleygoh1"},"content":"     * This defines a stronger notion of equality between two inputs.","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"ashleygoh1"},"content":"        return companyName.equals(otherPerson.companyName)","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"ashleygoh1"},"content":"                \u0026\u0026 tag.equals(otherPerson.tag)","lastModifiedDate":"2024-02-25"},{"lineNumber":123,"author":{"gitId":"ashleygoh1"},"content":"                \u0026\u0026 jobDescription.equals(otherPerson.jobDescription)","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"ashleygoh1"},"content":"                \u0026\u0026 interviewDate.equals(otherPerson.interviewDate)","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"ashleygoh1"},"content":"                \u0026\u0026 internDuration.equals(otherPerson.internDuration)","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"ashleygoh1"},"content":"                \u0026\u0026 salary.equals(otherPerson.salary)","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"ashleygoh1"},"content":"                \u0026\u0026 note.equals(otherPerson.note);","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"ashleygoh1"},"content":"        return Objects.hash(companyName, phone, email, address, tag,","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"ashleygoh1"},"content":"                jobDescription, interviewDate, internDuration, salary, note);","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"ashleygoh1"},"content":"                .add(\"name\", companyName)","lastModifiedDate":"2024-02-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"ashleygoh1"},"content":"                .add(\"tag\", tag)","lastModifiedDate":"2024-02-25"},{"lineNumber":145,"author":{"gitId":"ashleygoh1"},"content":"                .add(\"job description\", jobDescription)","lastModifiedDate":"2024-02-25"},{"lineNumber":146,"author":{"gitId":"ashleygoh1"},"content":"                .add(\"interview date\", interviewDate)","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"ashleygoh1"},"content":"                .add(\"intern duration\", internDuration)","lastModifiedDate":"2024-02-25"},{"lineNumber":148,"author":{"gitId":"ashleygoh1"},"content":"                .add(\"salary\", salary)","lastModifiedDate":"2024-02-25"},{"lineNumber":149,"author":{"gitId":"Jawad280"},"content":"                .add(\"note\", note)","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"Jawad280"},"content":"     * Returns int by comparing the 2 LocalDateTime dates with reference to current date.","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"Jawad280"},"content":"     * This defines a notion of precedence between two inputs.","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"Jawad280"},"content":"    public int compareInterviewDates(LocalDateTime thisInterviewDate, LocalDateTime otherInterviewDate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"Jawad280"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"Jawad280"},"content":"        boolean thisIsPast \u003d thisInterviewDate.toLocalDate().isBefore(currentDate.toLocalDate());","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"Jawad280"},"content":"        boolean otherIsPast \u003d otherInterviewDate.toLocalDate().isBefore(currentDate.toLocalDate());","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"Jawad280"},"content":"        if (thisIsPast \u0026\u0026 otherIsPast) {","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"Jawad280"},"content":"            return 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"Jawad280"},"content":"        } else if (thisIsPast \u0026\u0026 !otherIsPast) {","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"Jawad280"},"content":"            return 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"Jawad280"},"content":"        } else if (!thisIsPast \u0026\u0026 otherIsPast) {","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"Jawad280"},"content":"            return -1;","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"Jawad280"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"Jawad280"},"content":"            return thisInterviewDate.compareTo(otherInterviewDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"Jawad280"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"Jawad280"},"content":"    public int compareTo(Person otherPerson) {","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"Jawad280"},"content":"        LocalDateTime thisInterviewDate \u003d this.interviewDate.value;","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"Jawad280"},"content":"        LocalDateTime otherInterviewDate \u003d otherPerson.getInterviewDate().value;","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"Jawad280"},"content":"        if (thisInterviewDate !\u003d null \u0026\u0026 otherInterviewDate !\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"Jawad280"},"content":"            return compareInterviewDates(thisInterviewDate, otherInterviewDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"Jawad280"},"content":"        } else if (thisInterviewDate !\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"Jawad280"},"content":"            return -1;","lastModifiedDate":"2024-02-26"},{"lineNumber":179,"author":{"gitId":"Jawad280"},"content":"        } else if (otherInterviewDate !\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"Jawad280"},"content":"            return 1;","lastModifiedDate":"2024-02-26"},{"lineNumber":181,"author":{"gitId":"Jawad280"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":182,"author":{"gitId":"Jawad280"},"content":"            return 0;","lastModifiedDate":"2024-02-26"},{"lineNumber":183,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jawad280":42,"ashleygoh1":59,"-":85}},{"path":"src/main/java/seedu/internhub/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":2,"-":59}},{"path":"src/main/java/seedu/internhub/model/person/Salary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":" * Represents a Person\u0027s salary in the address book.","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSalary(String)}","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"public class Salary {","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Salary should only contain numbers\";","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALIDATION_REGEX \u003d \"[1-9]\\\\d*\";","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"    public final String value;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"     * Constructs a {@code Salary}.","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"     * @param salary A valid salary.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"    public Salary(String salary) {","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"        checkArgument(isValidSalary(salary), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"        value \u003d salary;","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"    public static boolean isValidSalary(String test) {","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"        return value;","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"            return true;","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"        if (!(other instanceof Salary)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"            return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"        Salary otherSalary \u003d (Salary) other;","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"        return value.equals(otherSalary.value);","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"        return value.hashCode();","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"ashleygoh1":59}},{"path":"src/main/java/seedu/internhub/model/person/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"minghowC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"minghowC"},"content":"enum Tags {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"minghowC"},"content":"    NR(\"No Reply\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"minghowC"},"content":"    OA(\"Online Assessment\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"minghowC"},"content":"    I(\"Interview\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"    R(\"Rejected\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    O(\"Offered\");","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"minghowC"},"content":"    public final String descriptiveName;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"minghowC"},"content":"    Tags(String descriptiveName) {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"minghowC"},"content":"        this.descriptiveName \u003d descriptiveName;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"minghowC"},"content":"    // Method to check if a given string is a valid enum value","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"minghowC"},"content":"    public static boolean isValidTag(String input) {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"minghowC"},"content":"        for (Tags tag : Tags.values()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"minghowC"},"content":"            if (tag.name().equalsIgnoreCase(input)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"minghowC"},"content":"                return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"minghowC"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"minghowC"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"minghowC"},"content":"        return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"minghowC"},"content":"    // Method to find a tag by string","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"minghowC"},"content":"    public static Tags fromString(String input) {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"minghowC"},"content":"        for (Tags tag : Tags.values()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"minghowC"},"content":"            if (tag.name().equalsIgnoreCase(input) || tag.descriptiveName.equalsIgnoreCase(input)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"minghowC"},"content":"                return tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"minghowC"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"minghowC"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"minghowC"},"content":"        throw new IllegalArgumentException(\"Invalid tag: \" + input);","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"minghowC"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"minghowC"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"minghowC"},"content":" * Represents an internship application\u0027s progress","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"minghowC"},"content":" * Stages of Progress: No Reply (NR), Online Assesment (OA), Interview (I), Reject (R), Offer (O)","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"minghowC"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"minghowC"},"content":"public class Tag {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"minghowC"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags should only contain NR, OA, I, R and O\";","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"minghowC"},"content":"    public final Tags value;","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"minghowC"},"content":"    public final String tagInput;","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"minghowC"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"minghowC"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"minghowC"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"minghowC"},"content":"     * @param tag A valid Tag.","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"minghowC"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"minghowC"},"content":"    public Tag(String tag) {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"minghowC"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"minghowC"},"content":"        this.tagInput \u003d tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"minghowC"},"content":"        Tags enumTag \u003d Tags.fromString(tag);","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"minghowC"},"content":"        checkArgument(Tags.isValidTag(tag), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"minghowC"},"content":"        this.value \u003d enumTag;","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"minghowC"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"minghowC"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"ashleygoh1"},"content":"        return value.descriptiveName;","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"minghowC"},"content":"    /*","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"minghowC"},"content":"     * Indicates whether some other object is \"equal to\" this one.","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"minghowC"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"minghowC"},"content":"     * @param other the reference object with which to compare","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"minghowC"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"minghowC"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"minghowC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"minghowC"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"minghowC"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"minghowC"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"ashleygoh1"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"minghowC"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"minghowC"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"minghowC"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"minghowC"},"content":"        return value.equals(otherTag.value);","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"minghowC"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"minghowC"},"content":"     * Returns if a given string / tag is a valid tag.","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"minghowC"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"minghowC"},"content":"    public static boolean isValidTag(String input) {","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"minghowC"},"content":"        return Tags.isValidTag(input);","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"minghowC"},"content":"    /*","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"minghowC"},"content":"     * Function overloading - isValidTag(String) \u0026 isValidTag(Tag)","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"minghowC"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"minghowC"},"content":"    public static boolean isValidTag(Tag tag) {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"minghowC"},"content":"        return Tags.isValidTag(tag.getTagName());","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"minghowC"},"content":"    public String getTagName() {","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"minghowC"},"content":"        return this.value.descriptiveName;","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"minghowC"},"content":"    public String getTagShort() {","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"minghowC"},"content":"        return this.tagInput;","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"minghowC"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"minghowC"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"minghowC"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"minghowC"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"minghowC"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"minghowC"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"minghowC":107,"Jawad280":2,"ashleygoh1":4}},{"path":"src/main/java/seedu/internhub/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ashleygoh1":4,"-":146}},{"path":"src/main/java/seedu/internhub/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person.exceptions;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"ashleygoh1":1,"-":10}},{"path":"src/main/java/seedu/internhub/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person.exceptions;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"ashleygoh1":1,"-":5}},{"path":"src/main/java/seedu/internhub/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InternDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InterviewDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.JobDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Note;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Salary;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"            new Person(new Name(\"FoodPanda\"), new Phone(\"12345678\"), new Email(\"panda@food.com\"),","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"                new Address(\"CBD\"), new Tag(\"I\"), new JobDescription(\"Front End Intern\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"                new InterviewDate(\"15-04-2024 0900\"), new InternDuration(\"6 months\"), new Salary(\"500\"), new Note(\"\"))","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Jawad280":1,"ashleygoh1":16,"-":33}},{"path":"src/main/java/seedu/internhub/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ashleygoh1":5,"-":41}},{"path":"src/main/java/seedu/internhub/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InternDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InterviewDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.JobDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Note;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Salary;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"    private final String companyName;","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"    private String tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"    private final String jobDescription;","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"    private final String interviewDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"    private final String internDuration;","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"    private final String salary;","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"    private final String note;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"companyName\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"            @JsonProperty(\"tag\") String tag, @JsonProperty(\"jobDescription\") String jobDescription,","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"            @JsonProperty(\"interviewDate\") String interviewDate,","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"            @JsonProperty(\"internDuration\") String internDuration,","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"            @JsonProperty(\"salary\") String salary, @JsonProperty(\"note\") String note) {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"        this.companyName \u003d name;","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"        this.jobDescription \u003d jobDescription;","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"        this.internDuration \u003d internDuration;","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"        this.salary \u003d salary;","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"ashleygoh1"},"content":"        companyName \u003d source.getCompanyName().fullName;","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"        tag \u003d source.getTag().getTagShort();","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"ashleygoh1"},"content":"        jobDescription \u003d source.getJobDescription().value;","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"ashleygoh1"},"content":"        interviewDate \u003d source.getInterviewDate().toString();","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"ashleygoh1"},"content":"        internDuration \u003d source.getInternDuration().value;","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"ashleygoh1"},"content":"        salary \u003d source.getSalary().value;","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"        note \u003d source.getNote().value;","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"ashleygoh1"},"content":"        if (companyName \u003d\u003d null) {","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"ashleygoh1"},"content":"        if (!Name.isValidName(companyName)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"ashleygoh1"},"content":"        final Name modelCompanyName \u003d new Name(companyName);","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"ashleygoh1"},"content":"        if (tag \u003d\u003d null) {","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"ashleygoh1"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Tag.class.getSimpleName()));","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"minghowC"},"content":"        if (!Tag.isValidTag(tag)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"ashleygoh1"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"ashleygoh1"},"content":"        Tag modelTag \u003d new Tag(tag);","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"ashleygoh1"},"content":"        if (jobDescription \u003d\u003d null) {","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"ashleygoh1"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-02-25"},{"lineNumber":123,"author":{"gitId":"ashleygoh1"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, JobDescription.class.getSimpleName()));","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"ashleygoh1"},"content":"        if (!JobDescription.isValidJobDescription(jobDescription)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"ashleygoh1"},"content":"            throw new IllegalValueException(JobDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":127,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"ashleygoh1"},"content":"        final JobDescription modelJobDescription \u003d new JobDescription(jobDescription);","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":130,"author":{"gitId":"ashleygoh1"},"content":"        final InterviewDate modelInterviewDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"ashleygoh1"},"content":"        if (interviewDate.isEmpty()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"ashleygoh1"},"content":"            modelInterviewDate \u003d new InterviewDate(null);","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"ashleygoh1"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"ashleygoh1"},"content":"            modelInterviewDate \u003d new InterviewDate(interviewDate);","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":136,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"ashleygoh1"},"content":"        if (internDuration \u003d\u003d null) {","lastModifiedDate":"2024-02-25"},{"lineNumber":138,"author":{"gitId":"ashleygoh1"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-02-25"},{"lineNumber":139,"author":{"gitId":"ashleygoh1"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, InternDuration.class.getSimpleName()));","lastModifiedDate":"2024-02-25"},{"lineNumber":140,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":141,"author":{"gitId":"ashleygoh1"},"content":"        if (!InternDuration.isValidInternDuration(internDuration)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"ashleygoh1"},"content":"            throw new IllegalValueException(InternDuration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":143,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"ashleygoh1"},"content":"        final InternDuration modelInternDuration \u003d new InternDuration(internDuration);","lastModifiedDate":"2024-02-25"},{"lineNumber":145,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":146,"author":{"gitId":"ashleygoh1"},"content":"        if (salary \u003d\u003d null) {","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"ashleygoh1"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Salary.class.getSimpleName()));","lastModifiedDate":"2024-02-25"},{"lineNumber":148,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":149,"author":{"gitId":"ashleygoh1"},"content":"        if (!Salary.isValidSalary(salary)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":150,"author":{"gitId":"ashleygoh1"},"content":"            throw new IllegalValueException(Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":152,"author":{"gitId":"ashleygoh1"},"content":"        final Salary modelSalary \u003d new Salary(salary);","lastModifiedDate":"2024-02-25"},{"lineNumber":153,"author":{"gitId":"Jawad280"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":155,"author":{"gitId":"ashleygoh1"},"content":"        return new Person(modelCompanyName, modelPhone, modelEmail, modelAddress, modelTag,","lastModifiedDate":"2024-02-25"},{"lineNumber":156,"author":{"gitId":"Jawad280"},"content":"                modelJobDescription, modelInterviewDate, modelInternDuration, modelSalary, modelNote);","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"minghowC":1,"Jawad280":6,"ashleygoh1":82,"-":70}},{"path":"src/main/java/seedu/internhub/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"minghowC"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"minghowC"},"content":"        if (!Tag.isValidTag(tagName)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"minghowC":2,"ashleygoh1":3,"-":43}},{"path":"src/main/java/seedu/internhub/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.FileUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.JsonUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ashleygoh1":7,"-":73}},{"path":"src/main/java/seedu/internhub/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ashleygoh1":6,"-":54}},{"path":"src/main/java/seedu/internhub/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.JsonUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ashleygoh1":5,"-":42}},{"path":"src/main/java/seedu/internhub/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ashleygoh1":5,"-":27}},{"path":"src/main/java/seedu/internhub/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":6,"-":72}},{"path":"src/main/java/seedu/internhub/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ashleygoh1":6,"-":30}},{"path":"src/main/java/seedu/internhub/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"            CommandResult res \u003d commandExecutor.execute(commandText);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"            System.out.println(res);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"            if (res.getFeedbackToUser().startsWith(\"edit \")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"                commandTextField.setText(res.getFeedbackToUser());","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"            } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"ashleygoh1"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Jawad280":8,"ashleygoh1":6,"-":79}},{"path":"src/main/java/seedu/internhub/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-f14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ashleygoh1":3,"-":99}},{"path":"src/main/java/seedu/internhub/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"    private VBox viewPanelPlaceholder;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"Jawad280"},"content":"     * Views the person on the View Panel.","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":173,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":174,"author":{"gitId":"chenyixin0"},"content":"    //    private void handleView(Person p, int displayIndex) {","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"chenyixin0"},"content":"    //        PersonCard viewPanel \u003d new PersonCard(p, displayIndex);","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"chenyixin0"},"content":"    //        //ViewPanel viewPanel \u003d new ViewPanel(p);","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"chenyixin0"},"content":"    //        //viewPanelPlaceHolder.getChildren().clear();","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"chenyixin0"},"content":"    //        viewPanelPlaceHolder.getChildren().add(viewPanel.getRoot());","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"chenyixin0"},"content":"    //    }","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"Jawad280"},"content":"    //    private void handleView(Person p) {","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"Jawad280"},"content":"    //        ViewPanel viewPanel \u003d new ViewPanel(p);","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"Jawad280"},"content":"    //        //viewPanelPlaceHolder.getChildren().clear();","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"Jawad280"},"content":"    //        VBox holder \u003d viewPanelPlaceHolder.getContent() \u003d\u003d null ? new VBox()","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"Jawad280"},"content":"    //                : (VBox) viewPanelPlaceHolder.getContent();","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"Jawad280"},"content":"    //        holder.getChildren().add(viewPanel.getRoot());","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"Jawad280"},"content":"    //        viewPanelPlaceHolder.setContent(holder);","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"Jawad280"},"content":"    //    }","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"chenyixin0"},"content":"    private void handleView(Person p) {","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"chenyixin0"},"content":"        ViewPanel viewPanel \u003d new ViewPanel(p);","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"Jawad280"},"content":"        viewPanelPlaceholder.getChildren().add(viewPanel.getRoot());","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"ashleygoh1"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"Jawad280"},"content":"            // viewPanelPlaceHolder.setContent(null);","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"Jawad280"},"content":"            viewPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"Jawad280"},"content":"            if (commandResult.getViewPerson() !\u003d null) {","lastModifiedDate":"2024-02-26"},{"lineNumber":216,"author":{"gitId":"Jawad280"},"content":"                Person p \u003d commandResult.getViewPerson();","lastModifiedDate":"2024-02-26"},{"lineNumber":217,"author":{"gitId":"chenyixin0"},"content":"                handleView(p);","lastModifiedDate":"2024-02-29"},{"lineNumber":218,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"Jawad280"},"content":"            if (commandResult.getViewList() !\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"chenyixin0"},"content":"                for (Person p : commandResult.getViewList()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":221,"author":{"gitId":"chenyixin0"},"content":"                    handleView(p);","lastModifiedDate":"2024-02-29"},{"lineNumber":222,"author":{"gitId":"chenyixin0"},"content":"                }","lastModifiedDate":"2024-02-29"},{"lineNumber":223,"author":{"gitId":"Jawad280"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chenyixin0":15,"Jawad280":23,"ashleygoh1":9,"-":189}},{"path":"src/main/java/seedu/internhub/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"    private Label tags;","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"    @FXML","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"    private Label jobDescription;","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"    @FXML","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"    private Label interviewDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"        name.setText(person.getCompanyName().fullName);","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"        jobDescription.setText(person.getJobDescription().value);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"        if ((person.getInterviewDate().toString()).equals(\"\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"            interviewDate.setText(\"Interview Date: -\");","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"            interviewDate.setText(\"Interview Date: \" + person.getInterviewDate().toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"        // Tags","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"        switch (person.getTag().getTagShort()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"        case \"NR\":","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"            tags.setStyle(tags.getStyle() + \"-fx-background-color: #Eeec7e\");","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"        case \"OA\":","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"            tags.setStyle(tags.getStyle() + \"-fx-background-color: #Dc7eee\");","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"        case \"I\":","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"            tags.setStyle(tags.getStyle() + \"-fx-background-color: #4b94ea\");","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"        case \"R\":","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"            tags.setStyle(tags.getStyle() + \"-fx-background-color: #Ee7e7e\");","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"        case \"O\":","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"            tags.setStyle(tags.getStyle() + \"-fx-background-color: #A9ee7e\");","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"        default:","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"            tags.setStyle(tags.getStyle());","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"        tags.setText(person.getTag().getTagName());","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jawad280":23,"ashleygoh1":13,"-":40}},{"path":"src/main/java/seedu/internhub/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ashleygoh1":3,"-":46}},{"path":"src/main/java/seedu/internhub/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ashleygoh1":1,"-":27}},{"path":"src/main/java/seedu/internhub/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":1,"-":27}},{"path":"src/main/java/seedu/internhub/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ashleygoh1":1,"-":12}},{"path":"src/main/java/seedu/internhub/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.MainApp;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.StringUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/jayme_logo.png\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ashleygoh1":6,"-":82}},{"path":"src/main/java/seedu/internhub/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.MainApp;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ashleygoh1":2,"-":86}},{"path":"src/main/java/seedu/internhub/ui/ViewPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"public class ViewPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    private static final String FXML \u003d \"ViewPanel.fxml\";","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    public final Person person;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"    private VBox viewPanel;","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    private Label companyName;","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    private Label jobDescription;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"    private Label phone;","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"    private Label address;","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    private Label email;","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    private Label tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"    private Label interviewDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"    private Label internDuration;","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"    private Label salary;","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"    private Label note;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} to display.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"    public ViewPanel(Person person) {","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"        super(FXML);","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        companyName.setText(person.getCompanyName().fullName);","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"        jobDescription.setText(person.getJobDescription().value);","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"        if ((person.getInterviewDate().toString()).equals(\"\")) {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"            interviewDate.setText(\"Interview Date: -\");","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"            interviewDate.setText(\"Interview Date: \" + person.getInterviewDate().toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"        internDuration.setText(person.getInternDuration().value);","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        salary.setText(\"$\" + person.getSalary().value);","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"        if ((person.getNote().value).equals(\"\")) {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"            note.setText(\"-\");","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"            note.setText(person.getNote().value);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"        // Tag : use switch case based on the tag name","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"        switch (person.getTag().getTagShort()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"        case \"NR\":","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"            tag.setStyle(tag.getStyle() + \"-fx-background-color: #Eeec7e\");","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"        case \"OA\":","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"            tag.setStyle(tag.getStyle() + \"-fx-background-color: #Dc7eee\");","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"        case \"I\":","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"            tag.setStyle(tag.getStyle() + \"-fx-background-color: #4b94ea\");","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"Jawad280"},"content":"        case \"R\":","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"            tag.setStyle(tag.getStyle() + \"-fx-background-color: #Ee7e7e\");","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"        case \"O\":","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"            tag.setStyle(tag.getStyle() + \"-fx-background-color: #A9ee7e\");","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"Jawad280"},"content":"        default:","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"            tag.setStyle(tag.getStyle());","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"Jawad280"},"content":"        tag.setText(person.getTag().getTagName());","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Jawad280":75,"ashleygoh1":11}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"/*----------------------------------- Extra Stuff, idk what they do --------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"    -fx-background-color: #bae1ff;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":".label { //file and help","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":".jd {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"    -fx-text-fill: #0065d6;","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"     -fx-background-color: derive(#bae1ff, 20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#bae1ff, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: derive(#bae1ff, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#bae1ff, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #bae1ff;","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #bae1ff;","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#bae1ff, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#fab9b3, 20%);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":149,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#fab9b3, 50%);","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"eunrcn"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"eunrcn"},"content":"    -fx-effect: innershadow(gaussian, #fab9b3, 10, 0, 0, 0);","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"eunrcn"},"content":"#tags {","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"eunrcn"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"eunrcn"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"eunrcn"},"content":"#tags .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"eunrcn"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"eunrcn"},"content":"/*----------------------------------------- Menu Style ------------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"eunrcn"},"content":".context-menu {","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#bae1ff, 50%);","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"eunrcn"},"content":".context-menu .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"eunrcn"},"content":".menu-bar {","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#fab9b3, 20%); //pink at top","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"eunrcn"},"content":".menu-bar .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"eunrcn"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"eunrcn"},"content":".menu .left-container {","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #fab9b3;","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"eunrcn"},"content":"/*----------------------------------------- Command Box Style ------------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":226,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #ffdfba; // orange","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":228,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: #1d1d1d;","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":231,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":233,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":236,"author":{"gitId":"eunrcn"},"content":"/*----------------------------------------- Result Display Style -----------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"eunrcn"},"content":".result-display {","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #1d1d1d; // border for user output","lastModifiedDate":"2024-03-31"},{"lineNumber":240,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"eunrcn"},"content":".result-display .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #bae1ff; // blue","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":250,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #ffdfba; //orange","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":254,"author":{"gitId":"eunrcn"},"content":"/*-------------------------------------------- Left Table Style ------------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"eunrcn"},"content":".table-view {","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"eunrcn"},"content":"    -fx-base: #bae1ff;","lastModifiedDate":"2024-03-31"},{"lineNumber":258,"author":{"gitId":"eunrcn"},"content":"    -fx-control-inner-background: #fab9b3;","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 5;","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-03-30"},{"lineNumber":261,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #bae1ff;","lastModifiedDate":"2024-03-31"},{"lineNumber":262,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":263,"author":{"gitId":"eunrcn"},"content":"    /* Curved corners */","lastModifiedDate":"2024-03-31"},{"lineNumber":264,"author":{"gitId":"eunrcn"},"content":"    -fx-border-radius: 10px; // no effect","lastModifiedDate":"2024-03-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":267,"author":{"gitId":"eunrcn"},"content":"/* when table is empty, ui shows gray instead of blue*/","lastModifiedDate":"2024-03-31"},{"lineNumber":268,"author":{"gitId":"eunrcn"},"content":".table-view:empty {","lastModifiedDate":"2024-03-31"},{"lineNumber":269,"author":{"gitId":"Jawad280"},"content":"    -fx-background-color: #bae1ff !important;","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":272,"author":{"gitId":"eunrcn"},"content":".table-view .column-header-background {","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"Jawad280"},"content":"    -fx-background-color: #bae1ff;","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"eunrcn"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"eunrcn"},"content":"    -fx-size: 35;","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #bae1ff; // no effect","lastModifiedDate":"2024-03-31"},{"lineNumber":280,"author":{"gitId":"eunrcn"},"content":"    /*","lastModifiedDate":"2024-03-31"},{"lineNumber":281,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color:","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"eunrcn"},"content":"        transparent","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"eunrcn"},"content":"        transparent","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"eunrcn"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"eunrcn"},"content":"        transparent;","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":287,"author":{"gitId":"eunrcn"},"content":"    -fx-border-insets: 0 10 1 0;*/","lastModifiedDate":"2024-03-31"},{"lineNumber":288,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"eunrcn"},"content":".table-view .column-header .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-30"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":294,"author":{"gitId":"eunrcn"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"eunrcn"},"content":"    /* -fx-opacity: 1; */","lastModifiedDate":"2024-03-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":297,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":298,"author":{"gitId":"eunrcn"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #fab9b3","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"eunrcn"},"content":"/*----------------------------------------- Contact Cell Style ------------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"eunrcn"},"content":".list-view {","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"eunrcn"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"Jawad280"},"content":"    -fx-background-color: derive(#bae1ff, 20%); /* empty left table will default to blue */","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"eunrcn"},"content":"    /* -fx-background-radius: 10px;  Curved corners */","lastModifiedDate":"2024-03-31"},{"lineNumber":309,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: black; /* Set border color to black */","lastModifiedDate":"2024-03-31"},{"lineNumber":310,"author":{"gitId":"eunrcn"},"content":"    /* -fx-border-radius: 10px;  Curved corners for borders */","lastModifiedDate":"2024-03-31"},{"lineNumber":311,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"eunrcn"},"content":".list-cell {","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"eunrcn"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":315,"author":{"gitId":"eunrcn"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":317,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":318,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":319,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":320,"author":{"gitId":"eunrcn"},"content":".list-cell:filled:even {","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #ffdfba; //orange","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":323,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":324,"author":{"gitId":"eunrcn"},"content":".list-cell:filled:odd {","lastModifiedDate":"2024-03-29"},{"lineNumber":325,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #fff7ed; //lighter orange","lastModifiedDate":"2024-03-31"},{"lineNumber":326,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":327,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":328,"author":{"gitId":"eunrcn"},"content":".list-cell:filled:selected {","lastModifiedDate":"2024-03-29"},{"lineNumber":329,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #fab9b3;","lastModifiedDate":"2024-03-29"},{"lineNumber":330,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":331,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":332,"author":{"gitId":"eunrcn"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2024-03-29"},{"lineNumber":333,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2024-03-29"},{"lineNumber":334,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-29"},{"lineNumber":335,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":336,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":337,"author":{"gitId":"Jawad280"},"content":"/* If this is included, unable to change the color of the text in the cells","lastModifiedDate":"2024-04-02"},{"lineNumber":338,"author":{"gitId":"eunrcn"},"content":".list-cell .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":339,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-29"},{"lineNumber":340,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":341,"author":{"gitId":"Jawad280"},"content":"*/","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":343,"author":{"gitId":"Jawad280"},"content":".tag_list_bubble {","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"Jawad280"},"content":"    -fx-padding: 6;","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"Jawad280"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2024-04-02"},{"lineNumber":346,"author":{"gitId":"Jawad280"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-04-02"},{"lineNumber":347,"author":{"gitId":"Jawad280"},"content":"    -fx-border-color: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":348,"author":{"gitId":"Jawad280"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-04-02"},{"lineNumber":349,"author":{"gitId":"Jawad280"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"Jawad280"},"content":"    -fx-pref-width: 120px;","lastModifiedDate":"2024-04-02"},{"lineNumber":351,"author":{"gitId":"Jawad280"},"content":"    -fx-alignment: center;","lastModifiedDate":"2024-04-02"},{"lineNumber":352,"author":{"gitId":"Jawad280"},"content":"    -fx-text-fill: black","lastModifiedDate":"2024-04-02"},{"lineNumber":353,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":354,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":355,"author":{"gitId":"eunrcn"},"content":"/*-------------------------------------------- Split Pane Style ----------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":356,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":357,"author":{"gitId":"eunrcn"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2024-03-29"},{"lineNumber":358,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(grey, 20%);","lastModifiedDate":"2024-03-29"},{"lineNumber":359,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: transparent transparent transparent grey;","lastModifiedDate":"2024-03-29"},{"lineNumber":360,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":361,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":362,"author":{"gitId":"eunrcn"},"content":".split-pane {","lastModifiedDate":"2024-03-29"},{"lineNumber":363,"author":{"gitId":"eunrcn"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2024-03-29"},{"lineNumber":364,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-29"},{"lineNumber":365,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(grey, 20%);","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":367,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":368,"author":{"gitId":"eunrcn"},"content":"/*-------------------------------------------- Tab Pane Style ------------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":369,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":370,"author":{"gitId":"eunrcn"},"content":".tab-pane {","lastModifiedDate":"2024-03-29"},{"lineNumber":371,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2024-03-29"},{"lineNumber":372,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":373,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":374,"author":{"gitId":"eunrcn"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2024-03-29"},{"lineNumber":375,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":376,"author":{"gitId":"eunrcn"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":377,"author":{"gitId":"eunrcn"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":378,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":379,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":380,"author":{"gitId":"eunrcn"},"content":"/*------------------------------------------- Pane Border Style ------------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":381,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":382,"author":{"gitId":"eunrcn"},"content":".pane-with-border {","lastModifiedDate":"2024-03-29"},{"lineNumber":383,"author":{"gitId":"eunrcn"},"content":"     -fx-background-color: derive(#bae1ff, 20%); //blue background","lastModifiedDate":"2024-03-29"},{"lineNumber":384,"author":{"gitId":"eunrcn"},"content":"     -fx-border-color: derive(#bae1ff, 10%);","lastModifiedDate":"2024-03-29"},{"lineNumber":385,"author":{"gitId":"eunrcn"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2024-03-29"},{"lineNumber":386,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":387,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"eunrcn"},"content":"/*------------------------------------- Status Bar Footer Style ------------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":389,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":390,"author":{"gitId":"eunrcn"},"content":".status-bar {","lastModifiedDate":"2024-03-29"},{"lineNumber":391,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#fab9b3, 30%); //pink at the bottom","lastModifiedDate":"2024-03-29"},{"lineNumber":392,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":393,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":394,"author":{"gitId":"eunrcn"},"content":".status-bar .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":395,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-30"},{"lineNumber":396,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-29"},{"lineNumber":397,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2024-03-29"},{"lineNumber":398,"author":{"gitId":"eunrcn"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2024-03-29"},{"lineNumber":399,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":400,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":401,"author":{"gitId":"eunrcn"},"content":".status-bar-with-border {","lastModifiedDate":"2024-03-29"},{"lineNumber":402,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#fab9b3, 30%); //pink at the bottom","lastModifiedDate":"2024-03-29"},{"lineNumber":403,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2024-03-29"},{"lineNumber":404,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-03-29"},{"lineNumber":405,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":406,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":407,"author":{"gitId":"eunrcn"},"content":".status-bar-with-border .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":408,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-29"},{"lineNumber":409,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":410,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":411,"author":{"gitId":"eunrcn"},"content":"/*----------------------------------------- Viewing Card Style ------------------------------------------------------*/","lastModifiedDate":"2024-03-29"},{"lineNumber":412,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":413,"author":{"gitId":"Jawad280"},"content":".cell-header {","lastModifiedDate":"2024-03-11"},{"lineNumber":414,"author":{"gitId":"Jawad280"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-11"},{"lineNumber":415,"author":{"gitId":"Jawad280"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-11"},{"lineNumber":416,"author":{"gitId":"Jawad280"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2024-03-11"},{"lineNumber":417,"author":{"gitId":"Jawad280"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-11"},{"lineNumber":418,"author":{"gitId":"eunrcn"},"content":"    -fx-underline: true; /* Underline text */","lastModifiedDate":"2024-03-31"},{"lineNumber":419,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":420,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":421,"author":{"gitId":"Jawad280"},"content":".cell-subHeader {","lastModifiedDate":"2024-03-11"},{"lineNumber":422,"author":{"gitId":"Jawad280"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-11"},{"lineNumber":423,"author":{"gitId":"Jawad280"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2024-03-11"},{"lineNumber":424,"author":{"gitId":"Jawad280"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2024-03-11"},{"lineNumber":425,"author":{"gitId":"Jawad280"},"content":"    -fx-text-fill: #0065d6;","lastModifiedDate":"2024-03-11"},{"lineNumber":426,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":427,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":428,"author":{"gitId":"Jawad280"},"content":".cell-content {","lastModifiedDate":"2024-03-11"},{"lineNumber":429,"author":{"gitId":"Jawad280"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-11"},{"lineNumber":430,"author":{"gitId":"Jawad280"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2024-03-11"},{"lineNumber":431,"author":{"gitId":"Jawad280"},"content":"    -fx-text-fill: #2a3166;","lastModifiedDate":"2024-03-11"},{"lineNumber":432,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":433,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":434,"author":{"gitId":"Jawad280"},"content":".cell-content-header {","lastModifiedDate":"2024-03-11"},{"lineNumber":435,"author":{"gitId":"Jawad280"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-11"},{"lineNumber":436,"author":{"gitId":"Jawad280"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2024-03-11"},{"lineNumber":437,"author":{"gitId":"Jawad280"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2024-03-11"},{"lineNumber":438,"author":{"gitId":"Jawad280"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-11"},{"lineNumber":439,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":440,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":441,"author":{"gitId":"Jawad280"},"content":".cell-date {","lastModifiedDate":"2024-03-11"},{"lineNumber":442,"author":{"gitId":"Jawad280"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-11"},{"lineNumber":443,"author":{"gitId":"Jawad280"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-11"},{"lineNumber":444,"author":{"gitId":"Jawad280"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2024-03-11"},{"lineNumber":445,"author":{"gitId":"Jawad280"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-11"},{"lineNumber":446,"author":{"gitId":"Jawad280"},"content":"    -fx-padding: 15;","lastModifiedDate":"2024-03-11"},{"lineNumber":447,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #E23838; //less bright red - coral","lastModifiedDate":"2024-03-29"},{"lineNumber":448,"author":{"gitId":"Jawad280"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2024-03-11"},{"lineNumber":449,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 10px; /* Curved corners */","lastModifiedDate":"2024-03-31"},{"lineNumber":450,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: black; /* Set border color to black */","lastModifiedDate":"2024-03-31"},{"lineNumber":451,"author":{"gitId":"eunrcn"},"content":"    -fx-border-radius: 10px; /* Curved corners for borders */","lastModifiedDate":"2024-03-31"},{"lineNumber":452,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":453,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":454,"author":{"gitId":"Jawad280"},"content":".cell-tag {","lastModifiedDate":"2024-03-11"},{"lineNumber":455,"author":{"gitId":"Jawad280"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-11"},{"lineNumber":456,"author":{"gitId":"Jawad280"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-11"},{"lineNumber":457,"author":{"gitId":"Jawad280"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-03-11"},{"lineNumber":458,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-29"},{"lineNumber":459,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #fab9b3;","lastModifiedDate":"2024-03-29"},{"lineNumber":460,"author":{"gitId":"Jawad280"},"content":"    -fx-padding: 8;","lastModifiedDate":"2024-03-11"},{"lineNumber":461,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":462,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: black;","lastModifiedDate":"2024-03-29"},{"lineNumber":463,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-03-29"},{"lineNumber":464,"author":{"gitId":"eunrcn"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2024-03-29"},{"lineNumber":465,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":466,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":467,"author":{"gitId":"Jawad280"},"content":".view-panel-cell {","lastModifiedDate":"2024-03-11"},{"lineNumber":468,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #ffdfba; //orange view","lastModifiedDate":"2024-03-29"},{"lineNumber":469,"author":{"gitId":"Jawad280"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-11"},{"lineNumber":470,"author":{"gitId":"Jawad280"},"content":"    -width: 450;","lastModifiedDate":"2024-03-11"},{"lineNumber":471,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: black; /* Set border color to black */","lastModifiedDate":"2024-03-31"},{"lineNumber":472,"author":{"gitId":"eunrcn"},"content":"    -fx-border-radius: 10px; /* Curved corners for borders */","lastModifiedDate":"2024-03-31"},{"lineNumber":473,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"eunrcn":230,"Jawad280":73,"-":170}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"    -fx-background: #ceeaff;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jawad280":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"ashleygoh1":2,"-":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"chenyixin0"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"         title\u003d\"InternHub App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"    \u003cImage url\u003d\"@/images/jayme_logo.png\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"450\" prefWidth\u003d\"450\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"          \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" minWidth\u003d\"475\" prefWidth\u003d\"475\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"chenyixin0"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"              \u003cVBox styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" prefWidth\u003d\"475\" \u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"                \u003cVBox VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"viewPanelPlaceholder\" spacing\u003d\"20\"\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"chenyixin0"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"chenyixin0"},"content":"          \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"chenyixin0":4,"Jawad280":12,"ashleygoh1":2,"-":58}},{"path":"src/main/resources/view/OldDarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":".background {","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":".label {","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":".label-bright {","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":".label-header {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":".text-field {","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":".tab-pane {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":".table-view {","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 5;","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":".table-view .column-header-background {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"    -fx-size: 35;","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color:","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"        transparent","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"        transparent","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"        transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":".table-view .column-header .label {","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":".split-pane {","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":".list-view {","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":".list-cell {","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"eunrcn"},"content":".list-cell:filled:even {","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"eunrcn"},"content":".list-cell:filled:odd {","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"eunrcn"},"content":".list-cell:filled:selected {","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"eunrcn"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"eunrcn"},"content":".list-cell .label {","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"eunrcn"},"content":".cell_big_label {","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"eunrcn"},"content":".cell_small_label {","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"eunrcn"},"content":".stack-pane {","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"eunrcn"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"eunrcn"},"content":".pane-with-border {","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"eunrcn"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"eunrcn"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"eunrcn"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"eunrcn"},"content":".status-bar {","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"eunrcn"},"content":".result-display {","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"eunrcn"},"content":".result-display .label {","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"eunrcn"},"content":".status-bar .label {","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"eunrcn"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"eunrcn"},"content":".status-bar-with-border {","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"eunrcn"},"content":".status-bar-with-border .label {","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"eunrcn"},"content":".grid-pane {","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"eunrcn"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"eunrcn"},"content":".context-menu {","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"eunrcn"},"content":".context-menu .label {","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"eunrcn"},"content":".menu-bar {","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"eunrcn"},"content":".menu-bar .label {","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"eunrcn"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"eunrcn"},"content":".menu .left-container {","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: black;","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"eunrcn"},"content":"/*","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"eunrcn"},"content":" * Metro style Push Button","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"eunrcn"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"eunrcn"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"eunrcn"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"eunrcn"},"content":".button {","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"eunrcn"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"eunrcn"},"content":".button:hover {","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"eunrcn"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"eunrcn"},"content":"  -fx-background-color: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"eunrcn"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2024-03-31"},{"lineNumber":234,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":235,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":236,"author":{"gitId":"eunrcn"},"content":".button:focused {","lastModifiedDate":"2024-03-31"},{"lineNumber":237,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2024-03-31"},{"lineNumber":238,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":239,"author":{"gitId":"eunrcn"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2024-03-31"},{"lineNumber":240,"author":{"gitId":"eunrcn"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":241,"author":{"gitId":"eunrcn"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":242,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":243,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":244,"author":{"gitId":"eunrcn"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2024-03-31"},{"lineNumber":245,"author":{"gitId":"eunrcn"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2024-03-31"},{"lineNumber":246,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":248,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":249,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":250,"author":{"gitId":"eunrcn"},"content":".button:default {","lastModifiedDate":"2024-03-31"},{"lineNumber":251,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2024-03-31"},{"lineNumber":252,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2024-03-31"},{"lineNumber":253,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":254,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":255,"author":{"gitId":"eunrcn"},"content":".button:default:hover {","lastModifiedDate":"2024-03-31"},{"lineNumber":256,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2024-03-31"},{"lineNumber":257,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":258,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":259,"author":{"gitId":"eunrcn"},"content":".dialog-pane {","lastModifiedDate":"2024-03-31"},{"lineNumber":260,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2024-03-31"},{"lineNumber":261,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":262,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":263,"author":{"gitId":"eunrcn"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2024-03-31"},{"lineNumber":264,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2024-03-31"},{"lineNumber":265,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":266,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":267,"author":{"gitId":"eunrcn"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2024-03-31"},{"lineNumber":268,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-03-31"},{"lineNumber":269,"author":{"gitId":"eunrcn"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-31"},{"lineNumber":270,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":271,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":273,"author":{"gitId":"eunrcn"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2024-03-31"},{"lineNumber":274,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2024-03-31"},{"lineNumber":275,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":277,"author":{"gitId":"eunrcn"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2024-03-31"},{"lineNumber":278,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-03-31"},{"lineNumber":279,"author":{"gitId":"eunrcn"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2024-03-31"},{"lineNumber":280,"author":{"gitId":"eunrcn"},"content":"    -fx-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":281,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":282,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":283,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":284,"author":{"gitId":"eunrcn"},"content":".scroll-bar {","lastModifiedDate":"2024-03-31"},{"lineNumber":285,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":286,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":287,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":288,"author":{"gitId":"eunrcn"},"content":".scroll-bar .thumb {","lastModifiedDate":"2024-03-31"},{"lineNumber":289,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2024-03-31"},{"lineNumber":290,"author":{"gitId":"eunrcn"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":291,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":292,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":293,"author":{"gitId":"eunrcn"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2024-03-31"},{"lineNumber":294,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":295,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":296,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":297,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":298,"author":{"gitId":"eunrcn"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2024-03-31"},{"lineNumber":299,"author":{"gitId":"eunrcn"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2024-03-31"},{"lineNumber":300,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":301,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":302,"author":{"gitId":"eunrcn"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2024-03-31"},{"lineNumber":303,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2024-03-31"},{"lineNumber":304,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":305,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":306,"author":{"gitId":"eunrcn"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2024-03-31"},{"lineNumber":307,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":308,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":309,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":310,"author":{"gitId":"eunrcn"},"content":"#cardPane {","lastModifiedDate":"2024-03-31"},{"lineNumber":311,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":312,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":313,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":314,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":315,"author":{"gitId":"eunrcn"},"content":"#commandTypeLabel {","lastModifiedDate":"2024-03-31"},{"lineNumber":316,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2024-03-31"},{"lineNumber":317,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2024-03-31"},{"lineNumber":318,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":319,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":320,"author":{"gitId":"eunrcn"},"content":"#commandTextField {","lastModifiedDate":"2024-03-31"},{"lineNumber":321,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2024-03-31"},{"lineNumber":322,"author":{"gitId":"eunrcn"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":323,"author":{"gitId":"eunrcn"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2024-03-31"},{"lineNumber":324,"author":{"gitId":"eunrcn"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":325,"author":{"gitId":"eunrcn"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":326,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-31"},{"lineNumber":327,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":328,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":329,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":330,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":331,"author":{"gitId":"eunrcn"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2024-03-31"},{"lineNumber":332,"author":{"gitId":"eunrcn"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2024-03-31"},{"lineNumber":333,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":334,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":335,"author":{"gitId":"eunrcn"},"content":"#resultDisplay .content {","lastModifiedDate":"2024-03-31"},{"lineNumber":336,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2024-03-31"},{"lineNumber":337,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":338,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":339,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":340,"author":{"gitId":"eunrcn"},"content":"#tags {","lastModifiedDate":"2024-03-31"},{"lineNumber":341,"author":{"gitId":"eunrcn"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-31"},{"lineNumber":342,"author":{"gitId":"eunrcn"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":343,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":344,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":345,"author":{"gitId":"eunrcn"},"content":"#tags .label {","lastModifiedDate":"2024-03-31"},{"lineNumber":346,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":347,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2024-03-31"},{"lineNumber":348,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":349,"author":{"gitId":"eunrcn"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-31"},{"lineNumber":350,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-31"},{"lineNumber":351,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-31"},{"lineNumber":352,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":353,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":354,"author":{"gitId":"eunrcn"},"content":"/*","lastModifiedDate":"2024-03-31"},{"lineNumber":355,"author":{"gitId":"eunrcn"},"content":"Custom Styles","lastModifiedDate":"2024-03-31"},{"lineNumber":356,"author":{"gitId":"eunrcn"},"content":"*/","lastModifiedDate":"2024-03-31"},{"lineNumber":357,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":358,"author":{"gitId":"eunrcn"},"content":".cell-header {","lastModifiedDate":"2024-03-31"},{"lineNumber":359,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-31"},{"lineNumber":360,"author":{"gitId":"eunrcn"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-31"},{"lineNumber":361,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2024-03-31"},{"lineNumber":362,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-31"},{"lineNumber":363,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":364,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":365,"author":{"gitId":"eunrcn"},"content":".cell-subHeader {","lastModifiedDate":"2024-03-31"},{"lineNumber":366,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-31"},{"lineNumber":367,"author":{"gitId":"eunrcn"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2024-03-31"},{"lineNumber":368,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2024-03-31"},{"lineNumber":369,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #0065d6;","lastModifiedDate":"2024-03-31"},{"lineNumber":370,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":371,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":372,"author":{"gitId":"eunrcn"},"content":".cell-content {","lastModifiedDate":"2024-03-31"},{"lineNumber":373,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-31"},{"lineNumber":374,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2024-03-31"},{"lineNumber":375,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: #2a3166;","lastModifiedDate":"2024-03-31"},{"lineNumber":376,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":377,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":378,"author":{"gitId":"eunrcn"},"content":".cell-content-header {","lastModifiedDate":"2024-03-31"},{"lineNumber":379,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-31"},{"lineNumber":380,"author":{"gitId":"eunrcn"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2024-03-31"},{"lineNumber":381,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2024-03-31"},{"lineNumber":382,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-31"},{"lineNumber":383,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":384,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":385,"author":{"gitId":"eunrcn"},"content":".cell-date {","lastModifiedDate":"2024-03-31"},{"lineNumber":386,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-31"},{"lineNumber":387,"author":{"gitId":"eunrcn"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-31"},{"lineNumber":388,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2024-03-31"},{"lineNumber":389,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":390,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 15;","lastModifiedDate":"2024-03-31"},{"lineNumber":391,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #Ce1313;","lastModifiedDate":"2024-03-31"},{"lineNumber":392,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-31"},{"lineNumber":393,"author":{"gitId":"eunrcn"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2024-03-31"},{"lineNumber":394,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":395,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":396,"author":{"gitId":"eunrcn"},"content":".cell-tag {","lastModifiedDate":"2024-03-31"},{"lineNumber":397,"author":{"gitId":"eunrcn"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2024-03-31"},{"lineNumber":398,"author":{"gitId":"eunrcn"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-31"},{"lineNumber":399,"author":{"gitId":"eunrcn"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-03-31"},{"lineNumber":400,"author":{"gitId":"eunrcn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":401,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: #0065d6;","lastModifiedDate":"2024-03-31"},{"lineNumber":402,"author":{"gitId":"eunrcn"},"content":"    -fx-padding: 8;","lastModifiedDate":"2024-03-31"},{"lineNumber":403,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":404,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":405,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":406,"author":{"gitId":"eunrcn"},"content":".view-panel-cell {","lastModifiedDate":"2024-03-31"},{"lineNumber":407,"author":{"gitId":"eunrcn"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":408,"author":{"gitId":"eunrcn"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-31"},{"lineNumber":409,"author":{"gitId":"eunrcn"},"content":"    -width: 450;","lastModifiedDate":"2024-03-31"},{"lineNumber":410,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"eunrcn":410}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        \u003cLabel fx:id\u003d\"tags\" styleClass\u003d\"tag_list_bubble\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"      \u003cLabel fx:id\u003d\"jobDescription\" styleClass\u003d\"jd\" text\u003d\"\\$job description\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"      \u003cLabel fx:id\u003d\"interviewDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$interview date\" /\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jawad280":3,"ashleygoh1":1,"-":32}},{"path":"src/main/resources/view/ViewPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jawad280"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"\u003cVBox id\u003d\"viewPanel\" fx:id\u003d\"ViewPanel\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"      alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" styleClass\u003d\"view-panel-cell\" prefWidth\u003d\"450\" spacing\u003d\"15\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"        \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"        \u003cLabel fx:id\u003d\"companyName\" text\u003d\"\\$first\" styleClass\u003d\"cell-header\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        \u003cLabel fx:id\u003d\"tag\" text\u003d\"\\$tag\" styleClass\u003d\"cell-tag\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    \u003cVBox spacing\u003d\"15\"\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"        \u003cLabel fx:id\u003d\"jobDescription\" text\u003d\"\\$jobDescription\" styleClass\u003d\"cell-subHeader\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel text\u003d\"Phone\" styleClass\u003d\"cell-content-header\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell-content\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel text\u003d\"Address\" styleClass\u003d\"cell-content-header\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell-content\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel text\u003d\"Email\" styleClass\u003d\"cell-content-header\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell-content\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel text\u003d\"Duration\" styleClass\u003d\"cell-content-header\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel fx:id\u003d\"internDuration\" styleClass\u003d\"cell-content\" text\u003d\"\\$internDuration\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel text\u003d\"Salary\" styleClass\u003d\"cell-content-header\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel fx:id\u003d\"salary\" styleClass\u003d\"cell-content\" text\u003d\"\\$salary\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel text\u003d\"Notes\" styleClass\u003d\"cell-content-header\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"            \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell-content\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"    \u003cHBox alignment\u003d\"CENTER\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"        \u003cLabel fx:id\u003d\"interviewDate\" styleClass\u003d\"cell-date\" text\u003d\"\\$interviewDate\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"Jawad280":58,"ashleygoh1":2}},{"path":"src/test/java/seedu/internhub/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"ashleygoh1":1,"-":88}},{"path":"src/test/java/seedu/internhub/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.core;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"ashleygoh1":1,"-":26}},{"path":"src/test/java/seedu/internhub/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.core;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"ashleygoh1":1,"-":15}},{"path":"src/test/java/seedu/internhub/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.core;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":2,"-":133}},{"path":"src/test/java/seedu/internhub/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.core.index;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ashleygoh1":2,"-":65}},{"path":"src/test/java/seedu/internhub/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"    // ensure that group logo exist for the internhub app","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"        assertNotNull(AppUtil.getImage(\"/images/jayme_logo.png\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"ashleygoh1":4,"-":33}},{"path":"src/test/java/seedu/internhub/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"ashleygoh1":3,"-":105}},{"path":"src/test/java/seedu/internhub/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.Config;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ashleygoh1":4,"-":112}},{"path":"src/test/java/seedu/internhub/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":2,"-":21}},{"path":"src/test/java/seedu/internhub/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.SerializableTestClass;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.TestUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":3,"-":42}},{"path":"src/test/java/seedu/internhub/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ashleygoh1":2,"-":141}},{"path":"src/test/java/seedu/internhub/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"//import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INTERN_DURATION_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.JOB_DESCRIPTION_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.TAG_DESC_NO_REPLY;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_NO_REPLY;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ListCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.storage.StorageManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"chenyixin0"},"content":"                // the original test compares expected model and actual model and that one keeps failing so i js","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"chenyixin0"},"content":"                // commented that line out first cuz idk whats going on lol","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"chenyixin0"},"content":"        //assertEquals(expectedModel, model);","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"chenyixin0"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_NO_REPLY + JOB_DESCRIPTION_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"chenyixin0"},"content":"                + INTERN_DURATION_DESC_AMY + SALARY_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"chenyixin0"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_NO_REPLY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chenyixin0":6,"ashleygoh1":30,"-":149}},{"path":"src/test/java/seedu/internhub/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ashleygoh1":10,"-":38}},{"path":"src/test/java/seedu/internhub/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"Jawad280"},"content":"        @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"Jawad280"},"content":"        public Person choosePersonToView(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"Jawad280"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-02-29"},{"lineNumber":164,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"Jawad280"},"content":"        @Override","lastModifiedDate":"2024-03-01"},{"lineNumber":166,"author":{"gitId":"Jawad280"},"content":"        public FilteredList\u003cPerson\u003e generateNewFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-01"},{"lineNumber":167,"author":{"gitId":"Jawad280"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-01"},{"lineNumber":168,"author":{"gitId":"Jawad280"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Jawad280":9,"ashleygoh1":12,"-":192}},{"path":"src/test/java/seedu/internhub/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ashleygoh1":7,"-":25}},{"path":"src/test/java/seedu/internhub/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chenyixin0"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"chenyixin0"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"chenyixin0"},"content":"        // constructor 1: CommandResult(String feedback)","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"chenyixin0"},"content":"        // constructor 2: CommandResult(String feedback, Person viewPerson)","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"chenyixin0"},"content":"        CommandResult commandResultViewPerson \u003d new CommandResult(\"feedback\", ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chenyixin0"},"content":"        // constructor 3: CommandResult(String feedback, FilteredList\u003cPerson\u003e viewList)","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chenyixin0"},"content":"        CommandResult commandResultViewList \u003d new CommandResult(\"feedback\",","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chenyixin0"},"content":"                new FilteredList\u003c\u003e(model.getFilteredPersonList(), PREDICATE_SHOW_ALL_PERSONS));","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"chenyixin0"},"content":"        assertTrue(commandResultViewPerson.equals(new CommandResult(\"feedback\", ALICE)));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"chenyixin0"},"content":"        assertTrue(commandResultViewList.equals(new CommandResult(\"feedback\",","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"chenyixin0"},"content":"                new FilteredList\u003c\u003e(model.getFilteredPersonList(), PREDICATE_SHOW_ALL_PERSONS))));","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"chenyixin0"},"content":"        assertTrue(commandResultViewPerson.equals(commandResultViewPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"chenyixin0"},"content":"        assertTrue(commandResultViewPerson.getViewPerson().equals(ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"chenyixin0"},"content":"        assertTrue(commandResultViewList.equals(commandResultViewList));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"chenyixin0"},"content":"        assertTrue(commandResultViewList.getViewList().equals(","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"chenyixin0"},"content":"                new FilteredList\u003c\u003e(model.getFilteredPersonList(), PREDICATE_SHOW_ALL_PERSONS)));","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"chenyixin0":23,"ashleygoh1":7,"-":63}},{"path":"src/test/java/seedu/internhub/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERN_DURATION;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_JOB_DESCRIPTION;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_TAG_NO_REPLY \u003d \"NR\";","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_TAG_INTERVIEW \u003d \"I\";","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_JOB_DESCRIPTION_AMY \u003d \"Data Science intern\";","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_JOB_DESCRIPTION_BOB \u003d \"Front end developer intern\";","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_INTERVIEW_DATE_AMY \u003d \"15-04-2024 0900\";","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_INTERVIEW_DATE_BOB \u003d \"15-04-2024 1200\";","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_INTERN_DURATION_AMY \u003d \"6 months\";","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_INTERN_DURATION_BOB \u003d \"3 months\";","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_SALARY_AMY \u003d \"500\";","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"    public static final String VALID_SALARY_BOB \u003d \"1000\";","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"    public static final String TAG_DESC_NO_REPLY \u003d \" \" + PREFIX_TAG + VALID_TAG_NO_REPLY;","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"    public static final String TAG_DESC_INTERVIEW \u003d \" \" + PREFIX_TAG + VALID_TAG_INTERVIEW;","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"ashleygoh1"},"content":"    public static final String JOB_DESCRIPTION_DESC_AMY \u003d \" \" + PREFIX_JOB_DESCRIPTION + VALID_JOB_DESCRIPTION_AMY;","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"ashleygoh1"},"content":"    public static final String JOB_DESCRIPTION_DESC_BOB \u003d \" \" + PREFIX_JOB_DESCRIPTION + VALID_JOB_DESCRIPTION_BOB;","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"ashleygoh1"},"content":"    public static final String INTERVIEW_DATE_DESC_AMY \u003d \" \" + PREFIX_INTERVIEW_DATE + VALID_INTERVIEW_DATE_AMY;","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"ashleygoh1"},"content":"    public static final String INTERVIEW_DATE_DESC_BOB \u003d \" \" + PREFIX_INTERVIEW_DATE + VALID_INTERVIEW_DATE_BOB;","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"ashleygoh1"},"content":"    public static final String INTERN_DURATION_DESC_AMY \u003d \" \" + PREFIX_INTERN_DURATION + VALID_INTERN_DURATION_AMY;","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"ashleygoh1"},"content":"    public static final String INTERN_DURATION_DESC_BOB \u003d \" \" + PREFIX_INTERN_DURATION + VALID_INTERN_DURATION_BOB;","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"    public static final String SALARY_DESC_AMY \u003d \" \" + PREFIX_SALARY + VALID_SALARY_AMY;","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"ashleygoh1"},"content":"    public static final String SALARY_DESC_BOB \u003d \" \" + PREFIX_SALARY + VALID_SALARY_BOB;","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"ashleygoh1"},"content":"    public static final String INVALID_JOB_DESCRIPTION_DESC \u003d \" \" + PREFIX_JOB_DESCRIPTION;","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"ashleygoh1"},"content":"    // empty string not allowed for job description","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"ashleygoh1"},"content":"    public static final String INVALID_INTERN_DURATION_DESC \u003d \" \" + PREFIX_INTERN_DURATION;","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"ashleygoh1"},"content":"    // empty string not allowed for intern duration","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"ashleygoh1"},"content":"    public static final String INVALID_SALARY_DESC \u003d \" \" + PREFIX_SALARY + \"0\";","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"ashleygoh1"},"content":"    // salary need to be above 0 dollar","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2024-03-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"Jawad280"},"content":"                .withTags(VALID_TAG_NO_REPLY).withJobDescription(VALID_JOB_DESCRIPTION_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"                .withInterviewDate(VALID_INTERVIEW_DATE_AMY).withInternDuration(VALID_INTERN_DURATION_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"Jawad280"},"content":"                .withSalary(VALID_SALARY_AMY).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"                .withTags(VALID_TAG_NO_REPLY).withJobDescription(VALID_JOB_DESCRIPTION_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"                .withInterviewDate(VALID_INTERVIEW_DATE_BOB).withInternDuration(VALID_INTERN_DURATION_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"                .withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"ashleygoh1"},"content":"        final String[] splitName \u003d person.getCompanyName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-02-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"eunrcn":1,"Jawad280":6,"ashleygoh1":46,"-":105}},{"path":"src/test/java/seedu/internhub/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ashleygoh1":13,"-":107}},{"path":"src/test/java/seedu/internhub/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERN_DURATION_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERVIEW_DATE_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_JOB_DESCRIPTION_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_INTERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"        Person editedPerson \u003d ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).withTags(\"NR\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"                EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"        );","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"        assertCommandSuccess(editCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"ashleygoh1"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_INTERVIEW)","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"                .withJobDescription(VALID_JOB_DESCRIPTION_BOB).withInterviewDate(VALID_INTERVIEW_DATE_BOB)","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"                .withInternDuration(VALID_INTERN_DURATION_BOB).withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"chenyixin0"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_INTERVIEW)","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"                .withJobDescription(VALID_JOB_DESCRIPTION_BOB).withInterviewDate(VALID_INTERVIEW_DATE_BOB)","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"                .withInternDuration(VALID_INTERN_DURATION_BOB).withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"            Messages.format(editedPerson));","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"        // Print actual values for debugging","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Actual Message: \" + expectedMessage);","lastModifiedDate":"2024-03-04"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Actual Model: \" + expectedModel);","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"eunrcn"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":116,"author":{"gitId":"eunrcn"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-04"},{"lineNumber":117,"author":{"gitId":"eunrcn"},"content":"            Messages.format(editedPerson));","lastModifiedDate":"2024-03-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2024-03-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2024-03-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2024-03-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2024-03-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2024-03-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2024-03-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"eunrcn":15,"chenyixin0":1,"Jawad280":7,"ashleygoh1":31,"-":153}},{"path":"src/test/java/seedu/internhub/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERN_DURATION_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERVIEW_DATE_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_JOB_DESCRIPTION_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_SALARY_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_INTERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_NO_REPLY;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"    public void equals() {","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"                .withTags(VALID_TAG_NO_REPLY).withJobDescription(VALID_JOB_DESCRIPTION_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"                .withInterviewDate(VALID_INTERVIEW_DATE_AMY).withInternDuration(VALID_INTERN_DURATION_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"                .withSalary(VALID_SALARY_AMY).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_INTERVIEW).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{Edited Person:\"","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"                + editPersonDescriptor.getName().orElse(null) + \"; Phone: \"","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \"; Email: \"","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \"; Address: \"","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \"; Tags: \"","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"                + editPersonDescriptor.getTag().orElse(null) + \"; Job Description: \"","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"                + editPersonDescriptor.getJobDescription().orElse(null) + \"; Interview Date: \"","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"                + editPersonDescriptor.getInterviewDate().orElse(null) + \"; Internship Duration: \"","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"                + editPersonDescriptor.getInternDuration().orElse(null) + \"; Salary: \"","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"                + editPersonDescriptor.getSalary().orElse(null) + \"}\";","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"eunrcn":61,"Jawad280":5,"ashleygoh1":20}},{"path":"src/test/java/seedu/internhub/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ashleygoh1":5,"-":15}},{"path":"src/test/java/seedu/internhub/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"chenyixin0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"chenyixin0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"chenyixin0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"chenyixin0"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"chenyixin0"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"chenyixin0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.MatchingTagPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"chenyixin0"},"content":"public class FilterCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"chenyixin0"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"chenyixin0"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"chenyixin0"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"chenyixin0"},"content":"                new MatchingTagPredicate(\"I\");","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"chenyixin0"},"content":"                new MatchingTagPredicate(\"NR\");","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"chenyixin0"},"content":"        FilterCommand filterFirstTag \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"chenyixin0"},"content":"        FilterCommand filterSecondTag \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"chenyixin0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"chenyixin0"},"content":"        assertTrue(filterFirstTag.equals(filterFirstTag));","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"chenyixin0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"        FilterCommand filterFirstTagCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        assertTrue(filterFirstTagCopy.equals(filterFirstTagCopy));","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"chenyixin0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"chenyixin0"},"content":"        assertFalse(filterFirstTag.equals(1));","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"chenyixin0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"chenyixin0"},"content":"        assertFalse(filterFirstTag.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"chenyixin0"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"chenyixin0"},"content":"        assertFalse(filterFirstTag.equals(filterSecondTag));","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"chenyixin0"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"chenyixin0"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate predicate \u003d new MatchingTagPredicate(\" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"chenyixin0"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"chenyixin0"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"chenyixin0"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"chenyixin0"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"chenyixin0"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate predicate \u003d new MatchingTagPredicate(\"I\");","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"chenyixin0"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"chenyixin0"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"chenyixin0"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(Arrays.asList(BENSON, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"chenyixin0"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate predicate \u003d new MatchingTagPredicate(\"keyword\");","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"chenyixin0"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"chenyixin0"},"content":"        String expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"chenyixin0"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"chenyixin0":69,"Jawad280":2,"ashleygoh1":10}},{"path":"src/test/java/seedu/internhub/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"chenyixin0"},"content":"        // String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"chenyixin0"},"content":"        // this test will always fail because the way I implemented the find the list of found names will be","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"chenyixin0"},"content":"        // returned as a separate list instead of modifying the existing list inside the model which is","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"chenyixin0"},"content":"        // what assertCommandSuccess checks for.","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"chenyixin0"},"content":"        // with the current implementation this test is also kind of irrelevant since the find command will not","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"chenyixin0"},"content":"        // actually modify the model itself.","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"chenyixin0"},"content":"        //assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(Collections.emptyList(), model.generateNewFilteredPersonList(predicate));","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(Collections.emptyList(), command.execute(model).getViewList());","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(0, model.generateNewFilteredPersonList(predicate).size());","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"chenyixin0"},"content":"        // theres no view size i hope that\u0027s not a problem","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"chenyixin0"},"content":"        // String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"chenyixin0"},"content":"        // expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"chenyixin0"},"content":"        //following line will always fail; see above","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"chenyixin0"},"content":"        //assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.generateNewFilteredPersonList(predicate));","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), command.execute(model).getViewList());","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(3, model.generateNewFilteredPersonList(predicate).size());","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chenyixin0":23,"ashleygoh1":9,"-":73}},{"path":"src/test/java/seedu/internhub/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ashleygoh1":5,"-":15}},{"path":"src/test/java/seedu/internhub/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ashleygoh1":8,"-":31}},{"path":"src/test/java/seedu/internhub/logic/commands/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"class NoteCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    void execute_validIndex_success() throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        Person personToView \u003d personList.get(0);","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"        CommandResult commandResult \u003d noteCommand.execute(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        assertEquals(\"edit 1 n/\" + personToView.getNote(), commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"        assertEquals(personToView, commandResult.getViewPerson());","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"    void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"        Index invalidIndex \u003d Index.fromZeroBased(personList.size() + 10);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(invalidIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"        assertThrows(CommandException.class, () -\u003e noteCommand.execute(model));","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"    void equals_sameObject_true() {","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        assertEquals(noteCommand, noteCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"    void equals_differentObject_false() {","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        NoteCommand noteCommand1 \u003d new NoteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"        NoteCommand noteCommand2 \u003d new NoteCommand(Index.fromZeroBased(1));","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"        assertNotEquals(noteCommand1, noteCommand2);","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Jawad280"},"content":"    void equals_differentClass_false() {","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Jawad280"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"        Object otherObject \u003d new Object();","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"        assertNotEquals(noteCommand, otherObject);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Jawad280"},"content":"    public void toString_validIndex_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Jawad280"},"content":"        // Create an Index object","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Jawad280"},"content":"        Index index \u003d Index.fromZeroBased(3);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Jawad280"},"content":"        // Create a NoteCommand object using the Index","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(index);","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Jawad280"},"content":"        // Create the expected string representation using variables","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"ashleygoh1"},"content":"        String expectedToString \u003d String.format(\"seedu.internhub.logic.commands.NoteCommand{targetIndex\u003d%s}\", index);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"        // Perform the assertion","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Jawad280"},"content":"        assertEquals(expectedToString, noteCommand.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Jawad280":70,"ashleygoh1":9}},{"path":"src/test/java/seedu/internhub/logic/commands/ReminderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"class ReminderCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    private Model model;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"    public void setup() {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        String plus1Days \u003d LocalDateTime.now().plusDays(1).format(formatter);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"        String plus4Days \u003d LocalDateTime.now().plusDays(4).format(formatter);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"        String plus6Days \u003d LocalDateTime.now().plusDays(6).format(formatter);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"        String plus8Days \u003d LocalDateTime.now().plusDays(8).format(formatter);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\")","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"                .withInterviewDate(plus1Days)","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"                .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\")","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"                .withInterviewDate(plus4Days)","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"                .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"        Person charlie \u003d new PersonBuilder().withName(\"Charlie\")","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"                .withInterviewDate(plus6Days)","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"                .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"        Person dave \u003d new PersonBuilder().withName(\"Dave\")","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"                .withInterviewDate(plus8Days)","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"                .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"        ab.addPerson(alice);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"        ab.addPerson(bob);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        ab.addPerson(charlie);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"        ab.addPerson(dave);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"        model \u003d new ModelManager(ab, new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"    public void execute_afterReminder_showsCorrectMessage() {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"        int numberOfDays \u003d 5;","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"        CommandResult commandResult \u003d new ReminderCommand(numberOfDays).execute(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"        String actualMessage \u003d commandResult.getFeedbackToUser();","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"        String expectedMessage \u003d String.format(ReminderCommand.MESSAGE_SUCCESS, numberOfDays);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"    public void countListSizeAfter1Day() {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"        int numberOfDays \u003d 1;","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"        new ReminderCommand(numberOfDays).execute(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"        assertEquals(1, filteredList.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"    public void countListSizeAfter4Day() {","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"        int numberOfDays \u003d 4;","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"        new ReminderCommand(numberOfDays).execute(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"        assertEquals(2, filteredList.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"    public void countListSizeAfter6Day() {","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"        int numberOfDays \u003d 6;","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"        new ReminderCommand(numberOfDays).execute(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"        assertEquals(3, filteredList.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"    public void countListSizeAfter8Day() {","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"        int numberOfDays \u003d 8;","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"        new ReminderCommand(numberOfDays).execute(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"        assertEquals(4, filteredList.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"eunrcn":82,"Jawad280":16}},{"path":"src/test/java/seedu/internhub/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"class ViewCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    void execute_validIndex_success() throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"        Person personToView \u003d personList.get(0);","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"        CommandResult commandResult \u003d viewCommand.execute(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"        assertEquals(","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"                String.format(","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"                        \"Viewing Person: %s; Phone: %s; Email: %s; Address: %s; Tags: %s; \"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"                                + \"Job Description: %s; Interview Date: %s; Internship Duration: %s; Salary: %s\"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"                                + \"; Note: %s\",","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"                        personToView.getCompanyName(),","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"                        personToView.getPhone(),","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"                        personToView.getEmail(),","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"                        personToView.getAddress(),","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"                        personToView.getTag(),","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"                        personToView.getJobDescription(),","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"                        personToView.getInterviewDate(),","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"                        personToView.getInternDuration(),","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"                        personToView.getSalary(),","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"                        personToView.getNote()","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"                ),","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"                commandResult.getFeedbackToUser()","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"        );","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"        assertEquals(personToView, commandResult.getViewPerson());","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"    void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromZeroBased(10)); // Assuming there are fewer than 10 persons","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"        assertThrows(CommandException.class, () -\u003e viewCommand.execute(model));","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"    void equals_sameObject_true() {","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"        assertEquals(viewCommand, viewCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"    void equals_differentObject_false() {","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"        ViewCommand viewCommand1 \u003d new ViewCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"        ViewCommand viewCommand2 \u003d new ViewCommand(Index.fromZeroBased(1));","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"        assertNotEquals(viewCommand1, viewCommand2);","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"    void equals_differentClass_false() {","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"        Object otherObject \u003d new Object();","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"        assertNotEquals(viewCommand, otherObject);","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"    public void toString_validIndex_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"        // Create an Index object","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"        Index index \u003d Index.fromZeroBased(3);","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"        // Create a ViewCommand object using the Index","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(index);","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"        // Create the expected string representation using variables","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"ashleygoh1"},"content":"        String expectedToString \u003d String.format(\"seedu.internhub.logic.commands.ViewCommand{targetIndex\u003d%s}\", index);","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"        // Perform the assertion","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"        assertEquals(expectedToString, viewCommand.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"eunrcn":84,"ashleygoh1":14}},{"path":"src/test/java/seedu/internhub/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INTERN_DURATION_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INTERN_DURATION_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INTERVIEW_DATE_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INTERVIEW_DATE_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_INTERN_DURATION_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_JOB_DESCRIPTION_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_SALARY_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.JOB_DESCRIPTION_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.JOB_DESCRIPTION_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.SALARY_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.TAG_DESC_INTERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.TAG_DESC_NO_REPLY;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERN_DURATION_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERVIEW_DATE_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_JOB_DESCRIPTION_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERN_DURATION;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_JOB_DESCRIPTION;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InternDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.JobDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Salary;","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"ashleygoh1"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_INTERVIEW","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"ashleygoh1"},"content":"                + JOB_DESCRIPTION_DESC_BOB + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"ashleygoh1"},"content":"                + INTERN_DURATION_DESC_BOB + SALARY_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"ashleygoh1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_INTERVIEW","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"ashleygoh1"},"content":"                + JOB_DESCRIPTION_DESC_BOB + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"ashleygoh1"},"content":"                + INTERN_DURATION_DESC_BOB + SALARY_DESC_BOB;","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"ashleygoh1"},"content":"        // multiple job description","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, JOB_DESCRIPTION_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"ashleygoh1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_JOB_DESCRIPTION));","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"ashleygoh1"},"content":"        // multiple interview date","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, INTERVIEW_DATE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"ashleygoh1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INTERVIEW_DATE));","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"ashleygoh1"},"content":"        // multiple intern duration","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, INTERN_DURATION_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"ashleygoh1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INTERN_DURATION));","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"ashleygoh1"},"content":"        // multiple salary","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, SALARY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"ashleygoh1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SALARY));","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"ashleygoh1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"ashleygoh1"},"content":"                        PREFIX_TAG, PREFIX_JOB_DESCRIPTION, PREFIX_INTERVIEW_DATE, PREFIX_INTERN_DURATION,","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"ashleygoh1"},"content":"                        PREFIX_SALARY));","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"ashleygoh1"},"content":"        // missing tag prefix","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-02-26"},{"lineNumber":187,"author":{"gitId":"ashleygoh1"},"content":"                expectedMessage);","lastModifiedDate":"2024-02-26"},{"lineNumber":188,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":189,"author":{"gitId":"ashleygoh1"},"content":"        // missing job description prefix","lastModifiedDate":"2024-02-26"},{"lineNumber":190,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-02-26"},{"lineNumber":191,"author":{"gitId":"ashleygoh1"},"content":"                + VALID_JOB_DESCRIPTION_BOB,","lastModifiedDate":"2024-02-26"},{"lineNumber":192,"author":{"gitId":"ashleygoh1"},"content":"                expectedMessage);","lastModifiedDate":"2024-02-26"},{"lineNumber":193,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":194,"author":{"gitId":"ashleygoh1"},"content":"        // missing interview date prefix","lastModifiedDate":"2024-02-26"},{"lineNumber":195,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-02-26"},{"lineNumber":196,"author":{"gitId":"ashleygoh1"},"content":"                + VALID_INTERVIEW_DATE_BOB,","lastModifiedDate":"2024-02-26"},{"lineNumber":197,"author":{"gitId":"ashleygoh1"},"content":"                expectedMessage);","lastModifiedDate":"2024-02-26"},{"lineNumber":198,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":199,"author":{"gitId":"ashleygoh1"},"content":"        // missing intern duration prefix","lastModifiedDate":"2024-02-26"},{"lineNumber":200,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-02-26"},{"lineNumber":201,"author":{"gitId":"ashleygoh1"},"content":"                + VALID_INTERN_DURATION_BOB,","lastModifiedDate":"2024-02-26"},{"lineNumber":202,"author":{"gitId":"ashleygoh1"},"content":"                expectedMessage);","lastModifiedDate":"2024-02-26"},{"lineNumber":203,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":204,"author":{"gitId":"ashleygoh1"},"content":"        // missing salary prefix","lastModifiedDate":"2024-02-26"},{"lineNumber":205,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-02-26"},{"lineNumber":206,"author":{"gitId":"ashleygoh1"},"content":"                expectedMessage);","lastModifiedDate":"2024-02-26"},{"lineNumber":207,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":217,"author":{"gitId":"ashleygoh1"},"content":"                + TAG_DESC_INTERVIEW + JOB_DESCRIPTION_DESC_BOB + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":218,"author":{"gitId":"ashleygoh1"},"content":"                + INTERN_DURATION_DESC_BOB + SALARY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":222,"author":{"gitId":"ashleygoh1"},"content":"                + TAG_DESC_INTERVIEW + JOB_DESCRIPTION_DESC_BOB + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"ashleygoh1"},"content":"                + INTERN_DURATION_DESC_BOB + SALARY_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":227,"author":{"gitId":"ashleygoh1"},"content":"                + TAG_DESC_INTERVIEW + JOB_DESCRIPTION_DESC_BOB + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"ashleygoh1"},"content":"                + INTERN_DURATION_DESC_BOB + SALARY_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":231,"author":{"gitId":"ashleygoh1"},"content":"                + INVALID_TAG_DESC + JOB_DESCRIPTION_DESC_BOB + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-02-26"},{"lineNumber":232,"author":{"gitId":"ashleygoh1"},"content":"                + INTERN_DURATION_DESC_BOB + SALARY_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":233,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":234,"author":{"gitId":"ashleygoh1"},"content":"        // invalid job description","lastModifiedDate":"2024-02-26"},{"lineNumber":235,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-02-26"},{"lineNumber":236,"author":{"gitId":"ashleygoh1"},"content":"                + TAG_DESC_INTERVIEW + INVALID_JOB_DESCRIPTION_DESC + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":237,"author":{"gitId":"ashleygoh1"},"content":"                + INTERN_DURATION_DESC_BOB + SALARY_DESC_BOB, JobDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":238,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":239,"author":{"gitId":"ashleygoh1"},"content":"        // invalid intern duration","lastModifiedDate":"2024-02-26"},{"lineNumber":240,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-02-26"},{"lineNumber":241,"author":{"gitId":"ashleygoh1"},"content":"                + TAG_DESC_INTERVIEW + JOB_DESCRIPTION_DESC_BOB + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":242,"author":{"gitId":"ashleygoh1"},"content":"                + INVALID_INTERN_DURATION_DESC + SALARY_DESC_BOB, InternDuration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":243,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":244,"author":{"gitId":"ashleygoh1"},"content":"        // invalid salary","lastModifiedDate":"2024-02-26"},{"lineNumber":245,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-02-26"},{"lineNumber":246,"author":{"gitId":"ashleygoh1"},"content":"                + TAG_DESC_INTERVIEW + JOB_DESCRIPTION_DESC_BOB + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":247,"author":{"gitId":"ashleygoh1"},"content":"                + INTERN_DURATION_DESC_BOB + INVALID_SALARY_DESC, Salary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-02-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":250,"author":{"gitId":"ashleygoh1"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-02-26"},{"lineNumber":251,"author":{"gitId":"ashleygoh1"},"content":"                + TAG_DESC_INTERVIEW + JOB_DESCRIPTION_DESC_BOB + INTERVIEW_DATE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":252,"author":{"gitId":"ashleygoh1"},"content":"                + INTERN_DURATION_DESC_BOB + INVALID_SALARY_DESC,","lastModifiedDate":"2024-02-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":257,"author":{"gitId":"ashleygoh1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_INTERVIEW + TAG_DESC_NO_REPLY,","lastModifiedDate":"2024-03-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ashleygoh1":136,"-":124}},{"path":"src/test/java/seedu/internhub/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"ashleygoh1":1,"-":149}},{"path":"src/test/java/seedu/internhub/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.Command;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"ashleygoh1":3,"-":36}},{"path":"src/test/java/seedu/internhub/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"ashleygoh1":6,"-":26}},{"path":"src/test/java/seedu/internhub/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INTERN_DURATION_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INTERVIEW_DATE_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.JOB_DESCRIPTION_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.SALARY_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.TAG_DESC_INTERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.TAG_DESC_NO_REPLY;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERN_DURATION_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERVIEW_DATE_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_JOB_DESCRIPTION_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_SALARY_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_INTERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_NO_REPLY;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.EditCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"Jawad280"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"        // no index specified","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"        // no field specified","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"        // negative index","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"        // zero index","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"Jawad280"},"content":"        // Since address is optional, the following testcase is not relevant","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"        // assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"Jawad280"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"Jawad280"},"content":"                        + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"eunrcn"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"eunrcn"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_NO_REPLY","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"eunrcn"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + JOB_DESCRIPTION_DESC_AMY + INTERVIEW_DATE_DESC_AMY","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"eunrcn"},"content":"                + INTERN_DURATION_DESC_AMY + SALARY_DESC_AMY;","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":111,"author":{"gitId":"eunrcn"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"eunrcn"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"                .withTags(VALID_TAG_NO_REPLY).withJobDescription(VALID_JOB_DESCRIPTION_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"eunrcn"},"content":"                .withInterviewDate(VALID_INTERVIEW_DATE_AMY).withInternDuration(VALID_INTERN_DURATION_AMY)","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"eunrcn"},"content":"                .withSalary(VALID_SALARY_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":116,"author":{"gitId":"eunrcn"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":117,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":118,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":119,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":121,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":122,"author":{"gitId":"eunrcn"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-03-04"},{"lineNumber":123,"author":{"gitId":"eunrcn"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-04"},{"lineNumber":124,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-04"},{"lineNumber":125,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":126,"author":{"gitId":"eunrcn"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-04"},{"lineNumber":127,"author":{"gitId":"eunrcn"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":128,"author":{"gitId":"eunrcn"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":129,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":130,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":131,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":132,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":133,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":134,"author":{"gitId":"eunrcn"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-04"},{"lineNumber":135,"author":{"gitId":"eunrcn"},"content":"        // name","lastModifiedDate":"2024-03-04"},{"lineNumber":136,"author":{"gitId":"eunrcn"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-04"},{"lineNumber":137,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2024-03-04"},{"lineNumber":138,"author":{"gitId":"eunrcn"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":139,"author":{"gitId":"eunrcn"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":140,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":141,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":142,"author":{"gitId":"eunrcn"},"content":"        // phone","lastModifiedDate":"2024-03-04"},{"lineNumber":143,"author":{"gitId":"eunrcn"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-04"},{"lineNumber":144,"author":{"gitId":"eunrcn"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":145,"author":{"gitId":"eunrcn"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":146,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":147,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":148,"author":{"gitId":"eunrcn"},"content":"        // email","lastModifiedDate":"2024-03-04"},{"lineNumber":149,"author":{"gitId":"eunrcn"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-04"},{"lineNumber":150,"author":{"gitId":"eunrcn"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":151,"author":{"gitId":"eunrcn"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":152,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":153,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":154,"author":{"gitId":"eunrcn"},"content":"        // address","lastModifiedDate":"2024-03-04"},{"lineNumber":155,"author":{"gitId":"eunrcn"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-04"},{"lineNumber":156,"author":{"gitId":"eunrcn"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":157,"author":{"gitId":"eunrcn"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":158,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":159,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":160,"author":{"gitId":"Jawad280"},"content":"        // tag","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"ashleygoh1"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_INTERVIEW;","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"ashleygoh1"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_INTERVIEW).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"eunrcn"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":165,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":166,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":167,"author":{"gitId":"eunrcn"},"content":"        // job description","lastModifiedDate":"2024-03-04"},{"lineNumber":168,"author":{"gitId":"Jawad280"},"content":"        userInput \u003d targetIndex.getOneBased() + JOB_DESCRIPTION_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"eunrcn"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withJobDescription(VALID_JOB_DESCRIPTION_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"eunrcn"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":171,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":172,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":173,"author":{"gitId":"eunrcn"},"content":"        // interview date","lastModifiedDate":"2024-03-04"},{"lineNumber":174,"author":{"gitId":"Jawad280"},"content":"        userInput \u003d targetIndex.getOneBased() + INTERVIEW_DATE_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"eunrcn"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withInterviewDate(VALID_INTERVIEW_DATE_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":176,"author":{"gitId":"eunrcn"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":177,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":178,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":179,"author":{"gitId":"eunrcn"},"content":"        // intern duration","lastModifiedDate":"2024-03-04"},{"lineNumber":180,"author":{"gitId":"Jawad280"},"content":"        userInput \u003d targetIndex.getOneBased() + INTERN_DURATION_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"eunrcn"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withInternDuration(VALID_INTERN_DURATION_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":182,"author":{"gitId":"eunrcn"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":183,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":184,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":185,"author":{"gitId":"eunrcn"},"content":"        // salary","lastModifiedDate":"2024-03-04"},{"lineNumber":186,"author":{"gitId":"Jawad280"},"content":"        userInput \u003d targetIndex.getOneBased() + SALARY_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"eunrcn"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withSalary(VALID_SALARY_AMY).build();","lastModifiedDate":"2024-03-04"},{"lineNumber":188,"author":{"gitId":"eunrcn"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":189,"author":{"gitId":"eunrcn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-04"},{"lineNumber":190,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":191,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":192,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-04"},{"lineNumber":193,"author":{"gitId":"eunrcn"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-04"},{"lineNumber":194,"author":{"gitId":"eunrcn"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2024-03-04"},{"lineNumber":195,"author":{"gitId":"eunrcn"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2024-03-04"},{"lineNumber":196,"author":{"gitId":"eunrcn"},"content":"        // valid followed by invalid","lastModifiedDate":"2024-03-04"},{"lineNumber":197,"author":{"gitId":"eunrcn"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-04"},{"lineNumber":198,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-04"},{"lineNumber":199,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":200,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-04"},{"lineNumber":201,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":202,"author":{"gitId":"eunrcn"},"content":"        // invalid followed by valid","lastModifiedDate":"2024-03-04"},{"lineNumber":203,"author":{"gitId":"eunrcn"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-04"},{"lineNumber":204,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":205,"author":{"gitId":"eunrcn"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-04"},{"lineNumber":206,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":207,"author":{"gitId":"eunrcn"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-04"},{"lineNumber":208,"author":{"gitId":"eunrcn"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-04"},{"lineNumber":209,"author":{"gitId":"ashleygoh1"},"content":"                + TAG_DESC_INTERVIEW + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-13"},{"lineNumber":210,"author":{"gitId":"ashleygoh1"},"content":"                + TAG_DESC_INTERVIEW + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_NO_REPLY;","lastModifiedDate":"2024-03-13"},{"lineNumber":211,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"Jawad280"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"Jawad280"},"content":"                parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"Jawad280"},"content":"                userInput,","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"Jawad280"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG, PREFIX_ADDRESS)","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"Jawad280"},"content":"        );","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"eunrcn"},"content":"        // multiple invalid values","lastModifiedDate":"2024-03-04"},{"lineNumber":218,"author":{"gitId":"eunrcn"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-04"},{"lineNumber":219,"author":{"gitId":"eunrcn"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-04"},{"lineNumber":220,"author":{"gitId":"Jawad280"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"Jawad280"},"content":"                parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"Jawad280"},"content":"                userInput,","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"Jawad280"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS)","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"Jawad280"},"content":"        );","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":226,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"eunrcn":151,"Jawad280":22,"ashleygoh1":53}},{"path":"src/test/java/seedu/internhub/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"chenyixin0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.MatchingTagPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"chenyixin0"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"chenyixin0"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"chenyixin0"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"chenyixin0"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"chenyixin0"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"chenyixin0"},"content":"        assertParseFailure(parser, \"t/     \",","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"chenyixin0"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"chenyixin0"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"chenyixin0"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"chenyixin0"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"chenyixin0"},"content":"                new FilterCommand(new MatchingTagPredicate(\"NR\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"chenyixin0"},"content":"        assertParseSuccess(parser, \"t/ NR\", expectedFilterCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"chenyixin0"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"chenyixin0"},"content":"        assertParseSuccess(parser, \" t/    NR   \", expectedFilterCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"chenyixin0"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"chenyixin0":26,"ashleygoh1":6}},{"path":"src/test/java/seedu/internhub/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.FindCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"ashleygoh1":6,"-":28}},{"path":"src/test/java/seedu/internhub/logic/parser/InternHubParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.EditCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.FindCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ListCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.MatchingTagPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"public class InternHubParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"    private final InternHubParser parser \u003d new InternHubParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"        Index index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(\"Betty\").build();","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"                String.format(\"%s %d %s\", EditCommand.COMMAND_WORD, index.getOneBased(), \"c/\" + \"Betty\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"        assertEquals(new EditCommand(index, descriptor), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"chenyixin0"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"chenyixin0"},"content":"        String tag \u003d \"NR\";","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"chenyixin0"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"chenyixin0"},"content":"                FilterCommand.COMMAND_WORD + \" \" + String.join(\" \", tag));","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(new FilterCommand(new MatchingTagPredicate(tag)), command);","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"eunrcn"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"eunrcn"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"eunrcn"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"eunrcn"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"eunrcn"},"content":"        Index index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"eunrcn"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"eunrcn"},"content":"                ViewCommand.COMMAND_WORD + \" \" + (index).getOneBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"eunrcn"},"content":"        assertEquals(new ViewCommand(index), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"    public void parseCommand_note() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"Jawad280"},"content":"        Index index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Jawad280"},"content":"        NoteCommand command \u003d (NoteCommand) parser.parseCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"Jawad280"},"content":"                NoteCommand.COMMAND_WORD + \" \" + (index).getOneBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"Jawad280"},"content":"        assertEquals(new NoteCommand(index), command);","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"eunrcn":61,"chenyixin0":8,"Jawad280":7,"ashleygoh1":27,"-":27}},{"path":"src/test/java/seedu/internhub/logic/parser/NoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"class NoteCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"    void parse_validArgs_returnsNoteCommand() throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"        NoteCommandParser parser \u003d new NoteCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"        NoteCommand expectedCommand \u003d new NoteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        assertEquals(expectedCommand, parser.parse(\"1\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"    void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"        NoteCommandParser parser \u003d new NoteCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"abc\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"    void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"        NoteCommandParser parser \u003d new NoteCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"0\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"-1\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"    void parse_withWhitespaceAndValidArgs_returnsNoteCommand() throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        NoteCommandParser parser \u003d new NoteCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"        NoteCommand expectedCommand \u003d new NoteCommand(Index.fromZeroBased(1));","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        assertEquals(expectedCommand, parser.parse(\"   2   \"));","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"    void parse_withWhitespaceAndInvalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"        NoteCommandParser parser \u003d new NoteCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"   abc   \"));","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"   \"));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Jawad280":49,"ashleygoh1":4}},{"path":"src/test/java/seedu/internhub/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"    private static final String INVALID_TAG \u003d \"#NR\";","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"    private static final String VALID_TAG \u003d \"NR\";","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"ashleygoh1"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG);","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"ashleygoh1"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG));","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"ashleygoh1"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG + WHITESPACE;","lastModifiedDate":"2024-02-26"},{"lineNumber":158,"author":{"gitId":"ashleygoh1"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG);","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"ashleygoh1":17,"-":150}},{"path":"src/test/java/seedu/internhub/logic/parser/ReminderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import seedu.internhub.logic.commands.ReminderCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"public class ReminderCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"    private final ReminderCommandParser parser \u003d new ReminderCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    public void parse_validArgs_returnsReminderCommand() throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        assertEquals(new ReminderCommand(3), parser.parse(\"3\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"-3\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"    public void parse_invalidArgs_throwsParseExceptionWithCorrectMessage() {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"            parser.parse(\"-3\");","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"            assertEquals(ReminderCommandParser.INVALID_NUMBER_OF_DAYS, pe.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"    public void parse_invalidFormat_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"a\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"    public void parse_invalidFormat_throwsParseExceptionWithCorrectMessage() {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"            parser.parse(\"a\");","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"            assertEquals(ReminderCommandParser.INVALID_NUMBER_OF_DAYS, pe.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"    public void parse_emptyArgs_throwsParseExceptionWithCorrectMessage() {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"            parser.parse(\"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"            assertEquals(ReminderCommandParser.INVALID_NUMBER_OF_DAYS, pe.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"eunrcn":61}},{"path":"src/test/java/seedu/internhub/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"class ViewCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    void parse_validArgs_returnsViewCommand() throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"        ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"        ViewCommand expectedCommand \u003d new ViewCommand(Index.fromZeroBased(0));","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"        assertEquals(expectedCommand, parser.parse(\"1\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"        ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"abc\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"    void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"        ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"0\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"-1\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"    void parse_withWhitespaceAndValidArgs_returnsViewCommand() throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"        ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"        ViewCommand expectedCommand \u003d new ViewCommand(Index.fromZeroBased(1));","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"        assertEquals(expectedCommand, parser.parse(\"   2   \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"    void parse_withWhitespaceAndInvalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"        ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"   abc   \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"   \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"eunrcn":46,"ashleygoh1":7}},{"path":"src/test/java/seedu/internhub/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_INTERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_INTERVIEW)","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"ashleygoh1"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_INTERVIEW)","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ashleygoh1":11,"-":97}},{"path":"src/test/java/seedu/internhub/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.AddressBookBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"ashleygoh1"},"content":"        String[] keywords \u003d ALICE.getCompanyName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ashleygoh1":9,"-":123}},{"path":"src/test/java/seedu/internhub/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ashleygoh1":2,"-":19}},{"path":"src/test/java/seedu/internhub/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ashleygoh1":2,"-":48}},{"path":"src/test/java/seedu/internhub/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ashleygoh1":2,"-":86}},{"path":"src/test/java/seedu/internhub/model/person/InternDurationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"public class InternDurationTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InternDuration(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"    public void isValidInternDuration() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"        // null address","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(NullPointerException.class, () -\u003e InternDuration.isValidInternDuration(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(InternDuration.isValidInternDuration(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(InternDuration.isValidInternDuration(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"        // valid addresses","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(InternDuration.isValidInternDuration(\"6 months\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(InternDuration.isValidInternDuration(\"-\")); // one character","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"        InternDuration internDuration \u003d new InternDuration(\"Valid InternDuration\");","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(internDuration.equals(new InternDuration(\"Valid InternDuration\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(internDuration.equals(internDuration));","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(internDuration.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(internDuration.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(internDuration.equals(new Address(\"Other Valid InternDuration\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ashleygoh1":49}},{"path":"src/test/java/seedu/internhub/model/person/JobDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"public class JobDescriptionTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InternDuration(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"    public void isValidInternDuration() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"        // null address","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(NullPointerException.class, () -\u003e InternDuration.isValidInternDuration(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(InternDuration.isValidInternDuration(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(InternDuration.isValidInternDuration(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"        // valid addresses","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(InternDuration.isValidInternDuration(\"6 months\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(InternDuration.isValidInternDuration(\"-\")); // one character","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"        InternDuration internDuration \u003d new InternDuration(\"Valid InternDuration\");","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(internDuration.equals(new InternDuration(\"Valid InternDuration\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(internDuration.equals(internDuration));","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(internDuration.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(internDuration.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(internDuration.equals(new Address(\"Other Valid InternDuration\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ashleygoh1":49}},{"path":"src/test/java/seedu/internhub/model/person/MatchingTagPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"chenyixin0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"chenyixin0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"chenyixin0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"chenyixin0"},"content":"public class MatchingTagPredicateTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"chenyixin0"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"chenyixin0"},"content":"        String firstTagPredicate \u003d \"NR\";","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"chenyixin0"},"content":"        String secondTagPredicate \u003d \"I\";","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate firstPredicate \u003d new MatchingTagPredicate(firstTagPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate secondPredicate \u003d new MatchingTagPredicate(secondTagPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"chenyixin0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"chenyixin0"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"chenyixin0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate firstPredicateCopy \u003d new MatchingTagPredicate(firstTagPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"chenyixin0"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"chenyixin0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"chenyixin0"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"chenyixin0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"chenyixin0"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"chenyixin0"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"chenyixin0"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"chenyixin0"},"content":"    public void test_matchingTags_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate predicate \u003d new MatchingTagPredicate(\"I\");","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"I\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"chenyixin0"},"content":"    public void test_nonMatchingTags_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"chenyixin0"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate predicate \u003d new MatchingTagPredicate(\"\");","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"chenyixin0"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"I\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"chenyixin0"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"        predicate \u003d new MatchingTagPredicate(\"O\");","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"chenyixin0"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"I\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"chenyixin0"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"chenyixin0"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"NR\").withPhone(\"12345\")","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"chenyixin0"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"chenyixin0"},"content":"    /*","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"chenyixin0"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"chenyixin0"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"chenyixin0"},"content":"        String tag \u003d \"NR\";","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"chenyixin0"},"content":"        MatchingTagPredicate predicate \u003d new MatchingTagPredicate(tag);","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"chenyixin0"},"content":"        String expected \u003d MatchingTagPredicate.class.getCanonicalName() + \"{keywords\u003d\" + tag + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"chenyixin0"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"chenyixin0"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"chenyixin0"},"content":"    */","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"chenyixin0"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"chenyixin0"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"chenyixin0":66,"ashleygoh1":4}},{"path":"src/test/java/seedu/internhub/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ashleygoh1":2,"-":83}},{"path":"src/test/java/seedu/internhub/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ashleygoh1":2,"-":58}},{"path":"src/test/java/seedu/internhub/model/person/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"Jawad280"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Jawad280"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"Jawad280"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"Jawad280"},"content":"public class NoteTest {","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Jawad280"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"Jawad280"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"Jawad280"},"content":"    public void isValidNote() {","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Jawad280"},"content":"        // null address","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Jawad280"},"content":"        assertThrows(NullPointerException.class, () -\u003e Note.isValidNote(null));","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Jawad280"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Jawad280"},"content":"        assertFalse(Note.isValidNote(\"\")); // empty string","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Jawad280"},"content":"        assertFalse(Note.isValidNote(\" \")); // spaces only","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"Jawad280"},"content":"        // valid addresses","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Jawad280"},"content":"        assertTrue(Note.isValidNote(\"Yay Yay Yay\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"Jawad280"},"content":"        assertTrue(Note.isValidNote(\"-\")); // one character","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"Jawad280"},"content":"        assertTrue(Note.isValidNote(\"The CEO of XYZ Corporation, John Smith, is widely recognized ...\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"Jawad280"},"content":"    public void equals() {","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Jawad280"},"content":"        Note note \u003d new Note(\"Valid Note\");","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Jawad280"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"Jawad280"},"content":"        assertTrue(note.equals(new Note(\"Valid Note\")));","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"Jawad280"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"        assertTrue(note.equals(note));","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"Jawad280"},"content":"        assertFalse(note.equals(null));","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"Jawad280"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"Jawad280"},"content":"        assertFalse(note.equals(5.0f));","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"Jawad280"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"Jawad280"},"content":"        assertFalse(note.equals(new Note(\"Other Valid Note\")));","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Jawad280"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Jawad280":49,"ashleygoh1":2}},{"path":"src/test/java/seedu/internhub/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_INTERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"Jawad280"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Jawad280"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_INTERVIEW).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"ashleygoh1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_INTERVIEW).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"ashleygoh1"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getCompanyName()","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"ashleygoh1"},"content":"                + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"ashleygoh1"},"content":"                + \", address\u003d\" + ALICE.getAddress() + \", tag\u003d\" + ALICE.getTag()","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"ashleygoh1"},"content":"                + \", job description\u003d\" + ALICE.getJobDescription()","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"ashleygoh1"},"content":"                + \", interview date\u003d\" + ALICE.getInterviewDate()","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"ashleygoh1"},"content":"                + \", intern duration\u003d\" + ALICE.getInternDuration()","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"Jawad280"},"content":"                + \", salary\u003d\" + ALICE.getSalary()","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"Jawad280"},"content":"                + \", note\u003d\" + ALICE.getNote() + \"}\";","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"Jawad280"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"Jawad280"},"content":"    public void compareTo_differentInterviewDates() {","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"Jawad280"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Jawad280"},"content":"        // Dates","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Jawad280"},"content":"        String pastDate \u003d LocalDateTime.now().minusDays(1).format(format);","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"Jawad280"},"content":"        String pastDateMinusOne \u003d LocalDateTime.now().minusDays(2).format(format);","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"Jawad280"},"content":"        String futureDate \u003d LocalDateTime.now().plusDays(1).format(format);","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"Jawad280"},"content":"        String futureDatePlusOne \u003d LocalDateTime.now().plusDays(2).format(format);","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"Jawad280"},"content":"        // Persons","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"Jawad280"},"content":"        Person personWithPastDate \u003d new PersonBuilder().withInterviewDate(pastDate).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"Jawad280"},"content":"        Person personWithPastDateMinusOne \u003d new PersonBuilder().withInterviewDate(pastDateMinusOne).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"        Person personWithFutureDate \u003d new PersonBuilder().withInterviewDate(futureDate).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Jawad280"},"content":"        Person personWithFutureDatePlusOne \u003d new PersonBuilder().withInterviewDate(futureDatePlusOne).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"Jawad280"},"content":"        Person personWithNoDate \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Jawad280"},"content":"        // this is past but other is future","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"Jawad280"},"content":"        assertEquals(1, personWithPastDate.compareTo(personWithFutureDate));","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"Jawad280"},"content":"        // The other is past but this is future","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"Jawad280"},"content":"        assertEquals(-1, personWithFutureDate.compareTo(personWithPastDate));","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"Jawad280"},"content":"        // The other is later than this (both are in the future)","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"Jawad280"},"content":"        assertEquals(1, personWithFutureDatePlusOne.compareTo(personWithFutureDate));","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"Jawad280"},"content":"        // The other is earlier than this (both are in the future)","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"Jawad280"},"content":"        assertEquals(-1, personWithFutureDate.compareTo(personWithFutureDatePlusOne));","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"Jawad280"},"content":"        // Both are past dates","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"Jawad280"},"content":"        assertEquals(0, personWithPastDate.compareTo(personWithPastDateMinusOne));","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"Jawad280"},"content":"        // this has no date, the other has a date in the future","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"Jawad280"},"content":"        assertEquals(1, personWithNoDate.compareTo(personWithFutureDate));","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Jawad280":31,"ashleygoh1":17,"-":80}},{"path":"src/test/java/seedu/internhub/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ashleygoh1":2,"-":58}},{"path":"src/test/java/seedu/internhub/model/person/SalaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"public class SalaryTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Salary(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"    public void constructor_invalidSalary_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"        String invalidSalary \u003d \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Salary(invalidSalary));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"    public void isValidSalary() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ashleygoh1"},"content":"        // null salary","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Salary.isValidSalary(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"        // invalid Salary","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(Salary.isValidSalary(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(Salary.isValidSalary(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(Salary.isValidSalary(\"salary\")); // non-numeric","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(Salary.isValidSalary(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(Salary.isValidSalary(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ashleygoh1"},"content":"        // valid salary","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(Salary.isValidSalary(\"1\")); // exactly 1 numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(Salary.isValidSalary(\"1000\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(Salary.isValidSalary(\"124293842033123\")); // long salary","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"        Salary salary \u003d new Salary(\"1000\");","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ashleygoh1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(salary.equals(new Salary(\"1000\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ashleygoh1"},"content":"        assertTrue(salary.equals(salary));","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(salary.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(salary.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"        assertFalse(salary.equals(new Salary(\"995\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ashleygoh1":59}},{"path":"src/test/java/seedu/internhub/model/person/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"minghowC"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTag(new Tag(null)));","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"minghowC":1,"ashleygoh1":2,"-":23}},{"path":"src/test/java/seedu/internhub/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_INTERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"ashleygoh1"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_INTERVIEW)","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"ashleygoh1"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_INTERVIEW)","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ashleygoh1":11,"-":164}},{"path":"src/test/java/seedu/internhub/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InternDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InterviewDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.JobDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Salary;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"    private static final String INVALID_JOB_DESCRIPTION \u003d \" \";","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"ashleygoh1"},"content":"    private static final String INVALID_INTERVIEW_DATE \u003d \"\";","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ashleygoh1"},"content":"    private static final String INVALID_INTERN_DURATION \u003d \" \";","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"ashleygoh1"},"content":"    private static final String INVALID_SALARY \u003d \"0\";","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"    private static final String VALID_NAME \u003d BENSON.getCompanyName().toString();","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"minghowC"},"content":"    private static final String VALID_TAGS \u003d BENSON.getTag().getTagShort();","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"    private static final String VALID_JOB_DESCRIPTION \u003d BENSON.getJobDescription().toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"    private static final String VALID_INTERVIEW_DATE \u003d BENSON.getInterviewDate().toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"    private static final String VALID_INTERN_DURATION \u003d BENSON.getInternDuration().toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"    private static final String VALID_SALARY \u003d BENSON.getSalary().toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"Jawad280"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"                        VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"                VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"ashleygoh1"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"                        VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"Jawad280"},"content":"                VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"ashleygoh1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"Jawad280"},"content":"                        VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"Jawad280"},"content":"                VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"Jawad280"},"content":"                VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"ashleygoh1"},"content":"    public void toModelType_nullTag_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null,","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"Jawad280"},"content":"                VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"ashleygoh1"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Tag.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"ashleygoh1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_TAG,","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"Jawad280"},"content":"                        VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"ashleygoh1"},"content":"    public void toModelType_nullJobDescription_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"Jawad280"},"content":"                VALID_ADDRESS, VALID_TAGS, null, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY,","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"Jawad280"},"content":"                VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"ashleygoh1"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, JobDescription.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"ashleygoh1"},"content":"    public void toModelType_invalidJobDescription_throwsIllegalValueException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"ashleygoh1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"Jawad280"},"content":"                        INVALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"ashleygoh1"},"content":"        String expectedMessage \u003d JobDescription.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"ashleygoh1"},"content":"    public void toModelType_nullInterviewDate_returnPerson() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"ashleygoh1"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_JOB_DESCRIPTION, INVALID_INTERVIEW_DATE,","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"Jawad280"},"content":"                VALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"ashleygoh1"},"content":"        Person person1 \u003d new Person(BENSON.getCompanyName(), BENSON.getPhone(), BENSON.getEmail(), BENSON.getAddress(),","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"ashleygoh1"},"content":"                BENSON.getTag(), BENSON.getJobDescription(), new InterviewDate(null),","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"Jawad280"},"content":"                BENSON.getInternDuration(), BENSON.getSalary(), BENSON.getNote());","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"ashleygoh1"},"content":"        assertEquals(person1, person.toModelType());","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"ashleygoh1"},"content":"    public void toModelType_validPersonDetails_returnsPe() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"ashleygoh1"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"ashleygoh1"},"content":"    public void toModelType_nullInternDuration_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"Jawad280"},"content":"                VALID_TAGS, VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, null, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"ashleygoh1"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, InternDuration.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"ashleygoh1"},"content":"    public void toModelType_invalidInternDuration_throwsIllegalValueException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"ashleygoh1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":173,"author":{"gitId":"Jawad280"},"content":"                        VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, INVALID_INTERN_DURATION, VALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"ashleygoh1"},"content":"        String expectedMessage \u003d InternDuration.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-02-26"},{"lineNumber":175,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-02-26"},{"lineNumber":176,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":177,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":178,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"ashleygoh1"},"content":"    public void toModelType_nullSalary_throwsIllegalValueException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"Jawad280"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION,","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"Jawad280"},"content":"                null, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"ashleygoh1"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Salary.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"ashleygoh1"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":188,"author":{"gitId":"ashleygoh1"},"content":"    public void toModelType_invalidSalary_throwsIllegalValueException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":189,"author":{"gitId":"ashleygoh1"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-02-26"},{"lineNumber":190,"author":{"gitId":"ashleygoh1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-02-26"},{"lineNumber":191,"author":{"gitId":"Jawad280"},"content":"                        VALID_JOB_DESCRIPTION, VALID_INTERVIEW_DATE, VALID_INTERN_DURATION, INVALID_SALARY, VALID_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"ashleygoh1"},"content":"        String expectedMessage \u003d Salary.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-02-26"},{"lineNumber":193,"author":{"gitId":"ashleygoh1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-02-26"},{"lineNumber":194,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":195,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"minghowC":1,"Jawad280":20,"ashleygoh1":100,"-":75}},{"path":"src/test/java/seedu/internhub/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ashleygoh1":9,"-":101}},{"path":"src/test/java/seedu/internhub/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.util.JsonUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.testutil.TypicalPersons;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ashleygoh1":6,"-":41}},{"path":"src/test/java/seedu/internhub/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ashleygoh1":5,"-":118}},{"path":"src/test/java/seedu/internhub/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":6,"-":62}},{"path":"src/test/java/seedu/internhub/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":3,"-":31}},{"path":"src/test/java/seedu/internhub/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"ashleygoh1":1,"-":33}},{"path":"src/test/java/seedu/internhub/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InternDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InterviewDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.JobDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Salary;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"        descriptor.setName(person.getCompanyName());","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"        descriptor.setTag(person.getTag());","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"        descriptor.setJobDescription(person.getJobDescription());","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"        descriptor.setInterviewDate(person.getInterviewDate());","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"        descriptor.setInternDuration(person.getInternDuration());","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"        descriptor.setSalary(person.getSalary());","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"        return this;","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"        return this;","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"        return this;","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"        return this;","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"     * Sets the {@code Tag} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"Jawad280"},"content":"    public EditPersonDescriptorBuilder withTags(String tag) {","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"Jawad280"},"content":"        descriptor.setTag(new Tag(tag));","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"        return this;","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"     * Sets the {@code JobDescription} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder withJobDescription(String jobDescription) {","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"        descriptor.setJobDescription(new JobDescription(jobDescription));","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"        return this;","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"     * Sets the {@code InterviewDate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder withInterviewDate(String interviewDate) {","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"        descriptor.setInterviewDate(new InterviewDate(interviewDate));","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"        return this;","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"eunrcn"},"content":"     * Sets the {@code InternDuration} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder withInternDuration(String internDuration) {","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"eunrcn"},"content":"        descriptor.setInternDuration(new InternDuration(internDuration));","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"eunrcn"},"content":"        return this;","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":111,"author":{"gitId":"eunrcn"},"content":"     * Sets the {@code Salary} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptorBuilder withSalary(String salary) {","lastModifiedDate":"2024-03-04"},{"lineNumber":114,"author":{"gitId":"eunrcn"},"content":"        descriptor.setSalary(new Salary(salary));","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"eunrcn"},"content":"        return this;","lastModifiedDate":"2024-03-04"},{"lineNumber":116,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":117,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":118,"author":{"gitId":"eunrcn"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2024-03-04"},{"lineNumber":119,"author":{"gitId":"eunrcn"},"content":"        return descriptor;","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":121,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"eunrcn":107,"Jawad280":2,"ashleygoh1":12}},{"path":"src/test/java/seedu/internhub/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InternDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.InterviewDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.JobDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Note;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Salary;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"ashleygoh1"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"\";","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"minghowC"},"content":"    public static final String DEFAULT_TAG \u003d \"NR\";","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"ashleygoh1"},"content":"    public static final String DEFAULT_JOB_DESCRIPTION \u003d \"Software Developer Intern\";","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"    public static final String DEFAULT_INTERVIEW_DATE \u003d null;","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"    public static final String DEFAULT_INTERN_DURATION \u003d \"6 months\";","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"ashleygoh1"},"content":"    public static final String DEFAULT_SALARY \u003d \"500\";","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"Jawad280"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"ashleygoh1"},"content":"    private Tag tag;","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"    private JobDescription jobDescription;","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"    private InterviewDate interviewDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"    private InternDuration internDuration;","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"    private Salary salary;","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"    private Note note;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"        tag \u003d new Tag(DEFAULT_TAG);","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"ashleygoh1"},"content":"        jobDescription \u003d new JobDescription(DEFAULT_JOB_DESCRIPTION);","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"        interviewDate \u003d new InterviewDate(DEFAULT_INTERVIEW_DATE);;","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"        internDuration \u003d new InternDuration(DEFAULT_INTERN_DURATION);;","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"Jawad280"},"content":"        salary \u003d new Salary(DEFAULT_SALARY);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"ashleygoh1"},"content":"        name \u003d personToCopy.getCompanyName();","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"ashleygoh1"},"content":"        tag \u003d personToCopy.getTag();","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"ashleygoh1"},"content":"        jobDescription \u003d personToCopy.getJobDescription();","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"        interviewDate \u003d personToCopy.getInterviewDate();","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"ashleygoh1"},"content":"        internDuration \u003d personToCopy.getInternDuration();","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"ashleygoh1"},"content":"        salary \u003d personToCopy.getSalary();","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"Jawad280"},"content":"        note \u003d personToCopy.getNote();","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"ashleygoh1"},"content":"    public PersonBuilder withTags(String tag) {","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"ashleygoh1"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"ashleygoh1"},"content":"     * Sets the {@code jobDescription} of the {@code Person} that we are building.","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"ashleygoh1"},"content":"    public PersonBuilder withJobDescription(String jobDescription) {","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"ashleygoh1"},"content":"        this.jobDescription \u003d new JobDescription(jobDescription);","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"ashleygoh1"},"content":"        return this;","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"ashleygoh1"},"content":"     * Sets the {@code interviewDate} of the {@code Person} that we are building.","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"ashleygoh1"},"content":"    public PersonBuilder withInterviewDate(String interviewDate) {","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"ashleygoh1"},"content":"        this.interviewDate \u003d new InterviewDate(interviewDate);","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"ashleygoh1"},"content":"        return this;","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"ashleygoh1"},"content":"     * Sets the {@code internDuration} of the {@code Person} that we are building.","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"ashleygoh1"},"content":"    public PersonBuilder withInternDuration(String internDuration) {","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"ashleygoh1"},"content":"        this.internDuration \u003d new InternDuration(internDuration);","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"ashleygoh1"},"content":"        return this;","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"ashleygoh1"},"content":"     * Sets the {@code salary} of the {@code Person} that we are building.","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"ashleygoh1"},"content":"    public PersonBuilder withSalary(String salary) {","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"ashleygoh1"},"content":"        this.salary \u003d new Salary(salary);","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"ashleygoh1"},"content":"        return this;","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"ashleygoh1"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"Jawad280"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"Jawad280"},"content":"     * Sets the {@code note} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"Jawad280"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"Jawad280"},"content":"    public PersonBuilder withNote(String note) {","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"Jawad280"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"Jawad280"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"Jawad280"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"ashleygoh1"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"ashleygoh1"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"ashleygoh1"},"content":"     * Build the person","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"ashleygoh1"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":157,"author":{"gitId":"ashleygoh1"},"content":"        return new Person(name, phone, email, address, tag,","lastModifiedDate":"2024-02-26"},{"lineNumber":158,"author":{"gitId":"Jawad280"},"content":"                jobDescription, interviewDate, internDuration, salary, note);","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"minghowC":1,"Jawad280":13,"ashleygoh1":70,"-":77}},{"path":"src/test/java/seedu/internhub/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERN_DURATION;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_JOB_DESCRIPTION;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_SALARY;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"ashleygoh1"},"content":"        sb.append(PREFIX_NAME + person.getCompanyName().fullName + \" \");","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"        sb.append(PREFIX_TAG + person.getTag().getTagShort() + \" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"        sb.append(PREFIX_JOB_DESCRIPTION + person.getJobDescription().value + \" \");","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"        sb.append(PREFIX_INTERVIEW_DATE + person.getInterviewDate().toString() + \" \");","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"ashleygoh1"},"content":"        sb.append(PREFIX_INTERN_DURATION + person.getInternDuration().value + \" \");","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"        sb.append(PREFIX_SALARY + person.getSalary().value);","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"ashleygoh1":18,"-":26}},{"path":"src/test/java/seedu/internhub/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":1,"-":71}},{"path":"src/test/java/seedu/internhub/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ashleygoh1":4,"-":51}},{"path":"src/test/java/seedu/internhub/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"ashleygoh1":2,"-":10}},{"path":"src/test/java/seedu/internhub/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.testutil;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERN_DURATION_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERN_DURATION_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERVIEW_DATE_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_INTERVIEW_DATE_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_JOB_DESCRIPTION_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_JOB_DESCRIPTION_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_SALARY_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_SALARY_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_INTERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.logic.commands.CommandTestUtil.VALID_TAG_NO_REPLY;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"ashleygoh1"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"ashleygoh1"},"content":"            .withTags(\"NR\")","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(\"Software engineer developer\")","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"Jawad280"},"content":"            .withInterviewDate(\"03-01-2025 1000\")","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(\"3 months\")","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"ashleygoh1"},"content":"            .withSalary(\"1000\").build();","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"ashleygoh1"},"content":"            .withTags(\"I\")","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(\"Software engineer developer intern\")","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"Jawad280"},"content":"            .withInterviewDate(\"03-02-2025 1000\")","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(\"3 months\")","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"ashleygoh1"},"content":"            .withSalary(\"1000\").build();","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"ashleygoh1"},"content":"            .withTags(\"NR\")","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(\"Software engineer developer intern\")","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"Jawad280"},"content":"            .withInterviewDate(\"03-03-2025 1000\")","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(\"3 months\")","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"ashleygoh1"},"content":"            .withSalary(\"1000\").build();","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"ashleygoh1"},"content":"            .withTags(\"NR\")","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(\"Front End intern\")","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"Jawad280"},"content":"            .withInterviewDate(\"03-04-2025 1000\")","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(\"3 months\")","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"ashleygoh1"},"content":"            .withSalary(\"1200\").build();","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"ashleygoh1"},"content":"            .withTags(\"NR\")","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(\"Software engineer developer intern\")","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"Jawad280"},"content":"            .withInterviewDate(\"03-05-2025 1000\")","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(\"3 months\")","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"ashleygoh1"},"content":"            .withSalary(\"1000\").build();","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"ashleygoh1"},"content":"            .withTags(\"NR\")","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(\"Data science intern\")","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"Jawad280"},"content":"            .withInterviewDate(\"03-06-2025 1000\")","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(\"3 months\")","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"ashleygoh1"},"content":"            .withSalary(\"1000\").build();","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"ashleygoh1"},"content":"            .withTags(\"I\")","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(\"Software engineer developer intern\")","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"Jawad280"},"content":"            .withInterviewDate(\"03-07-2025 1000\")","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(\"3 months\")","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"ashleygoh1"},"content":"            .withSalary(\"1000\").build();","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"ashleygoh1"},"content":"            .withTags(\"I\")","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(\"Software engineer developer intern\")","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"Jawad280"},"content":"            .withInterviewDate(\"03-08-2025 1700\")","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(\"3 months\")","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"ashleygoh1"},"content":"            .withSalary(\"1000\").build();","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"ashleygoh1"},"content":"            .withTags(\"NR\")","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(\"Full Stack intern\")","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"Jawad280"},"content":"            .withInterviewDate(\"03-09-2025 1000\")","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(\"3 months\")","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"ashleygoh1"},"content":"            .withSalary(\"1000\").build();","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_NO_REPLY)","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(VALID_JOB_DESCRIPTION_AMY).withInterviewDate(VALID_INTERVIEW_DATE_AMY)","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(VALID_INTERN_DURATION_AMY).withSalary(VALID_SALARY_AMY).build();","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"ashleygoh1"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_INTERVIEW)","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"ashleygoh1"},"content":"            .withJobDescription(VALID_JOB_DESCRIPTION_BOB).withInterviewDate(VALID_INTERVIEW_DATE_BOB)","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"ashleygoh1"},"content":"            .withInternDuration(VALID_INTERN_DURATION_BOB).withSalary(VALID_SALARY_BOB).build();","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Jawad280":9,"ashleygoh1":72,"-":49}},{"path":"src/test/java/seedu/internhub/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"ashleygoh1":1,"-":44}},{"path":"src/test/java/seedu/internhub/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ashleygoh1"},"content":"package seedu.internhub.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ashleygoh1"},"content":"import static seedu.internhub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"ashleygoh1"},"content":"import seedu.internhub.MainApp;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"ashleygoh1":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"\u003c?import seedu.internhub.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"ashleygoh1":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"ashleygoh1"},"content":"\u003cfx:root type\u003d\"seedu.internhub.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ashleygoh1":1,"-":5}}]
