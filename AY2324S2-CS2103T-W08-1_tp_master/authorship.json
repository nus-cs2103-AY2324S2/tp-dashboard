[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W08-1/tp/graph/badge.svg?token\u003dIG2LRI4TTR)](https://codecov.io/gh/AY2324S2-CS2103T-W08-1/tp)","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"* This is **an app for recruiters to manage candidates**.\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"  * retrieves the candidate list if an excel sheet containing the candidate list is put in the correct location","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"  * create/read/update/delete candidates in the candidate list","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"  * track the status of each candidate in the hiring pipeline","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"* The project is an ongoing software project for a desktop application (called _HireHub_) used for managing candidate details.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"  * It is based on the AddressBook-Level3 project, with additional tweaks and features to provide a customised experience for recruiters.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"  * From the AddressBook-Level3 project: \u003e It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"* It is named `Hirehub` because it is meant to help recruiters to manage and hire candidates seamlessly.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"* For the detailed documentation of this project, see the **[User Guide](https://github.com/AY2324S2-CS2103T-W08-1/tp/blob/master/docs/UserGuide.md)** if you are interested in using HireHub, or the **[Developer Guide](https://github.com/AY2324S2-CS2103T-W08-1/tp/blob/master/docs/DeveloperGuide.md)** if you are interested in developing HireHub.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"-":6,"logical-1985516":10}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"mainClassName \u003d \u0027seedu.hirehub.Main\u0027","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"run {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"    archiveFileName \u003d \u0027hirehub.jar\u0027","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":70,"chiralcentre":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"### Ryan Tan","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"\u003cimg src\u003d\"images/chiralcentre.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"[[github](https://github.com/chiralcentre)]","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"[[portfolio](team/ryan.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"* Role: Developer","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"* Responsibilities: Backend, DevOps, Code Reviews, Project Coordination","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"### Lee Wei Ming","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"\u003cimg src\u003d\"images/leeweiming3.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"[[github](https://github.com/leeweiming3)]","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"[[portfolio](team/leeweiming3.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"* Role: Developer","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"* Responsibilities: Frontend, Backend, DevOps, Code Reviews","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"### Yan Jie","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"\u003cimg src\u003d\"images/logical-1985516.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"[[github](http://github.com/logical-1985516)]","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"[[portfolio](team/yanjie.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"* Responsibilities: Frontend, Documentation, Code Reviews","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"### Ikhoon Eom","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"\u003cimg src\u003d\"images/acekhoon.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"[[github](https://github.com/acekhoon)] [[portfolio](team/ikhoon.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"### Oliver Kong","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"\u003cimg src\u003d\"images/0liverkong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"[[github](http://github.com/0liverkong)]","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"[[portfolio](team/0liverkong.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"0liverkong":4,"acekhoon":4,"leeweiming3":6,"-":35,"logical-1985516":5,"chiralcentre":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-W08-1/tp/blob/master/src/main/java/seedu/hirehub/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-W08-1/tp/blob/master/src/main/java/seedu/hirehub/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-W08-1/tp/blob/master/src/main/java/seedu/hirehub/ui/Ui.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"0liverkong"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `JobListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"Each one of `Job`, `Application` and `Person` has an associated `ListPanel` and `Card`, as indicated with `XXXListPanel` and `XXXCard`.","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"chiralcentre"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-W08-1/tp/blob/master/src/main/java/seedu/hirehub/logic/Logic.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"0liverkong"},"content":"1. When `Logic` is called upon to execute a command, it looks at `Logic`\u0027s `state` and chooses the appropriate `Parser`.","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"leeweiming3"},"content":"2. The command is passed to the `Parser` object which in turn creates a parser that matches the command (e.g., `ConfirmationStageParser`) and uses it to parse the command.","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"leeweiming3"},"content":"3. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"leeweiming3"},"content":"4. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"leeweiming3"},"content":"5. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"leeweiming3"},"content":"6. Based on the `CommandResult`, the `state` of the `Logic` can be modified.","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"leeweiming3"},"content":"7. If the current command is a `ConfirmableCommand`, it is passed into `ConfirmationStageParser` to create the commands that will be executed when `ConfirmationStageParser` is next used (when the user confirms or refuses the next prompt).","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"leeweiming3"},"content":"* When called upon to parse a user command, the `ConfirmationStageParser` class checks if the command is \"Y\" or \"N\", representing confirming or denying the previous `ConfirmableCommand` respectively, then returns the respective stored command obtained from the previous command (e.g. `AbortDeleteCommand`).","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-W08-1/tp/blob/master/src/main/java/seedu/hirehub/model/Model.java)","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"acekhoon"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"chiralcentre"},"content":"* stores the app data i.e., all `Person`, `Job`, and `Application` objects (which are contained in a `UniquePersonList`, `UniqueJobList` and `UniqueApplicationList` object, respectively).","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"acekhoon"},"content":"* stores the currently \u0027selected\u0027 `Person`, `Job`, and `Application` objects (e.g., results of a search queries for each `Person`, `Job`, and `Application` object) as a separate _filtered_ list (`filteredPersonList`, `filteredJobList`, and `filteredApplicationList` respectively) which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e`, `ObservableList\u003cJob\u003e`, and `ObservableList\u003cApplication\u003e`, respectively, that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"acekhoon"},"content":"Association between Person, Job and Application classes with attributes of respective classes is represented with greater detail in the following UML Diagram:","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"acekhoon"},"content":"\u003cimg src\u003d\"images/ModelClassAttributeDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"acekhoon"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-W08-1/tp/blob/master/src/main/java/seedu/hirehub/storage/Storage.java)","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"chiralcentre"},"content":"* inherits from `AddressBookStorage`, `ApplicationStorage`, `JobsStorage`, and `UserPrefsStorage`, which means it can be treated as any combination of the four storage interfaces (if only the functionality of a subset is needed).","lastModifiedDate":"2024-04-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"logical-1985516"},"content":"Classes used by multiple components are in the `seedu.hirehub.commons` package.","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"logical-1985516"},"content":"### edit_job command","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"logical-1985516"},"content":"The edit_job command allows the recruiters to edit the details (job title, description, vacancy) for a particular job at a specified index from the displayed job list. Given below is an example usage scenario and how the edit_job mechanism behaves at each step.","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"logical-1985516"},"content":"Step 1. The user launches the application for the first time. `HireHub` will be initialized with the initial address book state.","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"chiralcentre"},"content":"Step 2. The user types `edit_job 2 d/Good at OOP` to change the description of the job at index 2 to `Good at OOP`. This input is passed as an argument to `MainWindow#executeCommand(String)`, which subsequently calls `LogicManager#execute(String)`, which subsequently calls `AddressBookParser#parseCommand(String)`, which then calls `EditJobCommandParser#parse(String)`.","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"chiralcentre"},"content":"Step 3. `EditJobCommandParser#parse(String)` first checks if the given index is valid, before creating a new `EditJobDescriptor` object, which contains the attributes with the edited information that the `Job` object should have, if present. In this case, it contains `Good at OOP` for its `description` and `null` for the rest. `EditJobCommandParser#parse(String)` then parses the command to return a new `EditJobCommand` object containing the `EditJobDescriptor` object.","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"chiralcentre"},"content":"Step 4. `EditJobCommand#execute(Model)` is then called in `LogicManager#execute(String)`, where the old job is updated in the job list with `ModelManager#setJob(Job, Job)`, the filtered job list in the model is updated with `ModelManager#updateFilteredJobList(Predicate\u003cJob\u003e)`, and the applications in the application list are updated to contain the edited job with `ModelManager#replaceApplications(Job, Job)`.","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"chiralcentre"},"content":"**Design considerations:**","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"chiralcentre"},"content":"**Aspect: Format of edit_job command:**","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"chiralcentre"},"content":"**Alternative 1 (current choice):** Use index as argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":185,"author":{"gitId":"chiralcentre"},"content":"Pros: It is easier for the user to type out the index to use the command.","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"chiralcentre"},"content":"Cons: This choice requires the user to know the index, which can only be observed from the UI. If there is a long list of jobs in the UI, observing from the UI may not be so feasible.","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"chiralcentre"},"content":"We choose this alternative because we have a search_job command which supports narrowing down of the jobs list to find the desired job.","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"chiralcentre"},"content":"**Alternative 2:** Use job title as argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"chiralcentre"},"content":"Pros: Job title is usually known beforehand, and job title is the unique primary key for all jobs in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"chiralcentre"},"content":"Cons: Job title can be quite long and cumbersome for users to type out.","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":197,"author":{"gitId":"acekhoon"},"content":"![EditJobSequenceDiagram](images/EditJobSequenceDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"logical-1985516"},"content":"### get command","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"logical-1985516"},"content":"The get command allows the recruiters to retrieve the candidate from the list at specified index in the displayed candidate list. If a recruiter types in `get INDEX` with valid index, it returns the candidate at that specific index in the list of candidates displayed in the UI. Specifically, get command is implemented via the following steps:","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"logical-1985516"},"content":"1. `GetCommand` class was created in `Command` file in `Logic` component which constructs a `GetCommand` object with candidate index as an argument.","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"logical-1985516"},"content":"2. `execute()` method in `GetCommand` class checks whether index provided by the user is valid (i.e. positive integer should be smaller than or equal to the size of displayed candidate list) or not, and filters the candidate list with given index number, creating a new `CommandResult` object that outputs success message.","lastModifiedDate":"2024-04-15"},{"lineNumber":205,"author":{"gitId":"acekhoon"},"content":"3. In order for get command to get into the `Logic` component, user command must be parsed in `parser` component. In order to do so, `GetCommandParser` was created by implementing `Parser\u003cT\u003e` interface in the `parser` component where `parse()` method creates a `GetCommand` object with given index as an argument.","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"acekhoon"},"content":"Given below is an example usage scenario and how the get command mechanism behaves at each step, which could aid understanding the implementation outlined above:","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"logical-1985516"},"content":"Step 1. The user launches the application for the first time. `HireHub` will be initialized with the initial address book state.","lastModifiedDate":"2024-04-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"logical-1985516"},"content":"Step 2. The user executes `get 3` command to retrieve candidate at 3rd entry in the list displayed by UI. Subsequently, `get 3` command calls `GetCommandParser#parse()`, parsing the command and creating a new `GetCommand` object by calling constructor `GetCommand(3)`.","lastModifiedDate":"2024-04-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"acekhoon"},"content":"Step 3. `GetCommand#execute()` checks whether index 3 is valid argument, and if it is within the valid range, it creates `CommandResult` object to deliver success messages to `LogicManager` class.","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"acekhoon"},"content":"The following sequence diagram shows how a get operation goes through the `Logic` component:","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"acekhoon"},"content":"![GetSequenceDiagram](images/GetSequenceDiagram.png)","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"acekhoon"},"content":"**Design considerations:**","lastModifiedDate":"2024-04-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"acekhoon"},"content":"**Aspect: Format of get command:**","lastModifiedDate":"2024-04-14"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":223,"author":{"gitId":"acekhoon"},"content":"**Alternative 1 (current choice):** Use index as argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":224,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"acekhoon"},"content":"Pros: It is easier for the user to type out the index at the end user\u0027s side.","lastModifiedDate":"2024-04-14"},{"lineNumber":226,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"acekhoon"},"content":"Cons: This requires the user to know the index from the list of candidates displayed in the UI. If there is a long list of candidates in the UI, observing from the UI may not be so feasible.","lastModifiedDate":"2024-04-14"},{"lineNumber":228,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":229,"author":{"gitId":"acekhoon"},"content":"We choose this alternative because we have a search command which supports narrowing down of the candidate list to find the desired candidate.","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"chiralcentre"},"content":"**Alternative 2:** Use candidate\u0027s email as argument.","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":233,"author":{"gitId":"acekhoon"},"content":"Pros: Email is usually known beforehand midst of the recruitment process, and email is the unique primary key for all candidates in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":234,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":235,"author":{"gitId":"acekhoon"},"content":"Cons: Email could possibly be a bit long and cumbersome for users to type out.","lastModifiedDate":"2024-04-14"},{"lineNumber":236,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":237,"author":{"gitId":"logical-1985516"},"content":"### search command","lastModifiedDate":"2024-04-15"},{"lineNumber":238,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"logical-1985516"},"content":"The search command searches candidates whose attributes match all the corresponding attributes (i.e. intersection of all the matches). Phone, email and country are matched by equality, while name, comment, tag are matched by substring of the candidate attributes. The search operation is executed as follows:","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"logical-1985516"},"content":"Step 1. The user launches the application for the first time. `HireHub` will be initialized with the initial address book state.","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"chiralcentre"},"content":"Step 2. The user types `search n/l c/SG` to retrieve candidates whose name contains `l`and whose country is `SG`. This calls `MainWindow#execute(String)`, which subsequently calls `LogicManager#execute(String)`, which subsequently calls `AddressBookParser#parseCommand(String)`, which then calls `SearchCommandParser#parse(String)`.","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"logical-1985516"},"content":"Step 3. `SearchCommandParser#parse(String)` creates a new `SearchPersonDescriptor` object, which contains the attributes with the required information that a `Person` object should match, if present. In this case, it contains `l` for its `name` attribute and `SG` for its `country` attribute, and `null` for the rest. `SearchCommandParser#parse(String)` then parses the command to return a new `SearchCommand` object containing the `SearchPersonDescriptor` object.","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"logical-1985516"},"content":"Step 4. `SearchCommand#execute(Model)` is then called in `LogicManager#execute(String)`, where `SearchPersonDescriptor#getPredicate()` uses the attributes in `SearchPersonDescriptor` to create `ContainsKeywordsPredicate` objects (e.g. `ContainsKeywordsPredicate(\"n/\", Optional.of(\"l\"))`) with the corresponding prefixes and information, before returning a new `SearchPredicate` object containing these `ContainsKeywordsPredicate` objects. Note that a `ContainsKeywordsPredicate` object is created for each attribute, even if it is `null`.","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"logical-1985516"},"content":"Step 5. `ModelManager#updateFilteredPerson(Predicate\u003cPerson\u003e)` (with the `SearchPredicate` object as its argument) is called, where `SearchPredicate#test(Person)` is called. Then for each predicate in the `SearchPredicate` object, `ContainsKeywordsPredicate#test(Person)` is called, which checks if one of the specified attribute contains the specified information (e.g. `ContainsKeywordsPredicate(\"n/\", Optional.of(\"l\"))` tests if `name` contains `l`). `SearchPredicate#test(Person)` then returns people in which **all** `ContainsKeywordsPredicate#test(Person)` in the `SearchPredicate` return `true`. `ModelManager#updateFilteredPerson(Predicate\u003cPerson\u003e)` then updates the model to display such people only.","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":251,"author":{"gitId":"logical-1985516"},"content":"The following sequence diagram shows how a search operation goes through the various components:","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"logical-1985516"},"content":"![SearchSequenceDiagram](images/SearchSequenceDiagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"chiralcentre"},"content":"**Design considerations:**","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"chiralcentre"},"content":"**Aspect: Search criteria of search command:**","lastModifiedDate":"2024-04-14"},{"lineNumber":258,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":259,"author":{"gitId":"chiralcentre"},"content":"**Alternative 1 (current choice):** Return candidates that match all the specified attributes.","lastModifiedDate":"2024-04-14"},{"lineNumber":260,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":261,"author":{"gitId":"logical-1985516"},"content":"Pros: The user can shrink down the result list by specifying more attributes, making it easier to find a particular candidate.","lastModifiedDate":"2024-04-14"},{"lineNumber":262,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"logical-1985516"},"content":"Cons: The user may need to run multiple search commands to find candidates that match one of the specified attributes.","lastModifiedDate":"2024-04-14"},{"lineNumber":264,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":265,"author":{"gitId":"logical-1985516"},"content":"We choose this alternative because the recruiter tends to have a specific candidate in mind, so narrowing down the list quickly is more useful. Furthermore, finding candidates matching one of the specified attributes is easier, while finding candidates matching all the specified attributes is harder.","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":267,"author":{"gitId":"chiralcentre"},"content":"**Alternative 2:** Return candidates that match one of the specified attributes.","lastModifiedDate":"2024-04-14"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":269,"author":{"gitId":"logical-1985516"},"content":"Pros: It is helpful for recruiters who may have multiple possible criteria for candidates to meet. This helps to keep options open and not accidentally neglect a candidate.","lastModifiedDate":"2024-04-14"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"logical-1985516"},"content":"Cons: It is harder to shrink down the result list as specifying more attributes only increases the size of the result list. Also, finding candidates that match all the specified attributes is difficult, as the user needs to keep track of the candidates that appear in all the result lists, over multiple search commands.","lastModifiedDate":"2024-04-14"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":273,"author":{"gitId":"logical-1985516"},"content":"### slots_left command","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":275,"author":{"gitId":"logical-1985516"},"content":"The slots_left command finds the remaining vacancies of a specified job at the specified index of the displayed list of jobs. The remaining vacancies is the number of vacancies of the job, subtracted by the number of `OFFERED` applications to that job. The slots_left operation is executed as follows:","lastModifiedDate":"2024-04-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":277,"author":{"gitId":"logical-1985516"},"content":"Step 1. The user launches the application for the first time. `HireHub` will be initialized with the initial address book state.","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":279,"author":{"gitId":"logical-1985516"},"content":"Step 2. The user types `slots_left 3` to find the number of remaining vacancies of the job with index `3`. This calls `MainWindow#execute(String)`, which subsequently calls `LogicManager#execute(String)`, which subsequently calls `AddressBookParser#parseCommand(String)`, which then calls `SlotsLeftCommandParser#parse(String)`.","lastModifiedDate":"2024-04-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":281,"author":{"gitId":"logical-1985516"},"content":"Step 3. `SlotsLeftCommandParser#parse(String)` creates a new `SlotsLeftCommand` object, which contains the index of the job.","lastModifiedDate":"2024-04-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":283,"author":{"gitId":"logical-1985516"},"content":"Step 4. `SlotsLeftCommand#execute(Model)` is then called in `LogicManager#execute(String)`, where `ModelManager#getFilteredJobList()` is called. `List#get(int)` is then called, which returns a job object. `Job#getTitle()` is then called to return a String (the title of the job), which is then used as an argument for `ModelManager#countRemainingVacancy(String)`, returning the number of remaining vacancies of the job.","lastModifiedDate":"2024-04-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":285,"author":{"gitId":"logical-1985516"},"content":"The following sequence diagram shows how a slots_left operation goes through the various components:","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":287,"author":{"gitId":"acekhoon"},"content":"![SlotsLeftSequenceDiagram](images/SlotsLeftSequenceDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":289,"author":{"gitId":"acekhoon"},"content":"**Design Consideration:**","lastModifiedDate":"2024-04-14"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":291,"author":{"gitId":"logical-1985516"},"content":"**Aspect:** Rationale behind implementation of slots_left command:","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":293,"author":{"gitId":"chiralcentre"},"content":"At the outset, there were discussions centered around whether `vacancy` attribute for the job class should denote the remaining count of job openings or the total number of candidates intended for recruitment by the hiring entity. In consideration of the potential for recruiters to adjust the vacancy count for a given job and make references to the initial vacancy, we decided that the `vacancy` attribute shall denote the total number of positions that the recruiters aim to hire. To support enabling recruiters to ascertain the number of remaining job openings after deducting the number of offers made, a \u0027slots_left\u0027 command was created for this purpose.","lastModifiedDate":"2024-04-14"},{"lineNumber":294,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":295,"author":{"gitId":"logical-1985516"},"content":"### add_app command","lastModifiedDate":"2024-04-15"},{"lineNumber":296,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":297,"author":{"gitId":"logical-1985516"},"content":"The add_app command adds an application containing a job and a person.","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":299,"author":{"gitId":"logical-1985516"},"content":"Step 1. The user launches the application for the first time. `HireHub` will be initialized with the initial address book state. We assume that there is an existing person and job in the initial address book state - a person with an email `example@gmail.com` and a job with title `job`.","lastModifiedDate":"2024-04-15"},{"lineNumber":300,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":301,"author":{"gitId":"chiralcentre"},"content":"Step 2. The user enters `add_app e/example@gmail.com ti/job` to add an application for the person uniquely identified by the email `example@gmail.com`, for the job with the title `job`. This calls `MainWindow#execute(String)`, which subsequently calls `LogicManager#execute(String)`, which subsequently calls `AddressBookParser#parseCommand(String)`, which then calls `AddApplicationCommandParser#parse(String)`.","lastModifiedDate":"2024-04-14"},{"lineNumber":302,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":303,"author":{"gitId":"0liverkong"},"content":"Step 3. `AddApplicationCommandParser#parse(String)` creates a new `AddApplicationCommand` object, which contains the email that a `Person` object should match, and the job title the `Job` should match. In this case, it contains `example@gmail.com` for its `email` attribute and `job` for its `title` attribute, and `PRESCREEN` for the `status` attribute by default.","lastModifiedDate":"2024-04-13"},{"lineNumber":304,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":305,"author":{"gitId":"logical-1985516"},"content":"Step 4.`AddApplicationCommand#execute(Model)` is then called in `LogicManager#execute(String)`, where the matching `Person` and `Job` are found, and an `Application` object containing the `Person` and the `Job` is created. `model#addApplication(Application)` is then called and the `Application` is added to the list of applications in `model`.","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":307,"author":{"gitId":"acekhoon"},"content":"**Design considerations:**","lastModifiedDate":"2024-04-14"},{"lineNumber":308,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":309,"author":{"gitId":"acekhoon"},"content":"**Aspect:** Format of add_app command:","lastModifiedDate":"2024-04-14"},{"lineNumber":310,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":311,"author":{"gitId":"chiralcentre"},"content":"**Alternative 1 (current choice):** Use primary keys for `Person` (`Email`) and `Job` (job `Title`) as arguments.","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":313,"author":{"gitId":"logical-1985516"},"content":"Pros: `Email` of a candidate and the job `Title` that the candidate applies for are usually known beforehand to the recruiters, and they are unique primary keys for all candidates and jobs in their respective lists.","lastModifiedDate":"2024-04-15"},{"lineNumber":314,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":315,"author":{"gitId":"acekhoon"},"content":"Cons: It is harder for the users to type out the email of a candidate and job title that the candidate intends to apply to use the command.","lastModifiedDate":"2024-04-14"},{"lineNumber":316,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":317,"author":{"gitId":"acekhoon"},"content":"We choose this alternative because recruiters can reduce the probability of adding incorrect application by enforcing them to explicitly type out a candidate\u0027s email and a job title that the candidate applies for.","lastModifiedDate":"2024-04-14"},{"lineNumber":318,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":319,"author":{"gitId":"logical-1985516"},"content":"**Alternative 2:** Use an index of candidate (`Person`) in the candidate list and an index of job in the job list as an input.","lastModifiedDate":"2024-04-15"},{"lineNumber":320,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":321,"author":{"gitId":"acekhoon"},"content":"Pros: It is easier for the users to type out index of candidates and jobs displayed in their respective lists than writing email and job title everytime.","lastModifiedDate":"2024-04-14"},{"lineNumber":322,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":323,"author":{"gitId":"chiralcentre"},"content":"Cons: Recruiters need to scroll down the list of candidates and jobs in order to find respective indices, which could require additional effort. Recruiters might be prone to make a mistake since they need to identify candidates and job via indices, and it might be confusing for them to discern which index is for candidates and which one is for job when using this command.","lastModifiedDate":"2024-04-15"},{"lineNumber":324,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":325,"author":{"gitId":"0liverkong"},"content":"The following sequence diagram shows how a add_app operation goes through the various components:","lastModifiedDate":"2024-04-13"},{"lineNumber":326,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":327,"author":{"gitId":"0liverkong"},"content":"![AddApplicationSequenceDiagram](images/AddApplicationSequenceDiagram.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":328,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":329,"author":{"gitId":"logical-1985516"},"content":"### tag command","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":331,"author":{"gitId":"logical-1985516"},"content":"The tag command adds one or more tags to a person. The person retains all tags it had before.","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":333,"author":{"gitId":"logical-1985516"},"content":"Step 1. The user launches the application for the first time. `HireHub` will be initialized with the initial address book state. We assume that there is an existing person in the initial address book state - a person at index 1 with tag `t/tag0`.","lastModifiedDate":"2024-04-15"},{"lineNumber":334,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":335,"author":{"gitId":"leeweiming3"},"content":"Step 2. The user enters `tag 1 t/tag1 t/tag2` to add tags to the candidate at 1st entry in the list displayed by UI. This calls `MainWindow#execute(String)`, which subsequently calls `LogicManager#execute(String)`, which subsequently calls `AddressBookParser#parseCommand(String)`, which then calls `TagCommandParser#parse(String)`.","lastModifiedDate":"2024-04-13"},{"lineNumber":336,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":337,"author":{"gitId":"leeweiming3"},"content":"Step 3. `TagCommandParser#parse(String)` creates a new `TagCommand` object, which contains the index that a `Person` object should match, and the `Set\u003cTag\u003e` of tags to add. In this case, it contains the index 1 and a `Set\u003cTag\u003e` `[t/tag1, t/tag2]`.","lastModifiedDate":"2024-04-13"},{"lineNumber":338,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":339,"author":{"gitId":"leeweiming3"},"content":"Step 4.`TagCommand#execute(Model)` is then called in `LogicManager#execute(String)`, where the matching `Person` is found and the union of tags present and tags to add is calculated. A new person is created using the tag union and the old person\u0027s data. Then, the old person is updated in the person list with `ModelManager#setPerson(Person, Person)`, the filtered person list in the model is updated with `ModelManager#updateFilteredPersonList(Predicate\u003cPerson\u003e)`, and the applications in the application list are updated to contain the edited person with `ModelManager#replaceApplications(Person, Person)`.","lastModifiedDate":"2024-04-13"},{"lineNumber":340,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":341,"author":{"gitId":"logical-1985516"},"content":"The following sequence diagram shows how a tag operation goes through the various components:","lastModifiedDate":"2024-04-15"},{"lineNumber":342,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":343,"author":{"gitId":"0liverkong"},"content":"![TagSequenceDiagram](images/TagSequenceDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":345,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"leeweiming3"},"content":"* has a need to manage a significant number of candidates to fill vacancies","lastModifiedDate":"2024-02-29"},{"lineNumber":364,"author":{"gitId":"leeweiming3"},"content":"* wants to oversee and provide updates to candidates in the interview pipeline","lastModifiedDate":"2024-02-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"leeweiming3"},"content":"**Value proposition**: manage and track candidates throughout the interview process, faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-02-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"| Priority | As a …​            | I want to …​                                                                | So that I can…​                                                                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"logical-1985516"},"content":"|----------|--------------------|-----------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":379,"author":{"gitId":"logical-1985516"},"content":"| `* * *`  | recruiter          | update the details of potential candidates                                  | quickly fix mistakes or update outdated data                                                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"logical-1985516"},"content":"| `* * *`  | recruiter          | view the details of potential candidates in tabular format                  | read the data more easily                                                                                                 |","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"chiralcentre"},"content":"| `* * *`  | recruiter          | add new candidates to the candidate list                                    | expand my network of contacts                                                                                             |","lastModifiedDate":"2024-04-15"},{"lineNumber":382,"author":{"gitId":"chiralcentre"},"content":"| `* * *`  | recruiter          | delete candidates from the candidate list                                   | comply with candidates\u0027 request to delete information in accordance with privacy acts or when the information is outdated |","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"0liverkong"},"content":"| `* * *`  | recruiter          | add tags to categorise candidates                                           | easily find candidates fulfilling a particular criteria (tag)                                                             |","lastModifiedDate":"2024-02-29"},{"lineNumber":384,"author":{"gitId":"0liverkong"},"content":"| `* * *`  | recruiter          | filter candidates by their attributes                                       | easily seek out for the relevant candidates                                                                               |","lastModifiedDate":"2024-02-29"},{"lineNumber":385,"author":{"gitId":"0liverkong"},"content":"| `* * *`  | recruiter          | leave a comment on the candidate profile                                    | take note of the important aspects of the candidate for future reference                                                  |","lastModifiedDate":"2024-02-29"},{"lineNumber":386,"author":{"gitId":"logical-1985516"},"content":"| `* * *`  | recruiter          | keep track of the candidate\u0027s interview status for a particular application | facilitate the interview process                                                                                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":387,"author":{"gitId":"logical-1985516"},"content":"| `* * *`  | recruiter          | clear the candidate list in one single command                              | avoid typing multiple delete commands                                                                                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":388,"author":{"gitId":"chiralcentre"},"content":"| `* * *`  | recruiter          | view the details of a candidate of a particular row in the candidate list   | have an absolute reference of the singular candidate that I am interested in                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"chiralcentre"},"content":"| `* * *`  | recruiter          | filter candidates by the jobs they applied                                  | see what jobs they apply for                                                                                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":390,"author":{"gitId":"chiralcentre"},"content":"| `* * *`  | recruiter          | filter applications by job                                                  | have an overview of all the applications for a particular job for easier processing                                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":391,"author":{"gitId":"chiralcentre"},"content":"| `* * *`  | recruiter          | delete specific tags                                                        | undo mistakes made when adding tags                                                                                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":392,"author":{"gitId":"chiralcentre"},"content":"| `* * `   | recruiter          | view the number of vacancies left for each role                             | know when to stop hiring/accepting new candidates                                                                         |","lastModifiedDate":"2024-04-13"},{"lineNumber":393,"author":{"gitId":"chiralcentre"},"content":"| `* *`    | careless recruiter | confirm the clearing of the candidate list                                  | avoid any accidental deletion of the candidate list                                                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"logical-1985516"},"content":"**\u003cu\u003eAdd candidate\u003c/u\u003e**","lastModifiedDate":"2024-04-14"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"acekhoon"},"content":"**System**: Hirehub (Candidate Management System for Company Recruiters)","lastModifiedDate":"2024-02-29"},{"lineNumber":401,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":402,"author":{"gitId":"acekhoon"},"content":"**Use case**: UC01 - Add Candidate to the List","lastModifiedDate":"2024-02-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":404,"author":{"gitId":"acekhoon"},"content":"**Actor**: Recruiter","lastModifiedDate":"2024-02-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"logical-1985516"},"content":"1.  Recruiter enters the details of the candidate to be added to the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":409,"author":{"gitId":"logical-1985516"},"content":"2.  Hirehub adds the candidate with the corresponding details as requested.","lastModifiedDate":"2024-04-14"},{"lineNumber":410,"author":{"gitId":"acekhoon"},"content":"3.  Hirehub displays the details of the added candidate.","lastModifiedDate":"2024-02-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"logical-1985516"},"content":"* 1a. Recruiter enters invalid email address.","lastModifiedDate":"2024-04-14"},{"lineNumber":418,"author":{"gitId":"logical-1985516"},"content":"    - 1a1. Hirehub raises an error and asks recruiter to provide valid email address.","lastModifiedDate":"2024-04-14"},{"lineNumber":419,"author":{"gitId":"logical-1985516"},"content":"    - 1a2. Recruiter attempts to add the candidate with valid email address.","lastModifiedDate":"2024-04-14"},{"lineNumber":420,"author":{"gitId":"logical-1985516"},"content":"    - Steps 1a1-1a2 are repeated until the email address entered is in a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":421,"author":{"gitId":"acekhoon"},"content":"    - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"logical-1985516"},"content":"* 1b. Recruiter enters invalid phone number.","lastModifiedDate":"2024-04-14"},{"lineNumber":425,"author":{"gitId":"logical-1985516"},"content":"    - 1b1. Hirehub raises an error and asks recruiter to provide phone number in a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":426,"author":{"gitId":"logical-1985516"},"content":"    - 1b2. Recruiter attempts to add the candidate with valid phone number.","lastModifiedDate":"2024-04-14"},{"lineNumber":427,"author":{"gitId":"logical-1985516"},"content":"    - Steps 1b1-1b2 are repeated until the phone number entered is in the correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":428,"author":{"gitId":"acekhoon"},"content":"    - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"logical-1985516"},"content":"* 1c. Recruiter enters invalid country code.","lastModifiedDate":"2024-04-14"},{"lineNumber":432,"author":{"gitId":"logical-1985516"},"content":"    - 1c1. Hirehub raises an error and asks recruiter to provide available country code listed in the user guide.","lastModifiedDate":"2024-04-14"},{"lineNumber":433,"author":{"gitId":"logical-1985516"},"content":"    - 1c2. Recruiter attempts to add the candidate with valid country code.","lastModifiedDate":"2024-04-14"},{"lineNumber":434,"author":{"gitId":"logical-1985516"},"content":"    - Steps 1c1-1c2 are repeated until the country code entered is in the list of available country codes in the user guide.","lastModifiedDate":"2024-04-14"},{"lineNumber":435,"author":{"gitId":"acekhoon"},"content":"    - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":436,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":437,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":438,"author":{"gitId":"logical-1985516"},"content":"* 1d. Recruiter attempts to add the comment field of candidate.","lastModifiedDate":"2024-04-14"},{"lineNumber":439,"author":{"gitId":"logical-1985516"},"content":"    - 1d1. Hirehub raises an error and asks recruiter to use other method to add candidate comment.","lastModifiedDate":"2024-04-14"},{"lineNumber":440,"author":{"gitId":"logical-1985516"},"content":"    - 1d2. Recruiter attempts to add the candidate without the comment field.","lastModifiedDate":"2024-04-14"},{"lineNumber":441,"author":{"gitId":"logical-1985516"},"content":"    - Steps 1d1-1d2 are repeated until the recruiter stops attempting to add the comment field.","lastModifiedDate":"2024-04-14"},{"lineNumber":442,"author":{"gitId":"acekhoon"},"content":"    - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":443,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":444,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":445,"author":{"gitId":"logical-1985516"},"content":"* 1e. Recruiter does not enter either name, email, country or phone in the attribute field.","lastModifiedDate":"2024-04-14"},{"lineNumber":446,"author":{"gitId":"logical-1985516"},"content":"    - 1e1. Hirehub raises an error and asks the recruiter to provide name, email, country and phone of the candidate to be added.","lastModifiedDate":"2024-04-14"},{"lineNumber":447,"author":{"gitId":"logical-1985516"},"content":"    - 1e2. Recruiter attempts to add the candidate with name, email, country and phone.","lastModifiedDate":"2024-04-14"},{"lineNumber":448,"author":{"gitId":"logical-1985516"},"content":"    - Steps 1e1-1e2 are repeated until the recruiter enters name, email, country and phone.","lastModifiedDate":"2024-04-14"},{"lineNumber":449,"author":{"gitId":"acekhoon"},"content":"    - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":450,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":451,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":452,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":453,"author":{"gitId":"logical-1985516"},"content":"**\u003cu\u003eDelete candidate\u003c/u\u003e**","lastModifiedDate":"2024-04-14"},{"lineNumber":454,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":455,"author":{"gitId":"acekhoon"},"content":"**System**: Hirehub (Candidate Management System for Company Recruiters)","lastModifiedDate":"2024-02-29"},{"lineNumber":456,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":457,"author":{"gitId":"acekhoon"},"content":"**Use case**: UC02 - Delete Candidate from the List","lastModifiedDate":"2024-02-29"},{"lineNumber":458,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":459,"author":{"gitId":"acekhoon"},"content":"**Actor**: Recruiter","lastModifiedDate":"2024-02-29"},{"lineNumber":460,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":461,"author":{"gitId":"acekhoon"},"content":"**MSS**","lastModifiedDate":"2024-02-29"},{"lineNumber":462,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":463,"author":{"gitId":"logical-1985516"},"content":"1. Recruiter finds a candidate index to delete from the list displayed in the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":464,"author":{"gitId":"logical-1985516"},"content":"2. Recruiter deletes the candidate.","lastModifiedDate":"2024-04-14"},{"lineNumber":465,"author":{"gitId":"logical-1985516"},"content":"3. Hirehub requests the recruiter to confirm the deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":466,"author":{"gitId":"logical-1985516"},"content":"4. Recruiter confirms deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":467,"author":{"gitId":"logical-1985516"},"content":"5. Hirehub deletes the candidate from the list and displays the deleted candidate with its attributes.","lastModifiedDate":"2024-04-14"},{"lineNumber":468,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":469,"author":{"gitId":"logical-1985516"},"content":"Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":472,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-02-29"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":474,"author":{"gitId":"logical-1985516"},"content":"* 2a. Recruiter enters invalid candidate index.","lastModifiedDate":"2024-04-14"},{"lineNumber":475,"author":{"gitId":"logical-1985516"},"content":"    - 2a1. Hirehub raises an error and asks recruiter to provide valid candidate index.","lastModifiedDate":"2024-04-14"},{"lineNumber":476,"author":{"gitId":"logical-1985516"},"content":"    - 2a2. Recruiter attempts to delete the candidate with valid candidate index.","lastModifiedDate":"2024-04-14"},{"lineNumber":477,"author":{"gitId":"logical-1985516"},"content":"    - Steps 2a1-2a2 are repeated until the candidate index entered is correct.","lastModifiedDate":"2024-04-14"},{"lineNumber":478,"author":{"gitId":"chiralcentre"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":479,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":480,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":481,"author":{"gitId":"logical-1985516"},"content":"* 4a. Recruiter cancels deletion in confirmation stage.","lastModifiedDate":"2024-04-14"},{"lineNumber":482,"author":{"gitId":"logical-1985516"},"content":"    - 4a1. Hirehub exits the deletion process.","lastModifiedDate":"2024-04-14"},{"lineNumber":483,"author":{"gitId":"logical-1985516"},"content":"    - Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":486,"author":{"gitId":"logical-1985516"},"content":"* 4b. Recruiter enters invalid input for confirmation page.","lastModifiedDate":"2024-04-14"},{"lineNumber":487,"author":{"gitId":"logical-1985516"},"content":"    - 4b1. Hirehub prompts the recruiter to enter a valid input.","lastModifiedDate":"2024-04-14"},{"lineNumber":488,"author":{"gitId":"acekhoon"},"content":"    - Use case 4b is repeated if the recruiter enters invalid input for the confirmation page again.","lastModifiedDate":"2024-02-29"},{"lineNumber":489,"author":{"gitId":"chiralcentre"},"content":"    - Use case resumes from step 5 if recruiter confirms deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":490,"author":{"gitId":"chiralcentre"},"content":"    - Use case resumes from step 4a if recruiter cancels deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":491,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":492,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":493,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":494,"author":{"gitId":"logical-1985516"},"content":"**\u003cu\u003eEdit candidate details\u003c/u\u003e**","lastModifiedDate":"2024-04-14"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":496,"author":{"gitId":"acekhoon"},"content":"**System**: Hirehub (Candidate Management System for Company Recruiters)","lastModifiedDate":"2024-02-29"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":498,"author":{"gitId":"acekhoon"},"content":"**Use case**: UC03 - Edit Candidate from the List","lastModifiedDate":"2024-02-29"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":500,"author":{"gitId":"acekhoon"},"content":"**Actor**: Recruiter","lastModifiedDate":"2024-02-29"},{"lineNumber":501,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":502,"author":{"gitId":"acekhoon"},"content":"**MSS**","lastModifiedDate":"2024-02-29"},{"lineNumber":503,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":504,"author":{"gitId":"logical-1985516"},"content":"1. Recruiter finds a candidate index to edit from the list displayed in the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":505,"author":{"gitId":"logical-1985516"},"content":"2. Recruiter enters the candidate details to update in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":506,"author":{"gitId":"logical-1985516"},"content":"3. Hirehub updates the candidate details as requested.","lastModifiedDate":"2024-04-14"},{"lineNumber":507,"author":{"gitId":"logical-1985516"},"content":"4. Hirehub displays the edited candidate with the edited attributes.","lastModifiedDate":"2024-04-14"},{"lineNumber":508,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":509,"author":{"gitId":"logical-1985516"},"content":"Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":510,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":511,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":512,"author":{"gitId":"acekhoon"},"content":"**Extensions**","lastModifiedDate":"2024-02-29"},{"lineNumber":513,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":514,"author":{"gitId":"logical-1985516"},"content":"* 2a. Recruiter enters a candidate index that is not a positive integer.","lastModifiedDate":"2024-04-14"},{"lineNumber":515,"author":{"gitId":"logical-1985516"},"content":"    - 2a1. Hirehub raises an error and asks recruiter to provide valid candidate index.","lastModifiedDate":"2024-04-14"},{"lineNumber":516,"author":{"gitId":"logical-1985516"},"content":"    - 2a2. Recruiter attempts to edit the candidate with valid candidate index.","lastModifiedDate":"2024-04-14"},{"lineNumber":517,"author":{"gitId":"logical-1985516"},"content":"    - Steps 2a1-2a2 are repeated until the candidate index entered is valid.","lastModifiedDate":"2024-04-14"},{"lineNumber":518,"author":{"gitId":"logical-1985516"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":519,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":520,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":521,"author":{"gitId":"logical-1985516"},"content":"* 2b. Recruiter enters invalid email address.","lastModifiedDate":"2024-04-14"},{"lineNumber":522,"author":{"gitId":"logical-1985516"},"content":"    - 2b1. Hirehub raises an error and asks recruiter to provide valid email address.","lastModifiedDate":"2024-04-14"},{"lineNumber":523,"author":{"gitId":"logical-1985516"},"content":"    - 2b2. Recruiter attempts to edit the candidate with valid email address.","lastModifiedDate":"2024-04-14"},{"lineNumber":524,"author":{"gitId":"logical-1985516"},"content":"    - Steps 2b1-2b2 are repeated until the email address entered is in a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":525,"author":{"gitId":"logical-1985516"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":526,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":527,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":528,"author":{"gitId":"logical-1985516"},"content":"* 2c. Recruiter enters invalid phone number.","lastModifiedDate":"2024-04-14"},{"lineNumber":529,"author":{"gitId":"logical-1985516"},"content":"    - 2c1. Hirehub raises an error and asks recruiter to provide phone number in a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":530,"author":{"gitId":"logical-1985516"},"content":"    - 2c2. Recruiter attempts to edit the candidate with valid phone number.","lastModifiedDate":"2024-04-14"},{"lineNumber":531,"author":{"gitId":"logical-1985516"},"content":"    - Steps 2c1-2c2 are repeated until the phone number entered is in the correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":532,"author":{"gitId":"logical-1985516"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":533,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":534,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":535,"author":{"gitId":"logical-1985516"},"content":"* 2d. Recruiter enters invalid country code.","lastModifiedDate":"2024-04-14"},{"lineNumber":536,"author":{"gitId":"logical-1985516"},"content":"    - 2d1. Hirehub raises an error and asks recruiter to provide available country code listed in the user guide.","lastModifiedDate":"2024-04-14"},{"lineNumber":537,"author":{"gitId":"logical-1985516"},"content":"    - 2d2. Recruiter attempts to edit the candidate with valid country code.","lastModifiedDate":"2024-04-14"},{"lineNumber":538,"author":{"gitId":"logical-1985516"},"content":"    - Steps 2d1-2d2 are repeated until the country code entered is in the list of available country codes in the user guide.","lastModifiedDate":"2024-04-14"},{"lineNumber":539,"author":{"gitId":"logical-1985516"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":540,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":541,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":542,"author":{"gitId":"logical-1985516"},"content":"* 2e. Recruiter attempts to edit the comment field of candidate.","lastModifiedDate":"2024-04-14"},{"lineNumber":543,"author":{"gitId":"logical-1985516"},"content":"    - 2e1. Hirehub raises an error and asks recruiter to use other method to update candidate comment.","lastModifiedDate":"2024-04-14"},{"lineNumber":544,"author":{"gitId":"logical-1985516"},"content":"    - 2e2. Recruiter attempts to edit the candidate without the comment field.","lastModifiedDate":"2024-04-14"},{"lineNumber":545,"author":{"gitId":"logical-1985516"},"content":"    - Steps 2e1-2e2 are repeated until the recruiter stops attempting to update the comment field.","lastModifiedDate":"2024-04-14"},{"lineNumber":546,"author":{"gitId":"logical-1985516"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":547,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":548,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":549,"author":{"gitId":"logical-1985516"},"content":"* 2f. No attributes are provided by recruiter to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":550,"author":{"gitId":"logical-1985516"},"content":"    - 2f1. Hirehub raises an error and asks the recruiter to provide at least one attribute to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":551,"author":{"gitId":"logical-1985516"},"content":"    - 2f2. Recruiter attempts to edit the candidate with at least one attribute to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":552,"author":{"gitId":"logical-1985516"},"content":"    - Steps 2f1-2f2 are repeated until recruiter enters at least one attribute to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":553,"author":{"gitId":"logical-1985516"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":554,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":555,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":556,"author":{"gitId":"logical-1985516"},"content":"* 2g. Recruiter enters a positive integer for candidate index that is out of range.","lastModifiedDate":"2024-04-14"},{"lineNumber":557,"author":{"gitId":"logical-1985516"},"content":"    - 2g1. Hirehub raises an error and asks the recruiter to provide correct candidate index from 1 to the number of candidates in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":558,"author":{"gitId":"logical-1985516"},"content":"    - 2g2. Recruiter attempts to edit the candidate with valid candidate index within the range.","lastModifiedDate":"2024-04-14"},{"lineNumber":559,"author":{"gitId":"logical-1985516"},"content":"    - Steps 2g1-2g2 are repeated until recruiter enters valid candidate index.","lastModifiedDate":"2024-04-14"},{"lineNumber":560,"author":{"gitId":"logical-1985516"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":561,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":562,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":563,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":564,"author":{"gitId":"logical-1985516"},"content":"**\u003cu\u003eClear\u003c/u\u003e**","lastModifiedDate":"2024-04-14"},{"lineNumber":565,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":566,"author":{"gitId":"acekhoon"},"content":"**System**: Hirehub (Candidate Management System for Company Recruiters)","lastModifiedDate":"2024-02-29"},{"lineNumber":567,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":568,"author":{"gitId":"acekhoon"},"content":"**Use case**: UC04 - Clear candidates from the list","lastModifiedDate":"2024-02-29"},{"lineNumber":569,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":570,"author":{"gitId":"acekhoon"},"content":"**Actor**: Recruiter","lastModifiedDate":"2024-02-29"},{"lineNumber":571,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":572,"author":{"gitId":"acekhoon"},"content":"**MSS**","lastModifiedDate":"2024-02-29"},{"lineNumber":573,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":574,"author":{"gitId":"logical-1985516"},"content":"1. Recruiter enters the command to clear the database.","lastModifiedDate":"2024-04-14"},{"lineNumber":575,"author":{"gitId":"logical-1985516"},"content":"2. HireHub prompts recruiter to confirm the clearing.","lastModifiedDate":"2024-04-14"},{"lineNumber":576,"author":{"gitId":"logical-1985516"},"content":"3. Recruiter enters input into the command box to confirm the clearing.","lastModifiedDate":"2024-04-14"},{"lineNumber":577,"author":{"gitId":"0liverkong"},"content":"4. The database is cleared.","lastModifiedDate":"2024-03-30"},{"lineNumber":578,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":579,"author":{"gitId":"logical-1985516"},"content":"Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":580,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":581,"author":{"gitId":"acekhoon"},"content":"**Extensions**","lastModifiedDate":"2024-02-29"},{"lineNumber":582,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":583,"author":{"gitId":"logical-1985516"},"content":"1a. Recruiter types in additional stuff after ‘clear’ e.g. ‘clear 1’.","lastModifiedDate":"2024-04-14"},{"lineNumber":584,"author":{"gitId":"acekhoon"},"content":"- Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":585,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":586,"author":{"gitId":"logical-1985516"},"content":"3a. Recruiter tries to enter invalid commands in the command box.","lastModifiedDate":"2024-04-14"},{"lineNumber":587,"author":{"gitId":"logical-1985516"},"content":"- 3a1. HireHub prompts recruiter to enter valid input.","lastModifiedDate":"2024-04-14"},{"lineNumber":588,"author":{"gitId":"logical-1985516"},"content":"- Use case 3a is repeated if the recruiter enters invalid input for the confirmation page again.","lastModifiedDate":"2024-04-14"},{"lineNumber":589,"author":{"gitId":"chiralcentre"},"content":"- Use case resumes from step 4 if recruiter confirms deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":590,"author":{"gitId":"chiralcentre"},"content":"- Use case resumes from step 3b if recruiter cancels deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":591,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":592,"author":{"gitId":"logical-1985516"},"content":"3b. Recruiter aborts the clearing.","lastModifiedDate":"2024-04-14"},{"lineNumber":593,"author":{"gitId":"logical-1985516"},"content":"- 3b1. HireHub informs recruiter that the clear of the database has been aborted.","lastModifiedDate":"2024-04-14"},{"lineNumber":594,"author":{"gitId":"logical-1985516"},"content":"- Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-04-13"},{"lineNumber":597,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":598,"author":{"gitId":"logical-1985516"},"content":"**\u003cu\u003eAdd job\u003c/u\u003e**","lastModifiedDate":"2024-04-14"},{"lineNumber":599,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":600,"author":{"gitId":"logical-1985516"},"content":"**System**: Hirehub (Candidate Management System for Company Recruiters)","lastModifiedDate":"2024-04-13"},{"lineNumber":601,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":602,"author":{"gitId":"logical-1985516"},"content":"**Use case**: UC05 - Add jobs to the list","lastModifiedDate":"2024-04-13"},{"lineNumber":603,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":604,"author":{"gitId":"logical-1985516"},"content":"**Actor**: Recruiter","lastModifiedDate":"2024-04-13"},{"lineNumber":605,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":606,"author":{"gitId":"logical-1985516"},"content":"**MSS**","lastModifiedDate":"2024-04-13"},{"lineNumber":607,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":608,"author":{"gitId":"logical-1985516"},"content":"1.  Recruiter enters the details of the job to be added to the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":609,"author":{"gitId":"logical-1985516"},"content":"2.  Hirehub adds the job with the corresponding details as requested.","lastModifiedDate":"2024-04-14"},{"lineNumber":610,"author":{"gitId":"logical-1985516"},"content":"3.  Hirehub displays the details of the added job.","lastModifiedDate":"2024-04-13"},{"lineNumber":611,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":612,"author":{"gitId":"logical-1985516"},"content":"Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":613,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":614,"author":{"gitId":"logical-1985516"},"content":"**Extensions**","lastModifiedDate":"2024-04-14"},{"lineNumber":615,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":616,"author":{"gitId":"logical-1985516"},"content":"* 1a. Recruiter enters invalid job title.","lastModifiedDate":"2024-04-14"},{"lineNumber":617,"author":{"gitId":"logical-1985516"},"content":"  - 1a1. Hirehub raises an error and asks recruiter to provide valid job title.","lastModifiedDate":"2024-04-14"},{"lineNumber":618,"author":{"gitId":"logical-1985516"},"content":"  - 1a2. Recruiter attempts to add the job with valid job title.","lastModifiedDate":"2024-04-14"},{"lineNumber":619,"author":{"gitId":"chiralcentre"},"content":"  - Steps 1a1-1a2 are repeated until the job title entered is in a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":620,"author":{"gitId":"acekhoon"},"content":"  - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":621,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":622,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":623,"author":{"gitId":"chiralcentre"},"content":"* 1b. Recruiter enters invalid vacancy.","lastModifiedDate":"2024-04-14"},{"lineNumber":624,"author":{"gitId":"logical-1985516"},"content":"  - 1b1. Hirehub raises an error and asks recruiter to provide valid vacancy.","lastModifiedDate":"2024-04-14"},{"lineNumber":625,"author":{"gitId":"logical-1985516"},"content":"  - 1b2. Recruiter attempts to add the job with valid vacancy.","lastModifiedDate":"2024-04-14"},{"lineNumber":626,"author":{"gitId":"logical-1985516"},"content":"  - Steps 1b1-1b2 are repeated until the vacancy entered is valid.","lastModifiedDate":"2024-04-14"},{"lineNumber":627,"author":{"gitId":"acekhoon"},"content":"  - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":628,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":629,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":630,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":631,"author":{"gitId":"logical-1985516"},"content":"**\u003cu\u003eDelete job\u003c/u\u003e**","lastModifiedDate":"2024-04-14"},{"lineNumber":632,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":633,"author":{"gitId":"logical-1985516"},"content":"**System**: Hirehub (Candidate Management System for Company Recruiters)","lastModifiedDate":"2024-04-14"},{"lineNumber":634,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":635,"author":{"gitId":"logical-1985516"},"content":"**Use case**: UC06 - Delete job from the List","lastModifiedDate":"2024-04-14"},{"lineNumber":636,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":637,"author":{"gitId":"logical-1985516"},"content":"**Actor**: Recruiter","lastModifiedDate":"2024-04-14"},{"lineNumber":638,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":639,"author":{"gitId":"logical-1985516"},"content":"**MSS**","lastModifiedDate":"2024-04-14"},{"lineNumber":640,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":641,"author":{"gitId":"logical-1985516"},"content":"1. Recruiter finds a job index to delete from the list displayed in the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":642,"author":{"gitId":"logical-1985516"},"content":"2. Recruiter deletes the job.","lastModifiedDate":"2024-04-14"},{"lineNumber":643,"author":{"gitId":"logical-1985516"},"content":"3. Hirehub requests the recruiter to confirm the deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":644,"author":{"gitId":"logical-1985516"},"content":"4. Recruiter confirms deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":645,"author":{"gitId":"logical-1985516"},"content":"5. Hirehub deletes the job from the list and displays the deleted job with its attributes.","lastModifiedDate":"2024-04-14"},{"lineNumber":646,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":647,"author":{"gitId":"logical-1985516"},"content":"Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":648,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":649,"author":{"gitId":"logical-1985516"},"content":"**Extensions**","lastModifiedDate":"2024-04-14"},{"lineNumber":650,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":651,"author":{"gitId":"logical-1985516"},"content":"* 2a. Recruiter enters invalid job index.","lastModifiedDate":"2024-04-14"},{"lineNumber":652,"author":{"gitId":"logical-1985516"},"content":"  - 2a1. Hirehub raises an error and asks recruiter to provide valid job index.","lastModifiedDate":"2024-04-14"},{"lineNumber":653,"author":{"gitId":"logical-1985516"},"content":"  - 2a2. Recruiter attempts to delete the job with valid job index.","lastModifiedDate":"2024-04-14"},{"lineNumber":654,"author":{"gitId":"logical-1985516"},"content":"  - Steps 2a1-2a2 are repeated until the job index entered is correct.","lastModifiedDate":"2024-04-14"},{"lineNumber":655,"author":{"gitId":"chiralcentre"},"content":"  - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":656,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":657,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":658,"author":{"gitId":"logical-1985516"},"content":"* 4a. Recruiter cancels deletion in confirmation stage.","lastModifiedDate":"2024-04-14"},{"lineNumber":659,"author":{"gitId":"logical-1985516"},"content":"  - 4a1. Hirehub exits the deletion process.","lastModifiedDate":"2024-04-14"},{"lineNumber":660,"author":{"gitId":"logical-1985516"},"content":"  - Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":661,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":662,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":663,"author":{"gitId":"logical-1985516"},"content":"* 4b. Recruiter enters invalid input for confirmation page.","lastModifiedDate":"2024-04-14"},{"lineNumber":664,"author":{"gitId":"logical-1985516"},"content":"  - 4b1. Hirehub prompts the recruiter to enter a valid input.","lastModifiedDate":"2024-04-14"},{"lineNumber":665,"author":{"gitId":"logical-1985516"},"content":"  - Use case 4b is repeated if the recruiter enters invalid input for the confirmation page again.","lastModifiedDate":"2024-04-14"},{"lineNumber":666,"author":{"gitId":"chiralcentre"},"content":"  - Use case resumes from step 5 if recruiter confirms deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":667,"author":{"gitId":"chiralcentre"},"content":"  - Use case resumes from step 4a if recruiter cancels deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":668,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":669,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":670,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":671,"author":{"gitId":"logical-1985516"},"content":"**\u003cu\u003eEdit job details\u003c/u\u003e**","lastModifiedDate":"2024-04-14"},{"lineNumber":672,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":673,"author":{"gitId":"logical-1985516"},"content":"**System**: Hirehub (Candidate Management System for Company Recruiters)","lastModifiedDate":"2024-04-14"},{"lineNumber":674,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":675,"author":{"gitId":"logical-1985516"},"content":"**Use case**: UC07 - Edit Job from the List","lastModifiedDate":"2024-04-14"},{"lineNumber":676,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":677,"author":{"gitId":"logical-1985516"},"content":"**Actor**: Recruiter","lastModifiedDate":"2024-04-14"},{"lineNumber":678,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":679,"author":{"gitId":"logical-1985516"},"content":"**MSS**","lastModifiedDate":"2024-04-14"},{"lineNumber":680,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":681,"author":{"gitId":"logical-1985516"},"content":"1. Recruiter finds a job index to edit from the list displayed in the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":682,"author":{"gitId":"logical-1985516"},"content":"2. Recruiter enters the job details to update in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":683,"author":{"gitId":"logical-1985516"},"content":"3. Hirehub updates the job details as requested.","lastModifiedDate":"2024-04-14"},{"lineNumber":684,"author":{"gitId":"logical-1985516"},"content":"4. Hirehub displays the edited job with the edited attributes.","lastModifiedDate":"2024-04-14"},{"lineNumber":685,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":686,"author":{"gitId":"logical-1985516"},"content":"Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":687,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":688,"author":{"gitId":"logical-1985516"},"content":"**Extensions**","lastModifiedDate":"2024-04-14"},{"lineNumber":689,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":690,"author":{"gitId":"logical-1985516"},"content":"* 2a. Recruiter enters invalid job index that is not a positive integer.","lastModifiedDate":"2024-04-14"},{"lineNumber":691,"author":{"gitId":"logical-1985516"},"content":"  - 2a1. Hirehub raises an error and asks recruiter to provide a valid job index.","lastModifiedDate":"2024-04-14"},{"lineNumber":692,"author":{"gitId":"logical-1985516"},"content":"  - 2a2. Recruiter attempts to edit the job with a valid job index.","lastModifiedDate":"2024-04-14"},{"lineNumber":693,"author":{"gitId":"logical-1985516"},"content":"  - Steps 2a1-2a2 are repeated until the job index entered is correct.","lastModifiedDate":"2024-04-14"},{"lineNumber":694,"author":{"gitId":"logical-1985516"},"content":"  - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":695,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":696,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":697,"author":{"gitId":"logical-1985516"},"content":"* 2b. Recruiter enters invalid job title.","lastModifiedDate":"2024-04-14"},{"lineNumber":698,"author":{"gitId":"logical-1985516"},"content":"  - 2b1. Hirehub raises an error and asks recruiter to provide a valid job title.","lastModifiedDate":"2024-04-14"},{"lineNumber":699,"author":{"gitId":"logical-1985516"},"content":"  - 2b2. Recruiter attempts to edit the job with a valid job title.","lastModifiedDate":"2024-04-14"},{"lineNumber":700,"author":{"gitId":"logical-1985516"},"content":"  - Steps 2b1-2b2 are repeated until the job title entered is in a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":701,"author":{"gitId":"logical-1985516"},"content":"  - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":702,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":703,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":704,"author":{"gitId":"logical-1985516"},"content":"* 2c. Recruiter enters invalid vacancy.","lastModifiedDate":"2024-04-14"},{"lineNumber":705,"author":{"gitId":"logical-1985516"},"content":"  - 2c1. Hirehub raises an error and asks recruiter to provide a valid vacancy.","lastModifiedDate":"2024-04-14"},{"lineNumber":706,"author":{"gitId":"logical-1985516"},"content":"  - 2c2. Recruiter attempts to edit the job with valid vacancy.","lastModifiedDate":"2024-04-14"},{"lineNumber":707,"author":{"gitId":"logical-1985516"},"content":"  - Steps 2c1-2c2 are repeated until the vacancy entered is valid.","lastModifiedDate":"2024-04-14"},{"lineNumber":708,"author":{"gitId":"logical-1985516"},"content":"  - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":709,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":710,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":711,"author":{"gitId":"logical-1985516"},"content":"* 2d. No attributes are provided by recruiter to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":712,"author":{"gitId":"logical-1985516"},"content":"  - 2d1. Hirehub raises an error and asks the recruiter to provide at least one attribute to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":713,"author":{"gitId":"logical-1985516"},"content":"  - 2d2. Recruiter attempts to edit the job with at least one attribute to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":714,"author":{"gitId":"logical-1985516"},"content":"  - Steps 2d1-2d2 are repeated until recruiter enters at least one attribute to update.","lastModifiedDate":"2024-04-14"},{"lineNumber":715,"author":{"gitId":"logical-1985516"},"content":"  - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":716,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":717,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":718,"author":{"gitId":"logical-1985516"},"content":"* 2e. Recruiter enters a positive integer for job index that is out of range.","lastModifiedDate":"2024-04-14"},{"lineNumber":719,"author":{"gitId":"logical-1985516"},"content":"  - 2e1. Hirehub raises an error and asks the recruiter to provide correct job index from 1 to the number of jobs in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":720,"author":{"gitId":"logical-1985516"},"content":"  - 2e2. Recruiter attempts to edit the job with valid job index within the range.","lastModifiedDate":"2024-04-14"},{"lineNumber":721,"author":{"gitId":"logical-1985516"},"content":"  - Steps 2e1-2e2 are repeated until recruiter enters valid job index.","lastModifiedDate":"2024-04-14"},{"lineNumber":722,"author":{"gitId":"logical-1985516"},"content":"  - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":723,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":724,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":725,"author":{"gitId":"logical-1985516"},"content":"* 2f. Recruiter enters a vacancy that is fewer than the current number of OFFERED applications to the job.","lastModifiedDate":"2024-04-14"},{"lineNumber":726,"author":{"gitId":"logical-1985516"},"content":"  - 2f1. Hirehub raises an error and asks the recruiter to provide a larger vacancy.","lastModifiedDate":"2024-04-14"},{"lineNumber":727,"author":{"gitId":"logical-1985516"},"content":"  - 2f2. Recruiter attempts to edit the job with a vacancy that is not fewer than the current number of OFFERED applications to the job.","lastModifiedDate":"2024-04-14"},{"lineNumber":728,"author":{"gitId":"logical-1985516"},"content":"  - Steps 2f1-2f2 are repeated until recruiter enters a vacancy that is not fewer than the current number of OFFERED applications to the job.","lastModifiedDate":"2024-04-14"},{"lineNumber":729,"author":{"gitId":"logical-1985516"},"content":"  - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":730,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":731,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":732,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":733,"author":{"gitId":"logical-1985516"},"content":"**\u003cu\u003eAdd application\u003c/u\u003e**","lastModifiedDate":"2024-04-14"},{"lineNumber":734,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":735,"author":{"gitId":"logical-1985516"},"content":"**System**: Hirehub (Candidate Management System for Company Recruiters)","lastModifiedDate":"2024-04-14"},{"lineNumber":736,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":737,"author":{"gitId":"logical-1985516"},"content":"**Use case**: UC08 - Add application to the List","lastModifiedDate":"2024-04-14"},{"lineNumber":738,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":739,"author":{"gitId":"logical-1985516"},"content":"**Actor**: Recruiter","lastModifiedDate":"2024-04-14"},{"lineNumber":740,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":741,"author":{"gitId":"logical-1985516"},"content":"**MSS**","lastModifiedDate":"2024-04-14"},{"lineNumber":742,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":743,"author":{"gitId":"logical-1985516"},"content":"1.  Recruiter enters the details of the application to be added to the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":744,"author":{"gitId":"logical-1985516"},"content":"2.  Hirehub adds the application with the corresponding details as requested.","lastModifiedDate":"2024-04-14"},{"lineNumber":745,"author":{"gitId":"logical-1985516"},"content":"3.  Hirehub displays the details of the added application.","lastModifiedDate":"2024-04-14"},{"lineNumber":746,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":747,"author":{"gitId":"logical-1985516"},"content":"Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":748,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":749,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":750,"author":{"gitId":"logical-1985516"},"content":"**Extensions**","lastModifiedDate":"2024-04-14"},{"lineNumber":751,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":752,"author":{"gitId":"logical-1985516"},"content":"* 1a. Recruiter enters invalid email address.","lastModifiedDate":"2024-04-14"},{"lineNumber":753,"author":{"gitId":"logical-1985516"},"content":"  - 1a1. Hirehub raises an error and asks recruiter to provide valid email address.","lastModifiedDate":"2024-04-14"},{"lineNumber":754,"author":{"gitId":"logical-1985516"},"content":"  - 1a2. Recruiter attempts to add the application of a person with valid email address.","lastModifiedDate":"2024-04-14"},{"lineNumber":755,"author":{"gitId":"logical-1985516"},"content":"  - Steps 1a1-1a2 are repeated until the email address entered is in a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":756,"author":{"gitId":"logical-1985516"},"content":"  - Use case resumes from step 2.","lastModifiedDate":"2024-04-14"},{"lineNumber":757,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":758,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":759,"author":{"gitId":"logical-1985516"},"content":"* 1b. Recruiter enters invalid job title.","lastModifiedDate":"2024-04-14"},{"lineNumber":760,"author":{"gitId":"logical-1985516"},"content":"  - 1b1. Hirehub raises an error and asks recruiter to provide valid job title.","lastModifiedDate":"2024-04-14"},{"lineNumber":761,"author":{"gitId":"logical-1985516"},"content":"  - 1b2. Recruiter attempts to add the application to a job with a valid job title.","lastModifiedDate":"2024-04-14"},{"lineNumber":762,"author":{"gitId":"logical-1985516"},"content":"  - Steps 1b1-1b2 are repeated until the job title entered is in the correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":763,"author":{"gitId":"acekhoon"},"content":"  - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":764,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":765,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":766,"author":{"gitId":"logical-1985516"},"content":"* 1c. Recruiter enters invalid status.","lastModifiedDate":"2024-04-14"},{"lineNumber":767,"author":{"gitId":"logical-1985516"},"content":"  - 1c1. Hirehub raises an error and asks recruiter to provide valid status.","lastModifiedDate":"2024-04-14"},{"lineNumber":768,"author":{"gitId":"logical-1985516"},"content":"  - 1c2. Recruiter attempts to add the application with valid status.","lastModifiedDate":"2024-04-14"},{"lineNumber":769,"author":{"gitId":"logical-1985516"},"content":"  - Steps 1c1-1c2 are repeated until the status entered is a valid status.","lastModifiedDate":"2024-04-14"},{"lineNumber":770,"author":{"gitId":"acekhoon"},"content":"  - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":771,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":772,"author":{"gitId":"acekhoon"},"content":"  ","lastModifiedDate":"2024-02-29"},{"lineNumber":773,"author":{"gitId":"logical-1985516"},"content":"* 1d. Recruiter enters an email address that is not in the person list.","lastModifiedDate":"2024-04-14"},{"lineNumber":774,"author":{"gitId":"logical-1985516"},"content":"  - 1d1. Hirehub raises an error and asks recruiter to provide an email address that is in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":775,"author":{"gitId":"logical-1985516"},"content":"  - 1d2. Recruiter attempts to add the application of an existing person.","lastModifiedDate":"2024-04-14"},{"lineNumber":776,"author":{"gitId":"logical-1985516"},"content":"  - Steps 1d1-1d2 are repeated until the email address entered is an email address of an existing person.","lastModifiedDate":"2024-04-14"},{"lineNumber":777,"author":{"gitId":"acekhoon"},"content":"  - Use case resumes from step 2. ","lastModifiedDate":"2024-02-29"},{"lineNumber":778,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":779,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":780,"author":{"gitId":"logical-1985516"},"content":"* 1e. Recruiter enters a job title that is not in the job list.","lastModifiedDate":"2024-04-14"},{"lineNumber":781,"author":{"gitId":"logical-1985516"},"content":"  - 1e1. Hirehub raises an error and asks recruiter to provide a job title that is in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":782,"author":{"gitId":"logical-1985516"},"content":"  - 1e2. Recruiter attempts to add the application to an existing job.","lastModifiedDate":"2024-04-14"},{"lineNumber":783,"author":{"gitId":"logical-1985516"},"content":"  - Steps 1e1-1e2 are repeated until the job title entered is a job title of an existing job.","lastModifiedDate":"2024-04-14"},{"lineNumber":784,"author":{"gitId":"acekhoon"},"content":"  - Use case resumes from step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":785,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":786,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":787,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":788,"author":{"gitId":"logical-1985516"},"content":"**\u003cu\u003eDelete application\u003c/u\u003e**","lastModifiedDate":"2024-04-14"},{"lineNumber":789,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":790,"author":{"gitId":"acekhoon"},"content":"**System**: Hirehub (Candidate Management System for Company Recruiters)","lastModifiedDate":"2024-02-29"},{"lineNumber":791,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":792,"author":{"gitId":"logical-1985516"},"content":"**Use case**: UC09 - Delete application from the List","lastModifiedDate":"2024-04-14"},{"lineNumber":793,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":794,"author":{"gitId":"acekhoon"},"content":"**Actor**: Recruiter","lastModifiedDate":"2024-02-29"},{"lineNumber":795,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":796,"author":{"gitId":"acekhoon"},"content":"**MSS**","lastModifiedDate":"2024-02-29"},{"lineNumber":797,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":798,"author":{"gitId":"logical-1985516"},"content":"1. Recruiter finds an application index to delete from the application list displayed in the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":799,"author":{"gitId":"logical-1985516"},"content":"2. Recruiter deletes the application.","lastModifiedDate":"2024-04-14"},{"lineNumber":800,"author":{"gitId":"logical-1985516"},"content":"3. Hirehub requests the recruiter to confirm the deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":801,"author":{"gitId":"logical-1985516"},"content":"4. Recruiter confirms deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":802,"author":{"gitId":"logical-1985516"},"content":"5. Hirehub deletes the application from the list and displays the deleted application with its attributes.","lastModifiedDate":"2024-04-14"},{"lineNumber":803,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":804,"author":{"gitId":"logical-1985516"},"content":"Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":805,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":806,"author":{"gitId":"acekhoon"},"content":"**Extensions**","lastModifiedDate":"2024-02-29"},{"lineNumber":807,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":808,"author":{"gitId":"logical-1985516"},"content":"* 2a. Recruiter enters invalid application index.","lastModifiedDate":"2024-04-14"},{"lineNumber":809,"author":{"gitId":"logical-1985516"},"content":"  - 2a1. Hirehub raises an error and asks recruiter to provide valid application index.","lastModifiedDate":"2024-04-14"},{"lineNumber":810,"author":{"gitId":"logical-1985516"},"content":"  - 2a2. Recruiter attempts to delete the application with valid application index.","lastModifiedDate":"2024-04-14"},{"lineNumber":811,"author":{"gitId":"logical-1985516"},"content":"  - Steps 2a1-2a2 are repeated until the application index entered is correct.","lastModifiedDate":"2024-04-14"},{"lineNumber":812,"author":{"gitId":"logical-1985516"},"content":"  - Use case resumes from step 3.","lastModifiedDate":"2024-04-14"},{"lineNumber":813,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":814,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":815,"author":{"gitId":"logical-1985516"},"content":"* 4a. Recruiter cancels deletion in confirmation stage.","lastModifiedDate":"2024-04-14"},{"lineNumber":816,"author":{"gitId":"logical-1985516"},"content":"  - 4a1. Hirehub exits the deletion process.","lastModifiedDate":"2024-04-14"},{"lineNumber":817,"author":{"gitId":"logical-1985516"},"content":"  - Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":818,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"logical-1985516"},"content":"* 4b. Recruiter enters invalid input for confirmation page.","lastModifiedDate":"2024-04-14"},{"lineNumber":821,"author":{"gitId":"logical-1985516"},"content":"  - 4b1. Hirehub prompts the recruiter to enter a valid input.","lastModifiedDate":"2024-04-14"},{"lineNumber":822,"author":{"gitId":"logical-1985516"},"content":"  - Use case 4b is repeated if the recruiter enters invalid input for the confirmation page again.","lastModifiedDate":"2024-04-14"},{"lineNumber":823,"author":{"gitId":"chiralcentre"},"content":"  - Use case resumes from step 5 if recruiter confirms deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":824,"author":{"gitId":"chiralcentre"},"content":"  - Use case resumes from step 4a if recruiter cancels deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":825,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":826,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-04-13"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"chiralcentre"},"content":"4.  Should respond immediately to user input, as user will most likely be using a chain of commands","lastModifiedDate":"2024-02-29"},{"lineNumber":834,"author":{"gitId":"chiralcentre"},"content":"5.  Should be able to use offline","lastModifiedDate":"2024-02-29"},{"lineNumber":835,"author":{"gitId":"chiralcentre"},"content":"6.  The UI should be resizable as users will likely be referencing other tabs while using this product.","lastModifiedDate":"2024-02-29"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":840,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"leeweiming3"},"content":"* **Command**: The first word in the user input, determines ","lastModifiedDate":"2024-04-14"},{"lineNumber":842,"author":{"gitId":"chiralcentre"},"content":"* **GUI**: Graphical user interface","lastModifiedDate":"2024-04-14"},{"lineNumber":843,"author":{"gitId":"chiralcentre"},"content":"* **JSON**: JavaScript Object Notation","lastModifiedDate":"2024-04-15"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"chiralcentre"},"content":"   1. Run the command `java -jar hirehub.jar` on the command line in the same directory or double-click the jar file. Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2024-04-14"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"chiralcentre"},"content":"   1. Re-launch the app by running the command `java -jar hirehub.jar` on the command line in the same directory or double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":869,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"chiralcentre"},"content":"      Expected: A confirmation message would be displayed where the user would type Y/N to confirm the deletion. If Y is selected, it will delete the candidate from the list and display the deleted candidate. If N is selected, it will display that the delete operation is cancelled. ","lastModifiedDate":"2024-04-14"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"chiralcentre"},"content":"      Expected: No person is deleted. Error details are shown in the UI.","lastModifiedDate":"2024-04-14"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"chiralcentre"},"content":"Hirehub data is saved locally in three separate files `addressbook.json`, `applications.json` and `jobs.json` automatically after any command.","lastModifiedDate":"2024-04-14"},{"lineNumber":888,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":889,"author":{"gitId":"chiralcentre"},"content":"1. Test case: Data folder is missing","lastModifiedDate":"2024-04-14"},{"lineNumber":890,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":891,"author":{"gitId":"chiralcentre"},"content":"   a. On app launch, if no data folder is detected, a new Hirehub instance with sample data will be used. ","lastModifiedDate":"2024-04-14"},{"lineNumber":892,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":893,"author":{"gitId":"chiralcentre"},"content":"   b. Run any command and a new data folder containing `addressbook.json`, `applications.json` and `jobs.json` files will be generated.","lastModifiedDate":"2024-04-14"},{"lineNumber":894,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":895,"author":{"gitId":"chiralcentre"},"content":"   c. If you do not run any command and quit the app, no data folder or file will be generated.","lastModifiedDate":"2024-04-14"},{"lineNumber":896,"author":{"gitId":"chiralcentre"},"content":"  ","lastModifiedDate":"2024-04-14"},{"lineNumber":897,"author":{"gitId":"chiralcentre"},"content":"2. Test case: All three files `addressbook.json`, `applications.json` and `jobs.json` are missing in the data folder.","lastModifiedDate":"2024-04-14"},{"lineNumber":898,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":899,"author":{"gitId":"chiralcentre"},"content":"   a. On app launch, if there is a data folder but it is empty, a new Hirehub instance with sample data will be used.","lastModifiedDate":"2024-04-14"},{"lineNumber":900,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":901,"author":{"gitId":"chiralcentre"},"content":"   b. Run any command and three files `addressbook.json`, `applications.json` and `jobs.json` will be generated in the data folder.","lastModifiedDate":"2024-04-14"},{"lineNumber":902,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":903,"author":{"gitId":"chiralcentre"},"content":"   c. If you do not run any command and quit the app, no files will be generated.","lastModifiedDate":"2024-04-14"},{"lineNumber":904,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":905,"author":{"gitId":"chiralcentre"},"content":"3. Test case: `jobs.json` is corrupted i.e. does not follow the correct format","lastModifiedDate":"2024-04-14"},{"lineNumber":906,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":907,"author":{"gitId":"chiralcentre"},"content":"   a. On app launch, if any file is corrupted, a new Hirehub instance with only data from `addressbook.json` will be used, assuming `addressbook.json` is not corrupted.","lastModifiedDate":"2024-04-14"},{"lineNumber":908,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":909,"author":{"gitId":"chiralcentre"},"content":"   b. Run any command and the contents of the three JSON files will be overwritten to contain the new data, which is of a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":910,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":911,"author":{"gitId":"chiralcentre"},"content":"   c. If you do not run any command and quit the app, no changes will be made to the three JSON files.","lastModifiedDate":"2024-04-14"},{"lineNumber":912,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":913,"author":{"gitId":"chiralcentre"},"content":"4. Test case: `addressbook.json` is corrupted i.e. does not follow the correct format","lastModifiedDate":"2024-04-14"},{"lineNumber":914,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":915,"author":{"gitId":"chiralcentre"},"content":"   a. On app launch, if any file is corrupted, a new Hirehub instance with only data from `jobs.json` will be used, assuming `jobs.json` is not corrupted.","lastModifiedDate":"2024-04-14"},{"lineNumber":916,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":917,"author":{"gitId":"chiralcentre"},"content":"   b. Run any command and the contents of the three JSON files will be overwritten to contain the new data, which is of a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":918,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":919,"author":{"gitId":"chiralcentre"},"content":"   c. If you do not run any command and quit the app, no changes will be made to the three JSON files.","lastModifiedDate":"2024-04-14"},{"lineNumber":920,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":921,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":922,"author":{"gitId":"chiralcentre"},"content":"5. Test case: `applications.json` is corrupted i.e. does not follow the correct format","lastModifiedDate":"2024-04-14"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"chiralcentre"},"content":"   a. On app launch, if any file is corrupted, a new Hirehub instance with data from both `addressbook.json` and `jobs.json` will be used, assuming the two files are not corrupted.","lastModifiedDate":"2024-04-14"},{"lineNumber":925,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"chiralcentre"},"content":"   b. Run any command and the contents of the three JSON files will be overwritten to contain the new data, which is of a correct format.","lastModifiedDate":"2024-04-14"},{"lineNumber":927,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"chiralcentre"},"content":"   c. If you do not run any command and quit the app, no changes will be made to the three JSON files.","lastModifiedDate":"2024-04-14"},{"lineNumber":929,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":930,"author":{"gitId":"chiralcentre"},"content":"## **Appendix: Planned enhancements**","lastModifiedDate":"2024-04-13"},{"lineNumber":931,"author":{"gitId":"chiralcentre"},"content":"1. Currently, the help command opens a new window, which contains a link to the app’s user guide which is hosted online. In future iterations, we intend to add a summarised overview of all commands in the window that pops up with the help command to enhance the user experience, and reduce reliance on an internet connection.","lastModifiedDate":"2024-04-13"},{"lineNumber":932,"author":{"gitId":"chiralcentre"},"content":"2. Currently, in the event when country code is provided, Hirehub does not verify that the country code is correct. Hirehub also does not verify if the phone number is valid with the given country code. In future iterations, we intend to add the corresponding validation checks.","lastModifiedDate":"2024-04-13"},{"lineNumber":933,"author":{"gitId":"chiralcentre"},"content":"3. Currently, Hirehub does not support backslashes or commas for the name fields. In future iterations, we intend to add support for these characters, as well as other special characters that may appear in names.","lastModifiedDate":"2024-04-13"},{"lineNumber":934,"author":{"gitId":"chiralcentre"},"content":"4. Currently, the UI may appear to be too small without resizing to full screen. Hence, we plan to increase default UI size to enhance the UI.","lastModifiedDate":"2024-04-13"},{"lineNumber":935,"author":{"gitId":"chiralcentre"},"content":"5. Currently, if no details are changed from an edit, the edit operation would go through with a success message. As editing without changing details is likely unintentional, we intend to add a message to inform the user that no details has been changed from the edit.","lastModifiedDate":"2024-04-13"},{"lineNumber":936,"author":{"gitId":"chiralcentre"},"content":"6. Currently, we can add duplicate tags to a candidate without any errors, and only one of the duplicate tags would be added to the candidate. We intend to add a message informing the user that they are adding duplicate tags.","lastModifiedDate":"2024-04-13"},{"lineNumber":937,"author":{"gitId":"chiralcentre"},"content":"7. Currently, tags only support alphanumeric characters, which means that whitespaces are not supported. We intend to support tags with multiple words by relaxing the constraints of the tag to allow for whitespaces.","lastModifiedDate":"2024-04-13"},{"lineNumber":938,"author":{"gitId":"chiralcentre"},"content":"8. Currently, the UI does not support wrapping of tags. We intend to fix this in the future to allow users to view tags with long names.","lastModifiedDate":"2024-04-13"},{"lineNumber":939,"author":{"gitId":"chiralcentre"},"content":"9. Currently, Hirehub will throw a Null Pointer Exception if there is the value `null` in the tag list of a candidate (done via editing addressbook.json). We intend to fix this by allowing Hirehub to launch (with a new empty addressbook.json) and informing the user that the JSON file is corrupted.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"0liverkong":18,"acekhoon":150,"leeweiming3":20,"-":294,"logical-1985516":343,"chiralcentre":114}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"   1. Run the `seedu.hirehub.Main` and try a few commands.","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"chiralcentre":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"   e.g. `seedu.hirehub.commons.StringUtilTest`","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"   e.g. `seedu.hirehub.storage.StorageManagerTest`","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"   e.g. `seedu.hirehub.logic.LogicManagerTest`","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"-":33,"chiralcentre":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"HireHub is a **desktop app for managing candidates, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). Within Hirehub, recruiters can easily manage their candidates, jobs and job applications. If you can type fast, HireHub can get your candidate management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"### Tips on using this user guide","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"* Go through _Quick Start_ to ensure that you are able to use hirehub.","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"* Go through _Features_ to familiarise yourself with the terms used. You may want to have a separate pdf for viewing the _Features_, so that you can easily refer to it if you have forgotten any part of it.","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"* To navigate to any command quickly, click the corresponding section in the _Table of Contents_.","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"* If you are facing any problems, you may want to go to the _FAQ_ section to see if it addresses the problems.","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"2. Download the latest `hirehub.jar` from [here](https://github.com/AY2324S2-CS2103T-W08-1/tp/releases).","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your HireHub.","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar hirehub.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"    * `add n/John Doe e/johnd@example.com c/HK p/61234567 t/Internal` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.\u003cbr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"* These are the constraints for each of the parameters (this applies to all commands):","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"0liverkong"},"content":"| Parameter       | Prefix | Format|","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"|-----------------|--------||","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"0liverkong"},"content":"| **NAME**        | n/     | Cannot be blank, and only alphanumeric characters and spaces are allowed. In particular, special characters such as `/` and `-` and non-English characters (e.g. Chinese characters) are not allowed. This would be part of the planned improvements.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"0liverkong"},"content":"| **PHONE**       | p/     | Cannot be blank and must adhere to the following constraints: \u003cbr\u003e\u003cbr\u003e 1. International phone numbers should contain a country code in front (+ followed by 1 to 3 digits), then a space, followed by a combination of digits, spaces, parentheses or hyphens with at least 3 digits. \u003cbr\u003e\u003cbr\u003e 2. If country code is omitted, it must be a valid Singapore phone number. It must start with 3, 6, 8 or 9 and must be in the following formats: `XXXXYYYY`, `XXXX-YYYY` or `XXXX YYYY`. \u003cbr\u003e\u003cbr\u003e3. Other than the above constraints, there is no other validation to check if a country code is valid. Furthermore, given a country code, there is no phone validation specific to the country code. This would be part of the planned improvements. |","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"0liverkong"},"content":"| **EMAIL**       | e/     | Must be of the format local-part@domain and adhere to the following constraints: \u003cbr\u003e\u003cbr\u003e 1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+_.-). The local-part may not start or end with any special characters. \u003cbr\u003e\u003cbr\u003e 2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods. The domain name must: \u003cbr\u003e\u003cbr\u003e 2a. end with a domain label at least 2 characters long \u003cbr\u003e 2b. have each domain label start and end with alphanumeric characters \u003cbr\u003e 2c. have each domain label consist of alphanumeric characters, separated only by hyphens, if any.                                                   |","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"0liverkong"},"content":"| **COUNTRY**     | c/     | Must be a valid ISO-3166-1 alpha-2 code which can be found from https://www.iso.org/obp/ui/#search/code/. It is case-sensitive and must be in ALL CAPITALS. Alternatively, you can refer to the [appendix](#appendix-country-codes) for the exact ISO code to use for each country. Note that the value for country field shown on the UI is the English display name equivalent of the ISO code for user convenience, and what is actually stored in the backend is the ISO code.                                                                                                                                                                                                                                                                  |","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"| **TAG**         | t/     | Cannot be blank (except in edit command), and only alphanumeric characters with no whitespace are allowed|","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"| **COMMENT**     | m/     | Can be blank and does not have any constraints|","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"0liverkong"},"content":"| **TITLE**       | ti/    | Cannot be blank and has a character limit of|","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"0liverkong"},"content":"| **DESCRIPTION** | d/     | Can be blank and does not have any constraints|","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"0liverkong"},"content":"| **VACANCY**     | v/     | Must be a positive integer|","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"| **STATUS**      | s/     | Must be one of the following 5 statuses (not case-sensitive): PRESCREEN, IN_PROGRESS, WAITLIST, OFFERED, REJECTED                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"* These are the primary key (i.e. no 2 items can have the same parameter) of candidates, jobs and applications respectively:","lastModifiedDate":"2024-04-11"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"  * **Candidates**: EMAIL","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"  * **Jobs**: TITLE","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"  * **Applications**: (EMAIL, TITLE) - either EMAIL or TITLE can be the same, as long as both are not the same.","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"  e.g. if the command specifies `n/NAME p/PHONE`, `p/PHONE n/NAME` is also acceptable.","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"chiralcentre"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"Adds a person to the candidate list.","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"Format: `add n/NAME e/EMAIL c/COUNTRY p/PHONE [t/TAG]…​`","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"0liverkong"},"content":"* `add n/John Doe e/johnd@example.com c/HK p/61234567`","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"* `add n/John Doe e/asdf@gmail.com c/SG p/61234567 t/Internal`","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"0liverkong"},"content":"The following is an example of how the `add` command can be run in the GUI.","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"0liverkong"},"content":"![AddCommand](images/add/AddCommand.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"0liverkong"},"content":"After the application has been successfully added, a success message will be shown in the output box. You can also see your new person in the person list display as seen below.","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"0liverkong"},"content":"![AddOutput](images/add/AddOutput.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"### Adding a job: `add_job`","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"Adds a job to the job list.","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"Format: `add_job ti/TITLE [d/DESCRIPTION] v/VACANCY`","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"* `add_job ti/Software Engineer d/Must be proficient in C++ v/10`","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"* `add_job ti/ML Engineer v/15`","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"0liverkong"},"content":"The following is an example of how the `add_job` command can be run in the GUI.","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"0liverkong"},"content":"![AddJobCommand](images/add-job/AddJobCommand.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"After the application has been successfully added, a success message will be shown in the output box. You can also see your new job in the job list display as seen below.","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"0liverkong"},"content":"![AddJobOutput](images/add-job/AddJobOutput.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"logical-1985516"},"content":"### Adding an application: `add_app`","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"Adds a job application from a candidate to the application list.","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"logical-1985516"},"content":"Format: `add_app e/EMAIL ti/TITLE [s/STATUS]`","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"logical-1985516"},"content":"* The application added will contain the candidate with the specified email and the job with the specified title.","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"logical-1985516"},"content":"* If `STATUS` is omitted, then the `STATUS` of the application will be `PRESCREEN`.","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"logical-1985516"},"content":"* There cannot be 2 or more applications with the same pair of candidate and job.","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"chiralcentre"},"content":"* The addition of an application to a job will fail if any of these conditions are met:","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"logical-1985516"},"content":"    * The status of the application to be added is `OFFERED`, and the number of `OFFERED` applications to the job is already equal to the number of vacancies of the job.","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"logical-1985516"},"content":"    * The candidate list does not contain a candidate with the specified email.","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"logical-1985516"},"content":"    * The job list does not contain a job with the specified job title.","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"chiralcentre"},"content":"* `add_app e/lidavid@example.com ti/Software Engineer (Singapore)`","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"chiralcentre"},"content":"* `add_app e/berniceyu@example.com ti/Software Engineer (Singapore) s/OFFERED`","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"chiralcentre"},"content":"The following is an example of how the `add_app` command can be run in the GUI.","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"chiralcentre"},"content":"![AddAppCommand](images/add-app/AddAppCommand.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"chiralcentre"},"content":"After the application has been successfully added, a success message will be shown in the output box. You can also see your new application in the application list display as seen below.","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"chiralcentre"},"content":"![AddAppOutput](images/add-app/AddAppOutput.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"acekhoon"},"content":"### Edit candidate details: `edit`","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"logical-1985516"},"content":"Edits an existing candidate in the candidate list.","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"acekhoon"},"content":"You can edit any of the valid candidate details including name, email, country and tags at the specified **INDEX**. Here, **INDEX** refers to the index number of candidates shown in the displayed candidate list.","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"acekhoon"},"content":"Format: `edit INDEX [n/NAME] [e/EMAIL] [c/COUNTRY] [p/PHONE] [t/TAG]…​`","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"chiralcentre"},"content":"* Even though you can edit multiple candidate details at once, attribute to edit must be **non-empty**. In other words, you must edit **at least one attribute** specified above.","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"chiralcentre"},"content":"* When **editing tags**, the existing tags of the candidate will be **removed**. Thus, you must specify **every tag** you want to keep on the candidate whenever you edit the candidate details.","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"chiralcentre"},"content":"* Applications involving the candidate to edit will be updated to involve the edited candidate.","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"chiralcentre"},"content":"* **Comment** field for the candidates **cannot be edited** by `edit` as there is a dedicated method for editing it separately.","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"acekhoon"},"content":"* `edit 2 n/Johnny Doe e/johnnydoe@gmail.com c/SG`","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":185,"author":{"gitId":"acekhoon"},"content":"This command edits **name**, **email**, and **country of residence** of the candidate with index 2 to **Johnny Doe**, **johnnydoe@gmail.com**, and **Singapore**, respectively.","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":187,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":188,"author":{"gitId":"acekhoon"},"content":"* `edit 3 n/Jeb Song e/jebsong@gmail.com t/IMOGold`","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"acekhoon"},"content":"This command edits **name**, **email**, and the tag for **acceptance status** of the candidate with index 3 to **Jeb Song**, **jebsong@gmail.com**, and **IMOGold**, respectively. Note that the existing tag(s) on this candidate (if any) is/are completely removed and a new tag `IMOGold` is added.","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"acekhoon"},"content":"If edit command is successfully executed, the app will display the edited candidate with the new attributes.","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"logical-1985516"},"content":"### Edit a job: `edit_job`","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"logical-1985516"},"content":"Edits an existing job in the job list.","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"logical-1985516"},"content":"You can edit any of the valid job details including title, description and vacancy at the specified **INDEX**. Here, **INDEX** refers to the index number of job shown in the displayed job list.","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"logical-1985516"},"content":"Format: `edit_job INDEX [ti/TITLE] [d/DESCRIPTION] [v/VACANCY]`","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"leeweiming3"},"content":"Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"logical-1985516"},"content":"* `edit_job 1 ti/Quantitative Trader d/Must have strong statistics background v/3`","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"chiralcentre"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"chiralcentre"},"content":"* Even though you can edit multiple job details at once, attribute to edit must be **non-empty**. In other words, you must edit **at least one attribute** specified above.","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"chiralcentre"},"content":"* Applications involving the job to edit will be updated to involve the edited job.","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"chiralcentre"},"content":"* Editing of the vacancy of a job will fail if the edited vacancy is less than the current number of applications to the job with `OFFERED` status.","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"chiralcentre"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"logical-1985516"},"content":"### Adding a comment on a candidate: `comment`","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"logical-1985516"},"content":"Leaves comments on important points to note down for individual candidates during the recruitment process. This overwrites existing comment (if any) and displays the resulting candidate.","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"acekhoon"},"content":"* `INDEX` must be within the range `1` to `n`, where `n` is the number of candidates in the displayed candidate list.","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"logical-1985516"},"content":"Format: `comment INDEX COMMENT`","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"leeweiming3"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"logical-1985516"},"content":"* `comment 3 Managed to solve every round 3 interview questions. He must be a strong candidate, potentially to be recruited as a quantitative research intern at Jane Street.`","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"logical-1985516"},"content":"* `comment 1` deletes the comment from candidate of index 1.","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"logical-1985516"},"content":"### Tag a candidate: `tag`","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"logical-1985516"},"content":"Appends the tag or tags to a candidate\u0027s list of tags.","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"logical-1985516"},"content":"You can list any number of tags greater than 0, and all of them will be added to the specified **INDEX**. Here, **INDEX** refers to the index number of candidates shown in the displayed candidate list.","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"leeweiming3"},"content":"Duplicate tags or already-present tags will not affect the candidate.","lastModifiedDate":"2024-04-12"},{"lineNumber":233,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":234,"author":{"gitId":"leeweiming3"},"content":"Format: `tag INDEX t/TAG [t/TAG]…​`","lastModifiedDate":"2024-04-12"},{"lineNumber":235,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":236,"author":{"gitId":"logical-1985516"},"content":"* At least one tag must be provided.","lastModifiedDate":"2024-03-31"},{"lineNumber":237,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":238,"author":{"gitId":"leeweiming3"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"acekhoon"},"content":"* `tag 2 t/smart` adds the tag \"smart\" to the candidate with index 2.","lastModifiedDate":"2024-04-14"},{"lineNumber":240,"author":{"gitId":"acekhoon"},"content":"* `tag 4 t/ExceptionalWork t/IMOGold t/PhD` adds the tags \"ExceptionalWork\", \"IMOGold\" and \"PhD\" to the candidate with index 4.","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":242,"author":{"gitId":"logical-1985516"},"content":"If tag command is successfully executed, the app will display the candidate with the new tags.","lastModifiedDate":"2024-03-31"},{"lineNumber":243,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":244,"author":{"gitId":"logical-1985516"},"content":"### Delete tag of a candidate: `delete_tag`","lastModifiedDate":"2024-03-31"},{"lineNumber":245,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":246,"author":{"gitId":"logical-1985516"},"content":"Deletes existing tag(s) from a candidate\u0027s list of tags.","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":248,"author":{"gitId":"acekhoon"},"content":"You can delete tags for any candidates in the displayed list at the specified **INDEX**. Here, **INDEX** refers to the index number of candidates shown in the displayed candidate list. The candidate index **must be** within the range from ***1*** to ***n***, where ***n*** represents the **number of candidates** in the candidate list displayed in the UI.","lastModifiedDate":"2024-04-14"},{"lineNumber":249,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":250,"author":{"gitId":"leeweiming3"},"content":"Format: `delete_tag INDEX t/TAG [t/TAG]…​`","lastModifiedDate":"2024-04-12"},{"lineNumber":251,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":252,"author":{"gitId":"logical-1985516"},"content":"* At least one tag must be provided.","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"logical-1985516"},"content":"* The specified tag(s) must be in the candidate\u0027s list of tags.","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":255,"author":{"gitId":"logical-1985516"},"content":"Example:","lastModifiedDate":"2024-03-31"},{"lineNumber":256,"author":{"gitId":"chiralcentre"},"content":"* `delete_tag 2 t/colleagues t/friends` removes these tags from the 2nd candidate displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":258,"author":{"gitId":"logical-1985516"},"content":"### Change status of an application: `status`","lastModifiedDate":"2024-03-31"},{"lineNumber":259,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":260,"author":{"gitId":"logical-1985516"},"content":"Changes the interview status of an application.","lastModifiedDate":"2024-03-31"},{"lineNumber":261,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":262,"author":{"gitId":"logical-1985516"},"content":"Interview status must be one of the following: `PRESCREEN`, `IN_PROGRESS`, `WAITLIST`, `OFFERED`, `REJECTED`.","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"logical-1985516"},"content":"When an application is added, by default it has status `PRESCREEN`.","lastModifiedDate":"2024-03-31"},{"lineNumber":264,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":265,"author":{"gitId":"acekhoon"},"content":"You can edit status of any applications in the displayed list at the specified **INDEX**. Here, **INDEX** refers to the index number of applications shown in the displayed application list. The application index **must be** within the range from ***1*** to ***n***, where ***n*** represents the **number of applications** in the application list displayed in the UI.","lastModifiedDate":"2024-04-14"},{"lineNumber":266,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":267,"author":{"gitId":"logical-1985516"},"content":"Format: `status INDEX STATUS`","lastModifiedDate":"2024-03-31"},{"lineNumber":268,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":269,"author":{"gitId":"logical-1985516"},"content":"* The status update to an application of a job will fail under this condition:","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"logical-1985516"},"content":"    * The status of the application to change to is `OFFERED`, and the number of `OFFERED` applications to the job is already equal to the number of vacancies of the job.","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"leeweiming3"},"content":"Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"chiralcentre"},"content":"* `status 2 WAITLIST` changes the status of the application with index 2 to `WAITLIST`.","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":275,"author":{"gitId":"logical-1985516"},"content":"If status command is successfully executed, the app will display the application with the new status.","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":277,"author":{"gitId":"chiralcentre"},"content":"The image below demonstrates an error from the app when the user attempts to add more applications with `OFFERED` status than the initial vacancy for the target job:","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":279,"author":{"gitId":"acekhoon"},"content":"![ExceedsVacancyImage](images/status/ExceedsVacancyImage.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":280,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":281,"author":{"gitId":"acekhoon"},"content":"The above example attempts to add more `OFFERED` candidates for the job titled `Senior Software Engineer (Singapore)` with initial vacancy 1 where there is already 1 candidate, \"Alex Yeoh\", whose status is `OFFERED` for this position.","lastModifiedDate":"2024-04-14"},{"lineNumber":282,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":283,"author":{"gitId":"acekhoon"},"content":"### Delete a candidate: `delete`","lastModifiedDate":"2024-02-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"logical-1985516"},"content":"Deletes an existing candidate from the candidate list.","lastModifiedDate":"2024-04-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"acekhoon"},"content":"You can delete any candidates in the displayed list at the specified **INDEX**. Here, **INDEX** refers to the index number of candidates shown in the displayed candidate list. The candidate index **must be** within the range from ***1*** to ***n***, where ***n*** represents the **number of candidates** in the candidate list displayed in the UI.","lastModifiedDate":"2024-04-14"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":292,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"logical-1985516"},"content":"* If INDEX provided is valid, a confirmation message would be displayed where the user would type **Y/N** (case-sensitive) to confirm the deletion. If **Y** is selected, it will delete the candidate from the list and display the deleted candidate. If **N** is selected, it will display that the delete operation is cancelled.","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"chiralcentre"},"content":"* Applications involving the candidate to delete will also be deleted.","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":296,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":297,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":298,"author":{"gitId":"chiralcentre"},"content":"Example : `delete 1` removes the candidate at first position in the candidate list displayed.","lastModifiedDate":"2024-04-14"},{"lineNumber":299,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":300,"author":{"gitId":"chiralcentre"},"content":"The following is an example of how the `delete` command can be run in the GUI.","lastModifiedDate":"2024-04-14"},{"lineNumber":301,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":302,"author":{"gitId":"chiralcentre"},"content":"![DeleteCommand](images/delete/DeleteCommand.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":303,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":304,"author":{"gitId":"chiralcentre"},"content":"A confirmation message will show up. Type **Y** to confirm the deletion.","lastModifiedDate":"2024-04-14"},{"lineNumber":305,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":306,"author":{"gitId":"chiralcentre"},"content":"![DeleteConfirmation](images/delete/DeleteConfirmation.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":307,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":308,"author":{"gitId":"chiralcentre"},"content":"After the person has been successfully added, a success message will be shown in the output box. You can see the person deleted from the person list, and all corresponding applications associated with the deleted person have been removed as well, as seen below.","lastModifiedDate":"2024-04-14"},{"lineNumber":309,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":310,"author":{"gitId":"chiralcentre"},"content":"![DeleteCommandOutput](images/delete/DeleteCommandOutput.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"logical-1985516"},"content":"### Delete a job: `delete_job`","lastModifiedDate":"2024-03-31"},{"lineNumber":313,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":314,"author":{"gitId":"acekhoon"},"content":"Deletes an existing job from the job list displayed in the UI.","lastModifiedDate":"2024-04-14"},{"lineNumber":315,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":316,"author":{"gitId":"acekhoon"},"content":"You can delete any jobs in the displayed list at the specified **INDEX**. Here, **INDEX** refers to the index number of jobs shown in the displayed job list. The job index **must be** within the range from ***1*** to ***n***, where ***n*** represents the **number of jobs** in the job list displayed in the UI.","lastModifiedDate":"2024-04-14"},{"lineNumber":317,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":318,"author":{"gitId":"logical-1985516"},"content":"Format: `delete_job INDEX`","lastModifiedDate":"2024-03-31"},{"lineNumber":319,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":320,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-03-31"},{"lineNumber":321,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":322,"author":{"gitId":"logical-1985516"},"content":"* If INDEX provided is valid, a confirmation message would be displayed where the user would type **Y/N** (case-sensitive) to confirm the deletion. If **Y** is selected, it will delete the job from the list and display the deleted job. If **N** is selected, it will display that the delete operation is cancelled.","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"chiralcentre"},"content":"* Applications involving the job to delete will also be deleted.","lastModifiedDate":"2024-04-04"},{"lineNumber":324,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":325,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-03-31"},{"lineNumber":326,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":327,"author":{"gitId":"logical-1985516"},"content":"Example:","lastModifiedDate":"2024-04-02"},{"lineNumber":328,"author":{"gitId":"leeweiming3"},"content":"* `delete_job 3` removes the job at third position in the job list displayed.","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":330,"author":{"gitId":"logical-1985516"},"content":"### Delete an application: `delete_app`","lastModifiedDate":"2024-03-31"},{"lineNumber":331,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":332,"author":{"gitId":"acekhoon"},"content":"Deletes an existing application from the application list displayed in the UI.","lastModifiedDate":"2024-04-14"},{"lineNumber":333,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":334,"author":{"gitId":"acekhoon"},"content":"You can delete any applications in the displayed list at the specified **INDEX**. Here, **INDEX** refers to the index number of applications shown in the displayed application list. The application index **must be** within the range from ***1*** to ***n***, where ***n*** represents the **number of applications** in the application list displayed in the UI.","lastModifiedDate":"2024-04-14"},{"lineNumber":335,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":336,"author":{"gitId":"logical-1985516"},"content":"Format: `delete_app INDEX`","lastModifiedDate":"2024-03-31"},{"lineNumber":337,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":338,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-03-31"},{"lineNumber":339,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":340,"author":{"gitId":"logical-1985516"},"content":"* If INDEX provided is valid, a confirmation message would be displayed where the user would type **Y/N** (case-sensitive) to confirm the deletion. If **Y** is selected, it will delete the application from the list and display the deleted application. If **N** is selected, it will display that the delete operation is cancelled.","lastModifiedDate":"2024-04-15"},{"lineNumber":341,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":342,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-03-31"},{"lineNumber":343,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":344,"author":{"gitId":"logical-1985516"},"content":"Example:","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"chiralcentre"},"content":"* `delete_app 2` removes the application at second position in the application list displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"acekhoon"},"content":"Clears all entries from Hirehub\u0027s candidate list. All applications will be cleared as well.","lastModifiedDate":"2024-04-14"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"logical-1985516"},"content":"* If the candidate list is not empty, a confirmation message would be displayed where the user would type **Y/N** (case-sensitive) to confirm the deletion. If **Y** is selected, it will clear the candidate list and display a success message. If **N** is selected, it will display that the clear operation is cancelled.","lastModifiedDate":"2024-04-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"logical-1985516"},"content":"### Search for matching candidates : `search`","lastModifiedDate":"2024-02-28"},{"lineNumber":356,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":357,"author":{"gitId":"logical-1985516"},"content":"Searches candidates whose attributes match the specified attributes in the search criteria.","lastModifiedDate":"2024-02-28"},{"lineNumber":358,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":359,"author":{"gitId":"logical-1985516"},"content":"Format: `search [n/NAME] [e/EMAIL] [c/COUNTRY] [m/COMMENT] [p/PHONE] [t/TAG]`","lastModifiedDate":"2024-03-31"},{"lineNumber":360,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":361,"author":{"gitId":"logical-1985516"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-02-28"},{"lineNumber":362,"author":{"gitId":"logical-1985516"},"content":"* The search is case-sensitive, e.g. `hans` will not match `Hans`.","lastModifiedDate":"2024-02-28"},{"lineNumber":363,"author":{"gitId":"chiralcentre"},"content":"* For email, country and phone, only full matches will be returned.","lastModifiedDate":"2024-04-15"},{"lineNumber":364,"author":{"gitId":"chiralcentre"},"content":"* For name, comment and tag, partial matches will be returned, e.g. `Han` will match `Hans`.","lastModifiedDate":"2024-04-15"},{"lineNumber":365,"author":{"gitId":"logical-1985516"},"content":"* The search will fail if any of the specified fields is in an invalid format.","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"logical-1985516"},"content":"* If multiple fields are specified, only candidates that match **all** the specified attributes will be returned.","lastModifiedDate":"2024-02-29"},{"lineNumber":367,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":368,"author":{"gitId":"logical-1985516"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":369,"author":{"gitId":"logical-1985516"},"content":"* `search n/John c/SG` returns candidates whose names contain `John` and whose country is from `Singapore`.","lastModifiedDate":"2024-03-31"},{"lineNumber":370,"author":{"gitId":"logical-1985516"},"content":"* `search t/Internal` returns candidates whose tags contain `Internal`.","lastModifiedDate":"2024-02-29"},{"lineNumber":371,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":372,"author":{"gitId":"logical-1985516"},"content":"### Search for matching jobs : `search_job`","lastModifiedDate":"2024-03-31"},{"lineNumber":373,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":374,"author":{"gitId":"logical-1985516"},"content":"Searches jobs whose attributes match the specified attributes in the search criteria.","lastModifiedDate":"2024-03-31"},{"lineNumber":375,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":376,"author":{"gitId":"logical-1985516"},"content":"Format: `search_job [ti/TITLE] [d/DESCRIPTION] [v/VACANCY]`","lastModifiedDate":"2024-03-31"},{"lineNumber":377,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":378,"author":{"gitId":"logical-1985516"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-03-31"},{"lineNumber":379,"author":{"gitId":"logical-1985516"},"content":"* The search is case-sensitive, e.g. `engineer` will not match `Engineer`.","lastModifiedDate":"2024-03-31"},{"lineNumber":380,"author":{"gitId":"chiralcentre"},"content":"* For title and description, partial matches will be returned.","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"logical-1985516"},"content":"* For vacancy, only jobs with the same number of vacancies will be matched.","lastModifiedDate":"2024-03-31"},{"lineNumber":382,"author":{"gitId":"logical-1985516"},"content":"* The search will fail if any of the specified fields is in an invalid format.","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"logical-1985516"},"content":"* If multiple fields are specified, only jobs that match **all** the specified attributes will be returned.","lastModifiedDate":"2024-03-31"},{"lineNumber":384,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":385,"author":{"gitId":"logical-1985516"},"content":"Examples:","lastModifiedDate":"2024-03-31"},{"lineNumber":386,"author":{"gitId":"logical-1985516"},"content":"* `search_job ti/Engineer d/C++` returns jobs whose titles contain `Engineer` and whose description contain `C++`.","lastModifiedDate":"2024-03-31"},{"lineNumber":387,"author":{"gitId":"logical-1985516"},"content":"* `search_job v/10` returns jobs whose number of vacancies is 10.","lastModifiedDate":"2024-03-31"},{"lineNumber":388,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":389,"author":{"gitId":"logical-1985516"},"content":"### Search for matching applications : `search_app`","lastModifiedDate":"2024-03-31"},{"lineNumber":390,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":391,"author":{"gitId":"logical-1985516"},"content":"Searches applications whose attributes match the specified attributes in the search criteria.","lastModifiedDate":"2024-03-31"},{"lineNumber":392,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":393,"author":{"gitId":"logical-1985516"},"content":"Format: `search_app [e/EMAIL] [ti/TITLE] [s/STATUS]`","lastModifiedDate":"2024-03-31"},{"lineNumber":394,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":395,"author":{"gitId":"logical-1985516"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-03-31"},{"lineNumber":396,"author":{"gitId":"chiralcentre"},"content":"* For title, partial matches will be returned.","lastModifiedDate":"2024-04-15"},{"lineNumber":397,"author":{"gitId":"chiralcentre"},"content":"* For email and status, only full matches will be returned.","lastModifiedDate":"2024-04-15"},{"lineNumber":398,"author":{"gitId":"logical-1985516"},"content":"* For email and title, the search is case-sensitive.","lastModifiedDate":"2024-04-04"},{"lineNumber":399,"author":{"gitId":"logical-1985516"},"content":"* For status, the search is case-insensitive.","lastModifiedDate":"2024-04-04"},{"lineNumber":400,"author":{"gitId":"logical-1985516"},"content":"* The search will fail if either email or status is in an invalid format.","lastModifiedDate":"2024-03-31"},{"lineNumber":401,"author":{"gitId":"logical-1985516"},"content":"* If multiple fields are specified, only applications that match **all** the specified attributes will be returned.","lastModifiedDate":"2024-03-31"},{"lineNumber":402,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":403,"author":{"gitId":"logical-1985516"},"content":"Examples:","lastModifiedDate":"2024-03-31"},{"lineNumber":404,"author":{"gitId":"logical-1985516"},"content":"* `search_app e/alexyeoh@example.com s/PRESCREEN` returns applications from the candidate with email `alexyeoh@example.com` and with status `PRESCREEN`.","lastModifiedDate":"2024-03-31"},{"lineNumber":405,"author":{"gitId":"logical-1985516"},"content":"* `search_app e/alexyeoh@example.com ti/Engineer` returns the application from candidate with email `alexyeoh@example.com` to the job with title containing `Engineer`.","lastModifiedDate":"2024-04-02"},{"lineNumber":406,"author":{"gitId":"logical-1985516"},"content":"* `search_app ti/Software Engineer` returns applications to the job with title containing `Software Engineer`.","lastModifiedDate":"2024-04-02"},{"lineNumber":407,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":408,"author":{"gitId":"logical-1985516"},"content":"### Accessing by index: `get`","lastModifiedDate":"2024-03-31"},{"lineNumber":409,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":410,"author":{"gitId":"acekhoon"},"content":"Accesses candidates by **INDEX**. Here, **INDEX** refers to the index number of candidates shown in the candidate list. The candidate index **must be** within the range from 1 to n, where n represents the **number of candidates** in the candidate list displayed.","lastModifiedDate":"2024-04-14"},{"lineNumber":411,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":412,"author":{"gitId":"logical-1985516"},"content":"Format: `get INDEX`","lastModifiedDate":"2024-03-31"},{"lineNumber":413,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":414,"author":{"gitId":"acekhoon"},"content":"* `INDEX` must be within the range `1` to `n`, where `n` is the number of candidates currently displayed in the `\"Candidates\"` column of the app.","lastModifiedDate":"2024-04-07"},{"lineNumber":415,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":416,"author":{"gitId":"logical-1985516"},"content":"Example:","lastModifiedDate":"2024-03-31"},{"lineNumber":417,"author":{"gitId":"chiralcentre"},"content":"* `get 4` returns the candidate with index 4.","lastModifiedDate":"2024-04-15"},{"lineNumber":418,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":419,"author":{"gitId":"logical-1985516"},"content":"### Finding remaining vacancies: `slots_left`","lastModifiedDate":"2024-04-04"},{"lineNumber":420,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":421,"author":{"gitId":"acekhoon"},"content":"Finds the remaining vacancies of a job at the specified **INDEX** from the list of jobs displayed in the Hirehub app. The remaining vacancies is the number of vacancies of the job, subtracted by the number of applications to the job with `OFFERED` status.","lastModifiedDate":"2024-04-12"},{"lineNumber":422,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":423,"author":{"gitId":"logical-1985516"},"content":"The remaining vacancies of the job will be displayed in the message box.","lastModifiedDate":"2024-04-02"},{"lineNumber":424,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":425,"author":{"gitId":"logical-1985516"},"content":"Format: `slots_left INDEX`","lastModifiedDate":"2024-04-02"},{"lineNumber":426,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":427,"author":{"gitId":"logical-1985516"},"content":"Example:","lastModifiedDate":"2024-04-02"},{"lineNumber":428,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":429,"author":{"gitId":"acekhoon"},"content":"Candidate named \"Alex Yeoh\" has applied for a job titled \"Senior Software Engineer (Singapore)\" with initial vacancy 1. Currently, Alex Yeoh\u0027s application status is `PRESCREEN`.","lastModifiedDate":"2024-04-14"},{"lineNumber":430,"author":{"gitId":"chiralcentre"},"content":"If the user types in `slots_left 1`, the remaining vacancy displayed for the job is 1 as shown below:","lastModifiedDate":"2024-04-15"},{"lineNumber":431,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":432,"author":{"gitId":"acekhoon"},"content":"![InitialJobScreenshot](images/slots-left/InitialJobScreenshot.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":433,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":434,"author":{"gitId":"acekhoon"},"content":"Now, the status of application for candidate \"Alex Yeoh\" is updated to `OFFERED`. If the user types in `slots_left 1` to find out the remaining vacancy, the output is 0 since Alex Yeoh got an offer for this position:","lastModifiedDate":"2024-04-14"},{"lineNumber":435,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":436,"author":{"gitId":"acekhoon"},"content":"![VacancyLeftScreenshot](images/slots-left/VacancyLeftScreenshot.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":437,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":438,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":439,"author":{"gitId":"logical-1985516"},"content":"### Listing all persons : `list`","lastModifiedDate":"2024-04-02"},{"lineNumber":440,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":441,"author":{"gitId":"logical-1985516"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":442,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":443,"author":{"gitId":"logical-1985516"},"content":"Format: `list`","lastModifiedDate":"2024-04-02"},{"lineNumber":444,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":445,"author":{"gitId":"logical-1985516"},"content":"### Listing all jobs : `list_job`","lastModifiedDate":"2024-04-02"},{"lineNumber":446,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":447,"author":{"gitId":"logical-1985516"},"content":"Shows a list of all jobs in the job list.","lastModifiedDate":"2024-04-02"},{"lineNumber":448,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":449,"author":{"gitId":"logical-1985516"},"content":"Format: `list_job`","lastModifiedDate":"2024-04-02"},{"lineNumber":450,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":451,"author":{"gitId":"logical-1985516"},"content":"### Listing all applications : `list_app`","lastModifiedDate":"2024-04-02"},{"lineNumber":452,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":453,"author":{"gitId":"logical-1985516"},"content":"Shows a list of all applications in the application list.","lastModifiedDate":"2024-04-02"},{"lineNumber":454,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":455,"author":{"gitId":"logical-1985516"},"content":"Format: `list_app`","lastModifiedDate":"2024-04-02"},{"lineNumber":456,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"logical-1985516"},"content":"HireHub data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-29"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"logical-1985516"},"content":"### Editing the data files","lastModifiedDate":"2024-04-02"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":469,"author":{"gitId":"acekhoon"},"content":"HireHub data are saved automatically as JSON files `[JAR file location]/data/addressbook.json`, `[JAR file location]/data/jobs.json` and `[JAR file location]/data/applications.json`. Advanced users are welcome to update data directly by editing those data files.","lastModifiedDate":"2024-04-14"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":471,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":472,"author":{"gitId":"logical-1985516"},"content":"If your changes to the data files makes their format invalid, HireHub will discard all data and start with empty data files at the next run. Hence, it is recommended to take a backup of the files before editing them.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":473,"author":{"gitId":"chiralcentre"},"content":"Furthermore, certain edits can cause HireHub to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data files only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-04"},{"lineNumber":474,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":476,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"logical-1985516"},"content":"**A**: Install the app in the other computer and overwrite the empty data files it creates with the files that contain the data of your previous HireHub home folder.","lastModifiedDate":"2024-04-02"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"logical-1985516"},"content":"**Q**: What is the difference between `edit` and `tag`?\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":484,"author":{"gitId":"logical-1985516"},"content":"**A**: `edit` will overwrite any current tags with new tags, while `tag` will append the new tags to the current ones. For example, suppose that John is candidate 1 with tags `Internal` and `Waitlist`. `edit 1 t/QuantResearcher` will change John\u0027s tags to just `QuantResearcher`, while `tag t/QuantResearcher` will change John\u0027s tags to `Internal`, `Waitlist` and `QuantResearcher`.","lastModifiedDate":"2024-02-28"},{"lineNumber":485,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":486,"author":{"gitId":"logical-1985516"},"content":"**Q**: Why can\u0027t I add/edit a candidate/job respectively?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":487,"author":{"gitId":"logical-1985516"},"content":"**A**: Check the email/title of the candidate/job again. After add/edit operation, no 2 candidates can have the same email (not name), and no 2 jobs can have the same title.","lastModifiedDate":"2024-04-12"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":489,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":493,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":495,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":497,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"logical-1985516"},"content":"| Action                  | Format, Examples                                                                                                                                    |","lastModifiedDate":"2024-03-31"},{"lineNumber":500,"author":{"gitId":"logical-1985516"},"content":"|-------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-02"},{"lineNumber":501,"author":{"gitId":"acekhoon"},"content":"| **Add**                 | `add n/NAME e/EMAIL c/COUNTRY p/PHONE [t/TAG]…​` \u003cbr\u003e e.g., `add n/John Doe e/asdf@gmail.com c/SG p/61234567 t/Internal`                            |","lastModifiedDate":"2024-04-04"},{"lineNumber":502,"author":{"gitId":"logical-1985516"},"content":"| **Add job**             | `add_job ti/TITLE [d/DESCRIPTION] v/VACANCY` \u003cbr\u003e e.g., `add_job ti/Software Engineer d/Must be proficient in C++ v/10`                             |","lastModifiedDate":"2024-03-31"},{"lineNumber":503,"author":{"gitId":"logical-1985516"},"content":"| **Add application**     | `add_app e/EMAIL ti/TITLE [s/STATUS]` \u003cbr\u003e e.g., `add_app e/john@example.com ti/Software Engineer s/OFFERED`                                        |","lastModifiedDate":"2024-04-02"},{"lineNumber":504,"author":{"gitId":"logical-1985516"},"content":"| **Clear**               | `clear`                                                                                                                                             |","lastModifiedDate":"2024-03-31"},{"lineNumber":505,"author":{"gitId":"logical-1985516"},"content":"| **Comment**             | `comment INDEX COMMENT` \u003cbr\u003e e.g., `comment 3 Managed to solve every round 3 interview questions.`                                                  |","lastModifiedDate":"2024-04-02"},{"lineNumber":506,"author":{"gitId":"logical-1985516"},"content":"| **Delete**              | `delete INDEX` \u003cbr\u003e e.g., `delete 3`                                                                                                                |","lastModifiedDate":"2024-03-31"},{"lineNumber":507,"author":{"gitId":"logical-1985516"},"content":"| **Delete job**          | `delete_job INDEX` \u003cbr\u003e e.g., `delete_job 3`                                                                                                        |","lastModifiedDate":"2024-04-02"},{"lineNumber":508,"author":{"gitId":"logical-1985516"},"content":"| **Delete application**  | `delete_app INDEX` \u003cbr\u003e e.g., `delete_app 3`                                                                                                        |","lastModifiedDate":"2024-04-02"},{"lineNumber":509,"author":{"gitId":"leeweiming3"},"content":"| **Delete tag**          | `delete_tag INDEX t/TAG [t/TAG]…​` \u003cbr\u003e e.g. `delete_tag 1 t/ExceptionalWork t/IMOGold`                                                             |","lastModifiedDate":"2024-04-12"},{"lineNumber":510,"author":{"gitId":"chiralcentre"},"content":"| **Edit**                | `edit INDEX [n/NAME] [e/EMAIL] [c/COUNTRY] [p/PHONE] [t/TAG]…​` \u003cbr\u003e e.g.,`edit 2 n/Johnny Doe e/johnnydoe@gmail.com c/SG`                         |","lastModifiedDate":"2024-04-15"},{"lineNumber":511,"author":{"gitId":"logical-1985516"},"content":"| **Edit job**            | `edit_job INDEX [ti/TITLE] [d/DESCRIPTION] [v/VACANCY]` \u003cbr\u003e e.g., `edit_job 1 ti/Quantitative Trader d/Must have strong statistics background v/3` |","lastModifiedDate":"2024-04-02"},{"lineNumber":512,"author":{"gitId":"chiralcentre"},"content":"| **Get**                 | `get INDEX` \u003cbr\u003e e.g., `get 4`                                                                                                                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":513,"author":{"gitId":"logical-1985516"},"content":"| **Help**                | `help`                                                                                                                                              |","lastModifiedDate":"2024-04-04"},{"lineNumber":514,"author":{"gitId":"logical-1985516"},"content":"| **List**                | `list`                                                                                                                                              |","lastModifiedDate":"2024-04-04"},{"lineNumber":515,"author":{"gitId":"logical-1985516"},"content":"| **List jobs**           | `list_job`                                                                                                                                          |","lastModifiedDate":"2024-04-04"},{"lineNumber":516,"author":{"gitId":"chiralcentre"},"content":"| **List applications**   | `list_app`                                                                                                                                 |","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"logical-1985516"},"content":"| **Search**              | `search [n/NAME] [e/EMAIL] [c/COUNTRY] [m/COMMENT] [p/PHONE] [t/TAG]` \u003cbr\u003e e.g., `search n/John c/SG`                                               |","lastModifiedDate":"2024-04-02"},{"lineNumber":518,"author":{"gitId":"logical-1985516"},"content":"| **Search jobs**         | `search_job [ti/TITLE] [d/DESCRIPTION] [v/VACANCY]` \u003cbr\u003e e.g., `search_job ti/Engineer d/C++`                                                       |","lastModifiedDate":"2024-04-02"},{"lineNumber":519,"author":{"gitId":"logical-1985516"},"content":"| **Search applications** | `search_app [e/EMAIL] [ti/TITLE] [s/STATUS]` \u003cbr\u003e e.g., `search_app e/alexyeoh@example.com s/PRESCREEN`                                             |","lastModifiedDate":"2024-04-02"},{"lineNumber":520,"author":{"gitId":"logical-1985516"},"content":"| **Slots left**          | `slots_left INDEX` \u003cbr\u003e e.g., `slots_left 3`                                                                                                        |","lastModifiedDate":"2024-04-04"},{"lineNumber":521,"author":{"gitId":"chiralcentre"},"content":"| **Status**              | `status INDEX INTERVIEW_STATUS` \u003cbr\u003e e.g., `status 1 IN_PROGRESS`                                                                                  |","lastModifiedDate":"2024-04-15"},{"lineNumber":522,"author":{"gitId":"chiralcentre"},"content":"| **Tag**                 | `tag INDEX t/TAG [t/TAG]…` \u003cbr\u003e e.g., `tag 5 t/ExceptionalWork t/IMOGold t/PhD`                                                                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":523,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":524,"author":{"gitId":"leeweiming3"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-13"},{"lineNumber":525,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":526,"author":{"gitId":"leeweiming3"},"content":"## Appendix: Country codes","lastModifiedDate":"2024-04-13"},{"lineNumber":527,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":528,"author":{"gitId":"logical-1985516"},"content":"This is the list of ISO-3166-1 alpha-2 codes:","lastModifiedDate":"2024-04-13"},{"lineNumber":529,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":530,"author":{"gitId":"leeweiming3"},"content":"| Code | Country Name                           |","lastModifiedDate":"2024-04-13"},{"lineNumber":531,"author":{"gitId":"leeweiming3"},"content":"|------|----------------------------------------|","lastModifiedDate":"2024-04-13"},{"lineNumber":532,"author":{"gitId":"leeweiming3"},"content":"| AD   | Andorra                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":533,"author":{"gitId":"leeweiming3"},"content":"| AE   | United Arab Emirates                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":534,"author":{"gitId":"leeweiming3"},"content":"| AF   | Afghanistan                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":535,"author":{"gitId":"leeweiming3"},"content":"| AG   | Antigua \u0026 Barbuda                      |","lastModifiedDate":"2024-04-13"},{"lineNumber":536,"author":{"gitId":"leeweiming3"},"content":"| AI   | Anguilla                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":537,"author":{"gitId":"leeweiming3"},"content":"| AL   | Albania                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":538,"author":{"gitId":"leeweiming3"},"content":"| AM   | Armenia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":539,"author":{"gitId":"leeweiming3"},"content":"| AO   | Angola                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":540,"author":{"gitId":"leeweiming3"},"content":"| AQ   | Antarctica                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":541,"author":{"gitId":"leeweiming3"},"content":"| AR   | Argentina                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":542,"author":{"gitId":"leeweiming3"},"content":"| AS   | American Samoa                         |","lastModifiedDate":"2024-04-13"},{"lineNumber":543,"author":{"gitId":"leeweiming3"},"content":"| AT   | Austria                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":544,"author":{"gitId":"leeweiming3"},"content":"| AU   | Australia                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":545,"author":{"gitId":"leeweiming3"},"content":"| AW   | Aruba                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":546,"author":{"gitId":"leeweiming3"},"content":"| AX   | Åland Islands                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":547,"author":{"gitId":"leeweiming3"},"content":"| AZ   | Azerbaijan                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":548,"author":{"gitId":"leeweiming3"},"content":"| BA   | Bosnia \u0026 Herzegovina                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":549,"author":{"gitId":"leeweiming3"},"content":"| BB   | Barbados                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":550,"author":{"gitId":"leeweiming3"},"content":"| BD   | Bangladesh                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":551,"author":{"gitId":"leeweiming3"},"content":"| BE   | Belgium                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":552,"author":{"gitId":"leeweiming3"},"content":"| BF   | Burkina Faso                           |","lastModifiedDate":"2024-04-13"},{"lineNumber":553,"author":{"gitId":"leeweiming3"},"content":"| BG   | Bulgaria                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":554,"author":{"gitId":"leeweiming3"},"content":"| BH   | Bahrain                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":555,"author":{"gitId":"leeweiming3"},"content":"| BI   | Burundi                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":556,"author":{"gitId":"leeweiming3"},"content":"| BJ   | Benin                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":557,"author":{"gitId":"leeweiming3"},"content":"| BL   | St. Barthélemy                         |","lastModifiedDate":"2024-04-13"},{"lineNumber":558,"author":{"gitId":"leeweiming3"},"content":"| BM   | Bermuda                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":559,"author":{"gitId":"leeweiming3"},"content":"| BN   | Brunei                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":560,"author":{"gitId":"leeweiming3"},"content":"| BO   | Bolivia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":561,"author":{"gitId":"leeweiming3"},"content":"| BQ   | Caribbean Netherlands                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":562,"author":{"gitId":"leeweiming3"},"content":"| BR   | Brazil                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":563,"author":{"gitId":"leeweiming3"},"content":"| BS   | Bahamas                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":564,"author":{"gitId":"leeweiming3"},"content":"| BT   | Bhutan                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":565,"author":{"gitId":"leeweiming3"},"content":"| BV   | Bouvet Island                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":566,"author":{"gitId":"leeweiming3"},"content":"| BW   | Botswana                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":567,"author":{"gitId":"leeweiming3"},"content":"| BY   | Belarus                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":568,"author":{"gitId":"leeweiming3"},"content":"| BZ   | Belize                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":569,"author":{"gitId":"leeweiming3"},"content":"| CA   | Canada                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":570,"author":{"gitId":"leeweiming3"},"content":"| CC   | Cocos (Keeling) Islands                |","lastModifiedDate":"2024-04-13"},{"lineNumber":571,"author":{"gitId":"leeweiming3"},"content":"| CD   | Congo - Kinshasa                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":572,"author":{"gitId":"leeweiming3"},"content":"| CF   | Central African Republic               |","lastModifiedDate":"2024-04-13"},{"lineNumber":573,"author":{"gitId":"leeweiming3"},"content":"| CG   | Congo - Brazzaville                    |","lastModifiedDate":"2024-04-13"},{"lineNumber":574,"author":{"gitId":"leeweiming3"},"content":"| CH   | Switzerland                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":575,"author":{"gitId":"leeweiming3"},"content":"| CI   | Côte d’Ivoire                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":576,"author":{"gitId":"leeweiming3"},"content":"| CK   | Cook Islands                           |","lastModifiedDate":"2024-04-13"},{"lineNumber":577,"author":{"gitId":"leeweiming3"},"content":"| CL   | Chile                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":578,"author":{"gitId":"leeweiming3"},"content":"| CM   | Cameroon                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":579,"author":{"gitId":"leeweiming3"},"content":"| CN   | China                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":580,"author":{"gitId":"leeweiming3"},"content":"| CO   | Colombia                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":581,"author":{"gitId":"leeweiming3"},"content":"| CR   | Costa Rica                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":582,"author":{"gitId":"leeweiming3"},"content":"| CU   | Cuba                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":583,"author":{"gitId":"leeweiming3"},"content":"| CV   | Cape Verde                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":584,"author":{"gitId":"leeweiming3"},"content":"| CW   | Curaçao                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":585,"author":{"gitId":"leeweiming3"},"content":"| CX   | Christmas Island                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":586,"author":{"gitId":"leeweiming3"},"content":"| CY   | Cyprus                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":587,"author":{"gitId":"leeweiming3"},"content":"| CZ   | Czechia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":588,"author":{"gitId":"leeweiming3"},"content":"| DE   | Germany                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":589,"author":{"gitId":"leeweiming3"},"content":"| DJ   | Djibouti                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":590,"author":{"gitId":"leeweiming3"},"content":"| DK   | Denmark                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":591,"author":{"gitId":"leeweiming3"},"content":"| DM   | Dominica                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":592,"author":{"gitId":"leeweiming3"},"content":"| DO   | Dominican Republic                     |","lastModifiedDate":"2024-04-13"},{"lineNumber":593,"author":{"gitId":"leeweiming3"},"content":"| DZ   | Algeria                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":594,"author":{"gitId":"leeweiming3"},"content":"| EC   | Ecuador                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":595,"author":{"gitId":"leeweiming3"},"content":"| EE   | Estonia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":596,"author":{"gitId":"leeweiming3"},"content":"| EG   | Egypt                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":597,"author":{"gitId":"leeweiming3"},"content":"| EH   | Western Sahara                         |","lastModifiedDate":"2024-04-13"},{"lineNumber":598,"author":{"gitId":"leeweiming3"},"content":"| ER   | Eritrea                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":599,"author":{"gitId":"leeweiming3"},"content":"| ES   | Spain                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":600,"author":{"gitId":"leeweiming3"},"content":"| ET   | Ethiopia                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":601,"author":{"gitId":"leeweiming3"},"content":"| FI   | Finland                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":602,"author":{"gitId":"leeweiming3"},"content":"| FJ   | Fiji                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":603,"author":{"gitId":"leeweiming3"},"content":"| FK   | Falkland Islands                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":604,"author":{"gitId":"leeweiming3"},"content":"| FM   | Micronesia                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":605,"author":{"gitId":"leeweiming3"},"content":"| FO   | Faroe Islands                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":606,"author":{"gitId":"leeweiming3"},"content":"| FR   | France                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":607,"author":{"gitId":"leeweiming3"},"content":"| GA   | Gabon                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":608,"author":{"gitId":"leeweiming3"},"content":"| GB   | United Kingdom                         |","lastModifiedDate":"2024-04-13"},{"lineNumber":609,"author":{"gitId":"leeweiming3"},"content":"| GD   | Grenada                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":610,"author":{"gitId":"leeweiming3"},"content":"| GE   | Georgia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":611,"author":{"gitId":"leeweiming3"},"content":"| GF   | French Guiana                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":612,"author":{"gitId":"leeweiming3"},"content":"| GG   | Guernsey                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":613,"author":{"gitId":"leeweiming3"},"content":"| GH   | Ghana                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":614,"author":{"gitId":"leeweiming3"},"content":"| GI   | Gibraltar                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":615,"author":{"gitId":"leeweiming3"},"content":"| GL   | Greenland                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":616,"author":{"gitId":"leeweiming3"},"content":"| GM   | Gambia                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":617,"author":{"gitId":"leeweiming3"},"content":"| GN   | Guinea                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":618,"author":{"gitId":"leeweiming3"},"content":"| GP   | Guadeloupe                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":619,"author":{"gitId":"leeweiming3"},"content":"| GQ   | Equatorial Guinea                      |","lastModifiedDate":"2024-04-13"},{"lineNumber":620,"author":{"gitId":"leeweiming3"},"content":"| GR   | Greece                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":621,"author":{"gitId":"leeweiming3"},"content":"| GS   | South Georgia \u0026 South Sandwich Islands |","lastModifiedDate":"2024-04-13"},{"lineNumber":622,"author":{"gitId":"leeweiming3"},"content":"| GT   | Guatemala                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":623,"author":{"gitId":"leeweiming3"},"content":"| GU   | Guam                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":624,"author":{"gitId":"leeweiming3"},"content":"| GW   | Guinea-Bissau                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":625,"author":{"gitId":"leeweiming3"},"content":"| GY   | Guyana                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":626,"author":{"gitId":"leeweiming3"},"content":"| HK   | Hong Kong SAR China                    |","lastModifiedDate":"2024-04-13"},{"lineNumber":627,"author":{"gitId":"leeweiming3"},"content":"| HM   | Heard \u0026 McDonald Islands               |","lastModifiedDate":"2024-04-13"},{"lineNumber":628,"author":{"gitId":"leeweiming3"},"content":"| HN   | Honduras                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":629,"author":{"gitId":"leeweiming3"},"content":"| HR   | Croatia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":630,"author":{"gitId":"leeweiming3"},"content":"| HT   | Haiti                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":631,"author":{"gitId":"leeweiming3"},"content":"| HU   | Hungary                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":632,"author":{"gitId":"leeweiming3"},"content":"| ID   | Indonesia                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":633,"author":{"gitId":"leeweiming3"},"content":"| IE   | Ireland                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":634,"author":{"gitId":"leeweiming3"},"content":"| IL   | Israel                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":635,"author":{"gitId":"leeweiming3"},"content":"| IM   | Isle of Man                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":636,"author":{"gitId":"leeweiming3"},"content":"| IN   | India                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":637,"author":{"gitId":"leeweiming3"},"content":"| IO   | British Indian Ocean Territory         |","lastModifiedDate":"2024-04-13"},{"lineNumber":638,"author":{"gitId":"leeweiming3"},"content":"| IQ   | Iraq                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":639,"author":{"gitId":"leeweiming3"},"content":"| IR   | Iran                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":640,"author":{"gitId":"leeweiming3"},"content":"| IS   | Iceland                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":641,"author":{"gitId":"leeweiming3"},"content":"| IT   | Italy                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":642,"author":{"gitId":"leeweiming3"},"content":"| JE   | Jersey                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":643,"author":{"gitId":"leeweiming3"},"content":"| JM   | Jamaica                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":644,"author":{"gitId":"leeweiming3"},"content":"| JO   | Jordan                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":645,"author":{"gitId":"leeweiming3"},"content":"| JP   | Japan                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":646,"author":{"gitId":"leeweiming3"},"content":"| KE   | Kenya                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":647,"author":{"gitId":"leeweiming3"},"content":"| KG   | Kyrgyzstan                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":648,"author":{"gitId":"leeweiming3"},"content":"| KH   | Cambodia                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":649,"author":{"gitId":"leeweiming3"},"content":"| KI   | Kiribati                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":650,"author":{"gitId":"leeweiming3"},"content":"| KM   | Comoros                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":651,"author":{"gitId":"leeweiming3"},"content":"| KN   | St. Kitts \u0026 Nevis                      |","lastModifiedDate":"2024-04-13"},{"lineNumber":652,"author":{"gitId":"leeweiming3"},"content":"| KP   | North Korea                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":653,"author":{"gitId":"leeweiming3"},"content":"| KR   | South Korea                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":654,"author":{"gitId":"leeweiming3"},"content":"| KW   | Kuwait                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":655,"author":{"gitId":"leeweiming3"},"content":"| KY   | Cayman Islands                         |","lastModifiedDate":"2024-04-13"},{"lineNumber":656,"author":{"gitId":"leeweiming3"},"content":"| KZ   | Kazakhstan                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":657,"author":{"gitId":"leeweiming3"},"content":"| LA   | Laos                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":658,"author":{"gitId":"leeweiming3"},"content":"| LB   | Lebanon                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":659,"author":{"gitId":"leeweiming3"},"content":"| LC   | St. Lucia                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":660,"author":{"gitId":"leeweiming3"},"content":"| LI   | Liechtenstein                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":661,"author":{"gitId":"leeweiming3"},"content":"| LK   | Sri Lanka                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":662,"author":{"gitId":"leeweiming3"},"content":"| LR   | Liberia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":663,"author":{"gitId":"leeweiming3"},"content":"| LS   | Lesotho                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":664,"author":{"gitId":"leeweiming3"},"content":"| LT   | Lithuania                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":665,"author":{"gitId":"leeweiming3"},"content":"| LU   | Luxembourg                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":666,"author":{"gitId":"leeweiming3"},"content":"| LV   | Latvia                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":667,"author":{"gitId":"leeweiming3"},"content":"| LY   | Libya                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":668,"author":{"gitId":"leeweiming3"},"content":"| MA   | Morocco                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":669,"author":{"gitId":"leeweiming3"},"content":"| MC   | Monaco                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":670,"author":{"gitId":"leeweiming3"},"content":"| MD   | Moldova                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":671,"author":{"gitId":"leeweiming3"},"content":"| ME   | Montenegro                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":672,"author":{"gitId":"leeweiming3"},"content":"| MF   | St. Martin                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":673,"author":{"gitId":"leeweiming3"},"content":"| MG   | Madagascar                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":674,"author":{"gitId":"leeweiming3"},"content":"| MH   | Marshall Islands                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":675,"author":{"gitId":"leeweiming3"},"content":"| MK   | Macedonia                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":676,"author":{"gitId":"leeweiming3"},"content":"| ML   | Mali                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":677,"author":{"gitId":"leeweiming3"},"content":"| MM   | Myanmar (Burma)                        |","lastModifiedDate":"2024-04-13"},{"lineNumber":678,"author":{"gitId":"leeweiming3"},"content":"| MN   | Mongolia                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":679,"author":{"gitId":"leeweiming3"},"content":"| MO   | Macau SAR China                        |","lastModifiedDate":"2024-04-13"},{"lineNumber":680,"author":{"gitId":"leeweiming3"},"content":"| MP   | Northern Mariana Islands               |","lastModifiedDate":"2024-04-13"},{"lineNumber":681,"author":{"gitId":"leeweiming3"},"content":"| MQ   | Martinique                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":682,"author":{"gitId":"leeweiming3"},"content":"| MR   | Mauritania                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":683,"author":{"gitId":"leeweiming3"},"content":"| MS   | Montserrat                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":684,"author":{"gitId":"leeweiming3"},"content":"| MT   | Malta                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":685,"author":{"gitId":"leeweiming3"},"content":"| MU   | Mauritius                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":686,"author":{"gitId":"leeweiming3"},"content":"| MV   | Maldives                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":687,"author":{"gitId":"leeweiming3"},"content":"| MW   | Malawi                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":688,"author":{"gitId":"leeweiming3"},"content":"| MX   | Mexico                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":689,"author":{"gitId":"leeweiming3"},"content":"| MY   | Malaysia                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":690,"author":{"gitId":"leeweiming3"},"content":"| MZ   | Mozambique                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":691,"author":{"gitId":"leeweiming3"},"content":"| NA   | Namibia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":692,"author":{"gitId":"leeweiming3"},"content":"| NC   | New Caledonia                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":693,"author":{"gitId":"leeweiming3"},"content":"| NE   | Niger                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":694,"author":{"gitId":"leeweiming3"},"content":"| NF   | Norfolk Island                         |","lastModifiedDate":"2024-04-13"},{"lineNumber":695,"author":{"gitId":"leeweiming3"},"content":"| NG   | Nigeria                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":696,"author":{"gitId":"leeweiming3"},"content":"| NI   | Nicaragua                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":697,"author":{"gitId":"leeweiming3"},"content":"| NL   | Netherlands                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":698,"author":{"gitId":"leeweiming3"},"content":"| NO   | Norway                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":699,"author":{"gitId":"leeweiming3"},"content":"| NP   | Nepal                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":700,"author":{"gitId":"leeweiming3"},"content":"| NR   | Nauru                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":701,"author":{"gitId":"leeweiming3"},"content":"| NU   | Niue                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":702,"author":{"gitId":"leeweiming3"},"content":"| NZ   | New Zealand                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":703,"author":{"gitId":"leeweiming3"},"content":"| OM   | Oman                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":704,"author":{"gitId":"leeweiming3"},"content":"| PA   | Panama                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":705,"author":{"gitId":"leeweiming3"},"content":"| PE   | Peru                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":706,"author":{"gitId":"leeweiming3"},"content":"| PF   | French Polynesia                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":707,"author":{"gitId":"leeweiming3"},"content":"| PG   | Papua New Guinea                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":708,"author":{"gitId":"leeweiming3"},"content":"| PH   | Philippines                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":709,"author":{"gitId":"leeweiming3"},"content":"| PK   | Pakistan                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":710,"author":{"gitId":"leeweiming3"},"content":"| PL   | Poland                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":711,"author":{"gitId":"leeweiming3"},"content":"| PM   | St. Pierre \u0026 Miquelon                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":712,"author":{"gitId":"leeweiming3"},"content":"| PN   | Pitcairn Islands                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":713,"author":{"gitId":"leeweiming3"},"content":"| PR   | Puerto Rico                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":714,"author":{"gitId":"leeweiming3"},"content":"| PS   | Palestinian Territories                |","lastModifiedDate":"2024-04-13"},{"lineNumber":715,"author":{"gitId":"leeweiming3"},"content":"| PT   | Portugal                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":716,"author":{"gitId":"leeweiming3"},"content":"| PW   | Palau                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":717,"author":{"gitId":"leeweiming3"},"content":"| PY   | Paraguay                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":718,"author":{"gitId":"leeweiming3"},"content":"| QA   | Qatar                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":719,"author":{"gitId":"leeweiming3"},"content":"| RE   | Réunion                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":720,"author":{"gitId":"leeweiming3"},"content":"| RO   | Romania                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":721,"author":{"gitId":"leeweiming3"},"content":"| RS   | Serbia                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":722,"author":{"gitId":"leeweiming3"},"content":"| RU   | Russia                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":723,"author":{"gitId":"leeweiming3"},"content":"| RW   | Rwanda                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":724,"author":{"gitId":"leeweiming3"},"content":"| SA   | Saudi Arabia                           |","lastModifiedDate":"2024-04-13"},{"lineNumber":725,"author":{"gitId":"leeweiming3"},"content":"| SB   | Solomon Islands                        |","lastModifiedDate":"2024-04-13"},{"lineNumber":726,"author":{"gitId":"leeweiming3"},"content":"| SC   | Seychelles                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":727,"author":{"gitId":"leeweiming3"},"content":"| SD   | Sudan                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":728,"author":{"gitId":"leeweiming3"},"content":"| SE   | Sweden                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":729,"author":{"gitId":"leeweiming3"},"content":"| SG   | Singapore                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":730,"author":{"gitId":"leeweiming3"},"content":"| SH   | St. Helena                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":731,"author":{"gitId":"leeweiming3"},"content":"| SI   | Slovenia                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":732,"author":{"gitId":"leeweiming3"},"content":"| SJ   | Svalbard \u0026 Jan Mayen                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":733,"author":{"gitId":"leeweiming3"},"content":"| SK   | Slovakia                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":734,"author":{"gitId":"leeweiming3"},"content":"| SL   | Sierra Leone                           |","lastModifiedDate":"2024-04-13"},{"lineNumber":735,"author":{"gitId":"leeweiming3"},"content":"| SM   | San Marino                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":736,"author":{"gitId":"leeweiming3"},"content":"| SN   | Senegal                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":737,"author":{"gitId":"leeweiming3"},"content":"| SO   | Somalia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":738,"author":{"gitId":"leeweiming3"},"content":"| SR   | Suriname                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":739,"author":{"gitId":"leeweiming3"},"content":"| SS   | South Sudan                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":740,"author":{"gitId":"leeweiming3"},"content":"| ST   | São Tomé \u0026 Príncipe                    |","lastModifiedDate":"2024-04-13"},{"lineNumber":741,"author":{"gitId":"leeweiming3"},"content":"| SV   | El Salvador                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":742,"author":{"gitId":"leeweiming3"},"content":"| SX   | Sint Maarten                           |","lastModifiedDate":"2024-04-13"},{"lineNumber":743,"author":{"gitId":"leeweiming3"},"content":"| SY   | Syria                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":744,"author":{"gitId":"leeweiming3"},"content":"| SZ   | Swaziland                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":745,"author":{"gitId":"leeweiming3"},"content":"| TC   | Turks \u0026 Caicos Islands                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":746,"author":{"gitId":"leeweiming3"},"content":"| TD   | Chad                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":747,"author":{"gitId":"leeweiming3"},"content":"| TF   | French Southern Territories            |","lastModifiedDate":"2024-04-13"},{"lineNumber":748,"author":{"gitId":"leeweiming3"},"content":"| TG   | Togo                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":749,"author":{"gitId":"leeweiming3"},"content":"| TH   | Thailand                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":750,"author":{"gitId":"leeweiming3"},"content":"| TJ   | Tajikistan                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":751,"author":{"gitId":"leeweiming3"},"content":"| TK   | Tokelau                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":752,"author":{"gitId":"leeweiming3"},"content":"| TL   | Timor-Leste                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":753,"author":{"gitId":"leeweiming3"},"content":"| TM   | Turkmenistan                           |","lastModifiedDate":"2024-04-13"},{"lineNumber":754,"author":{"gitId":"leeweiming3"},"content":"| TN   | Tunisia                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":755,"author":{"gitId":"leeweiming3"},"content":"| TO   | Tonga                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":756,"author":{"gitId":"leeweiming3"},"content":"| TR   | Turkey                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":757,"author":{"gitId":"leeweiming3"},"content":"| TT   | Trinidad \u0026 Tobago                      |","lastModifiedDate":"2024-04-13"},{"lineNumber":758,"author":{"gitId":"leeweiming3"},"content":"| TV   | Tuvalu                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":759,"author":{"gitId":"leeweiming3"},"content":"| TW   | Taiwan                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":760,"author":{"gitId":"leeweiming3"},"content":"| TZ   | Tanzania                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":761,"author":{"gitId":"leeweiming3"},"content":"| UA   | Ukraine                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":762,"author":{"gitId":"leeweiming3"},"content":"| UG   | Uganda                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":763,"author":{"gitId":"leeweiming3"},"content":"| UM   | U.S. Outlying Islands                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":764,"author":{"gitId":"leeweiming3"},"content":"| US   | United States                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":765,"author":{"gitId":"leeweiming3"},"content":"| UY   | Uruguay                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":766,"author":{"gitId":"leeweiming3"},"content":"| UZ   | Uzbekistan                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":767,"author":{"gitId":"leeweiming3"},"content":"| VA   | Vatican City                           |","lastModifiedDate":"2024-04-13"},{"lineNumber":768,"author":{"gitId":"leeweiming3"},"content":"| VC   | St. Vincent \u0026 Grenadines               |","lastModifiedDate":"2024-04-13"},{"lineNumber":769,"author":{"gitId":"leeweiming3"},"content":"| VE   | Venezuela                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":770,"author":{"gitId":"leeweiming3"},"content":"| VG   | British Virgin Islands                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":771,"author":{"gitId":"leeweiming3"},"content":"| VI   | U.S. Virgin Islands                    |","lastModifiedDate":"2024-04-13"},{"lineNumber":772,"author":{"gitId":"leeweiming3"},"content":"| VN   | Vietnam                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":773,"author":{"gitId":"leeweiming3"},"content":"| VU   | Vanuatu                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":774,"author":{"gitId":"leeweiming3"},"content":"| WF   | Wallis \u0026 Futuna                        |","lastModifiedDate":"2024-04-13"},{"lineNumber":775,"author":{"gitId":"leeweiming3"},"content":"| WS   | Samoa                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":776,"author":{"gitId":"leeweiming3"},"content":"| YE   | Yemen                                  |","lastModifiedDate":"2024-04-13"},{"lineNumber":777,"author":{"gitId":"leeweiming3"},"content":"| YT   | Mayotte                                |","lastModifiedDate":"2024-04-13"},{"lineNumber":778,"author":{"gitId":"leeweiming3"},"content":"| ZA   | South Africa                           |","lastModifiedDate":"2024-04-13"},{"lineNumber":779,"author":{"gitId":"leeweiming3"},"content":"| ZM   | Zambia                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":780,"author":{"gitId":"leeweiming3"},"content":"| ZW   | Zimbabwe                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":781,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":782,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"0liverkong":22,"acekhoon":61,"leeweiming3":279,"-":138,"logical-1985516":219,"chiralcentre":63}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"chiralcentre"},"content":"    content: \"HireHub\";","lastModifiedDate":"2024-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"chiralcentre":1}},{"path":"docs/diagrams/AddApplicationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"@startuml","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"!include style.puml","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"participant \":AddApplicationCommandParser\" as AddApplicationCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"participant \"c:AddApplicationCommand\" as AddApplicationCommand LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"participant \"a:Application\" as Application LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"end box","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"end box","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"[-\u003e LogicManager : execute(\"add_app e/example@gmail.com ti/job\")","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"activate LogicManager","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add_app e/example@gmail.com ti/job\")","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"create AddApplicationCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"AddressBookParser -\u003e AddApplicationCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"activate AddApplicationCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"deactivate AddApplicationCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"AddressBookParser -\u003e AddApplicationCommandParser : parse(\"e/example@gmail.com ti/job\")","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"activate AddApplicationCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"create AddApplicationCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommandParser -\u003e AddApplicationCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"activate AddApplicationCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommand --\u003e AddApplicationCommandParser : c","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"deactivate AddApplicationCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"deactivate AddApplicationCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"destroy AddApplicationCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"LogicManager -\u003e AddApplicationCommand : execute(m)","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"activate AddApplicationCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommand -\u003e AddApplicationCommand : findPersonMatchingEmail()","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"activate AddApplicationCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommand --\u003e AddApplicationCommand : p","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"0liverkong"},"content":"deactivate AddApplicationCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommand -\u003e AddApplicationCommand : findJobMatchingTitle()","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"activate AddApplicationCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommand --\u003e AddApplicationCommand : j","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"0liverkong"},"content":"deactivate AddApplicationCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"0liverkong"},"content":"create Application","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommand -\u003e Application : Application(p, j, PRESCREEN)","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"0liverkong"},"content":"activate Application","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"0liverkong"},"content":"Application --\u003e AddApplicationCommand : a","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"0liverkong"},"content":"deactivate Application","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommand -\u003e Model : addApplication(a)","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"0liverkong"},"content":"activate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"0liverkong"},"content":"Model --\u003e AddApplicationCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"0liverkong"},"content":"deactivate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"0liverkong"},"content":"create CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommand -\u003e CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"0liverkong"},"content":"activate CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"0liverkong"},"content":"CommandResult --\u003e AddApplicationCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"0liverkong"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"0liverkong"},"content":"AddApplicationCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"0liverkong"},"content":"deactivate AddApplicationCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"0liverkong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"0liverkong"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"0liverkong"},"content":"@enduml","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"0liverkong":90}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"Person *--\u003e Country","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"Person *--\u003e Status","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"Person *--\u003e Comment","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"acekhoon":2,"-":20,"chiralcentre":1}},{"path":"docs/diagrams/EditJobSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"participant \":EditJobCommandParser\" as EditJobCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"participant \"e:EditJobCommand\" as EditJobCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"end box","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"participant \":FilteredList\u003cJob\u003e\" as FilteredList MODEL_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"end box","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"[-\u003e LogicManager : execute(\"edit_job 2 ti/Data Analyst\")","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"activate LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit_job 2 ti/Data Analyst\")","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"create EditJobCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"AddressBookParser -\u003e EditJobCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"activate EditJobCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"EditJobCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"deactivate EditJobCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"AddressBookParser -\u003e EditJobCommandParser : parse(\"2 ti/Data Analyst\")","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"activate EditJobCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"create EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"EditJobCommandParser -\u003e EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"activate EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"EditJobCommand --\u003e EditJobCommandParser : e","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"deactivate EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"EditJobCommandParser -\u003e EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"activate EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"EditJobCommand --\u003e EditJobCommandParser : editJobDescriptor","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"deactivate EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"EditJobCommandParser --\u003e AddressBookParser : e, editJobDescriptor","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"deactivate EditJobCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"EditJobCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"destroy EditJobCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"AddressBookParser --\u003e LogicManager : e, editJobDescriptor","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"LogicManager -\u003e EditJobCommand : execute(m)","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"activate EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"EditJobCommand -\u003e ModelManager: getFilteredJobList()","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"activate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"deactivate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"EditJobCommand -\u003e FilteredList: get(2)","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"activate FilteredList","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"FilteredList --\u003e EditJobCommand: Job","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"deactivate FilteredList","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"EditJobCommand -\u003e EditJobCommand : createEditedJob(Job, editJobDescriptor)","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"activate EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"EditJobCommand --\u003e EditJobCommand : editedJob","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"deactivate EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"EditJobCommand -\u003e ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"activate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"ModelManager -\u003e FilteredList : setJob(Job, editedJob)","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"activate FilteredList","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"FilteredList --\u003e ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"deactivate FilteredList","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"deactivate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"EditJobCommand -\u003e ModelManager : updateFilteredJobList(x -\u003e true)","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"activate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"deactivate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"acekhoon"},"content":"EditJobCommand -\u003e ModelManager : replaceApplications(Job, editedJob)","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"acekhoon"},"content":"activate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"deactivate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"create CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"EditJobCommand -\u003e CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"activate CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"CommandResult --\u003e EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"acekhoon"},"content":"EditJobCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"deactivate EditJobCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"acekhoon"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"acekhoon":113}},{"path":"docs/diagrams/GetSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"!include style.puml","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"participant \":GetCommandParser\" as GetCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"participant \"g:GetCommand\" as GetCommand LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"[-\u003e LogicManager : execute(\"get 3\")","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"activate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"get 3\")","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"create GetCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"AddressBookParser -\u003e GetCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"activate GetCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"GetCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"deactivate GetCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"AddressBookParser -\u003e GetCommandParser : parse(\"3\")","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"activate GetCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"create GetCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"GetCommandParser -\u003e GetCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"activate GetCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"GetCommand --\u003e GetCommandParser :","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"deactivate GetCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"GetCommandParser --\u003e AddressBookParser : g","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"deactivate GetCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"GetCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"destroy GetCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"AddressBookParser --\u003e LogicManager : g","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"LogicManager -\u003e GetCommand : execute(m)","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"activate GetCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"GetCommand -\u003e Model : updateFilteredPersonList(x -\u003e personToGet.equals(3))","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"activate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"Model --\u003e GetCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"deactivate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"create CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"GetCommand -\u003e CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"activate CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"CommandResult --\u003e GetCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"GetCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"deactivate GetCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"acekhoon":70}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"Parser Classes\" as ParserClasses{","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"Class \"{abstract}\\nConfirmableCommand\" as ConfirmableCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"Class \"{abstract}\\nAbstractDeleteCommand\" as ADCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"Class XYZDeleteCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"Enum \"\u003c\u003cenumeration\u003e\u003e\\nCommandBoxState\" as CommandBoxState","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"LogicManager -left-\u003e\"2\" ParserClasses","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserClasses ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"ParserClasses ..\u003eXYZDeleteCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : \u003c\u003ccall\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"CommandBoxState -right[hidden]-\u003eCommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"LogicManager -\u003e CommandBoxState","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"ConfirmableCommand -right|\u003e Command","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"ConfirmableCommand ..\u003e Command: \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"ConfirmableCommand ..\u003e Command: \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"ADCommand -down|\u003e ConfirmableCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"XYZDeleteCommand -up-|\u003eADCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"note left of XYZDeleteCommand: XYZDeleteCommand \u003d DeleteTagCommand, \\nClearCommand, etc","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"leeweiming3":14,"-":44}},{"path":"docs/diagrams/ModelClassAttributeDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"@startuml","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"!include style.puml","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"Class UniquePersonList","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"Class Person","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"Class Name","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"Class Phone","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"Class Email","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"Class Country","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"Class Comment","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"Class Tag","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"Class UniqueApplicationList","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"Class Application","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"Class Status","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"Class UniqueJobList","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"Class Job","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"Class Title","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"Class Description","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"Class Vacancy","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"Class I #FFFFFF","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"Person *--\u003e \"1\" Country","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"Person *--\u003e \"1\" Comment","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"Phone -[hidden]right-\u003e Country","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"Country -[hidden]right-\u003e Email","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"UniqueApplicationList --\u003e \"~* all\" Application","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"Application *--\u003e \"1\" Status","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"UniqueApplicationList -[hidden]left--\u003e I","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"UniqueJobList --\u003e \"~* all\" Job","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"Job *--\u003e \"1\" Title","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"Job *--\u003e \"1\" Description","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"Job *--\u003e \"1\" Vacancy","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"Job -[hidden]down--\u003e I","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"Title -[hidden]right-\u003e Description","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"Description -[hidden]right-\u003e Vacancy","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"Job - Person: \u003c applies","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"(Person, Job) .. Application","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"@enduml","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"acekhoon":65}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"Class UniqueApplicationList","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"Class Application","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"Class UniqueJobList","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"Class Job","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"Model .down.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"Model .down.\u003e ReadOnlyAddressBook","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"ModelManager -down-\u003e \"1\" AddressBook","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"ModelManager -down-\u003e \"1\" UserPrefs","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"UniquePersonList -[hidden]up-\u003e I","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e \"1\" UniqueApplicationList","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"UniqueApplicationList --\u003e \"~* all\" Application","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"Application -[hidden]up--\u003e I","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"UniqueApplicationList -[hidden]right-\u003e I","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e \"~* filtered\" Application","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e \"1\" UniqueJobList","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"UniqueJobList --\u003e \"~* all\" Job","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"Job -[hidden]up--\u003e I","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"UniqueJobList -[hidden]left-\u003e I","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e \"~* filtered\" Job","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"Job - Person: applies \u003c","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"(Person, Job) .. Application","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"acekhoon":31,"-":35}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"Class ConfirmationStageParser","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"HiddenOutside ..\u003e ConfirmationStageParser","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"ConfirmationStageParser --\u003e Command: \u003c\u003cconfirm\u003e\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"ConfirmationStageParser --\u003e Command: \u003c\u003cdeny\u003e\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : \u003c\u003cuse\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"leeweiming3":4,"-":37}},{"path":"docs/diagrams/SearchSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"participant \":SearchCommandParser\" as SearchCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"participant \":SearchPersonDescriptor\" as SearchPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"participant \"s:SearchCommand\" as SearchCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"participant \"p:SearchPredicate\" as SearchPredicate MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"participant \":ContainsKeywordsPredicate\" as ContainsKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"[-\u003e LogicManager : execute(\"search n/l c/SG\")","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"activate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"search n/l c/SG\")","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"create SearchCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"AddressBookParser -\u003e SearchCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"activate SearchCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"SearchCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"deactivate SearchCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"AddressBookParser -\u003e SearchCommandParser : parse(\"n/l c/SG\")","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"activate SearchCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"create SearchPersonDescriptor","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"SearchCommandParser --\u003e SearchPersonDescriptor","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"activate SearchPersonDescriptor","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"SearchPersonDescriptor -\u003e SearchCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"deactivate SearchPersonDescriptor","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"create SearchCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"SearchCommandParser -\u003e SearchCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"activate SearchCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"SearchCommand --\u003e SearchCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"deactivate SearchCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"SearchCommandParser --\u003e AddressBookParser : s","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"deactivate SearchCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"SearchCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"destroy SearchCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"LogicManager -\u003e SearchCommand : execute(m)","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"activate SearchCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"SearchCommand --\u003e SearchPersonDescriptor : getPredicate()","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"activate SearchPersonDescriptor","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"loop 6 times","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"create ContainsKeywordsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"SearchPersonDescriptor --\u003e ContainsKeywordsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"activate ContainsKeywordsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"ContainsKeywordsPredicate --\u003e SearchPersonDescriptor","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"deactivate ContainsKeywordsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"end","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"create SearchPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"SearchPersonDescriptor --\u003e SearchPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"SearchPredicate --\u003e SearchPersonDescriptor","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"deactivate SearchPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"SearchPersonDescriptor --\u003e SearchCommand : p","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"deactivate SearchPersonDescriptor","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"SearchCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"Model --\u003e SearchPredicate : test(person)","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"activate SearchPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"loop 6 times","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"SearchPredicate --\u003e ContainsKeywordsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"activate ContainsKeywordsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"ContainsKeywordsPredicate --\u003e ContainsKeywordsPredicate : test(person)","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"ContainsKeywordsPredicate --\u003e SearchPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"deactivate ContainsKeywordsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"end","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"ContainsKeywordsPredicate --\u003e SearchPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"SearchPredicate --\u003e Model","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"deactivate SearchPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"Model --\u003e SearchCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"create CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"SearchCommand -\u003e CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"activate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"CommandResult --\u003e SearchCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"SearchCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"deactivate SearchCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"logical-1985516":123}},{"path":"docs/diagrams/SlotsLeftSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"participant \":SlotsLeftCommandParser\" as SlotsLeftCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"participant \"s:SlotsLeftCommand\" as SlotsLeftCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"end box","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"participant \":FilteredList\u003cJob\u003e\" as FilteredList MODEL_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"end box","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"[-\u003e LogicManager : execute(\"slots_left 2\")","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"activate LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"slots_left 2\")","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"create SlotsLeftCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"AddressBookParser -\u003e SlotsLeftCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"activate SlotsLeftCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"SlotsLeftCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"deactivate SlotsLeftCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"AddressBookParser -\u003e SlotsLeftCommandParser : parse(\"2\")","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"activate SlotsLeftCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"create SlotsLeftCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"SlotsLeftCommandParser -\u003e SlotsLeftCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"activate SlotsLeftCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"SlotsLeftCommand --\u003e SlotsLeftCommandParser :","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"deactivate SlotsLeftCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"SlotsLeftCommandParser --\u003e AddressBookParser : s","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"deactivate SlotsLeftCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"SlotsLeftCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"destroy SlotsLeftCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"LogicManager -\u003e SlotsLeftCommand : execute(m)","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"activate SlotsLeftCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"SlotsLeftCommand -\u003e ModelManager : getFilteredJobList()","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"activate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"ModelManager -\u003e FilteredList : get(2)","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"activate FilteredList","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"FilteredList --\u003e ModelManager : Job","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"deactivate FilteredList","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e SlotsLeftCommand : Job","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"deactivate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"SlotsLeftCommand -\u003e ModelManager : countRemainingVacancy(Job)","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"activate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"ModelManager --\u003e SlotsLeftCommand : vacancy left","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"deactivate ModelManager","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"create CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"SlotsLeftCommand -\u003e CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"activate CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"CommandResult --\u003e SlotsLeftCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"SlotsLeftCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"deactivate SlotsLeftCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"acekhoon":83}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"package \"Jobs Storage\" #F4F6F6{","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nJobsStorage\" as JobsStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"Class JsonJobsStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"Class JsonSerializableJobList","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"Class JsonAdaptedJob","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"package \"Applications Storage\" #F4F6F6{","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nApplicationStorage\" as ApplicationStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"Class JsonApplicationStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"Class JsonSerializableApplicationList","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"Class JsonAdaptedApplication","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"StorageManager -up-\u003e \"1\" JobsStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"StorageManager -up-\u003e \"1\" ApplicationStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"Storage -down-|\u003e ApplicationStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"Storage -down-|\u003e JobsStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"Storage -down-|\u003e UserPrefsStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"JsonJobsStorage .up.|\u003e JobsStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"JsonJobsStorage ..\u003e JsonSerializableJobList","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"chiralcentre"},"content":"JsonSerializableJobList --\u003e \"*\" JsonAdaptedJob","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"JsonApplicationStorage .up.|\u003e ApplicationStorage","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"JsonApplicationStorage ..\u003e JsonSerializableApplicationList","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"JsonSerializableApplicationList --\u003e \"*\" JsonAdaptedApplication","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":44,"chiralcentre":25}},{"path":"docs/diagrams/TagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"@startuml","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"!include style.puml","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"participant \"c:TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"end box","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"end box","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"[-\u003e LogicManager : execute(\"tag 1 t/INTERNAL\")","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"activate LogicManager","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"tag 1 t/INTERNAL\")","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"create TagCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"AddressBookParser -\u003e TagCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"activate TagCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"TagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"deactivate TagCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"AddressBookParser -\u003e TagCommandParser : parse(\"1 t/INTERNAL\")","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"activate TagCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"TagCommandParser -\u003e ParserUtil : parseIndex(\"1\")","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"ParserUtil -\u003e TagCommandParser : index","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"TagCommandParser -\u003e ParserUtil : parseTags(\"t/INTERNAL\")","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"ParserUtil -\u003e TagCommandParser : tags","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"create TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"TagCommandParser -\u003e TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"activate TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"TagCommand --\u003e TagCommandParser : c","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"deactivate TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"TagCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"deactivate TagCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"0liverkong"},"content":"TagCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"0liverkong"},"content":"destroy TagCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"0liverkong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"0liverkong"},"content":"LogicManager -\u003e TagCommand : execute(m)","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"0liverkong"},"content":"activate TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"0liverkong"},"content":"create Person","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"0liverkong"},"content":"TagCommand -\u003e Person","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"0liverkong"},"content":"activate Person","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"0liverkong"},"content":"Person --\u003e TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"0liverkong"},"content":"deactivate Person","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"0liverkong"},"content":"TagCommand -\u003e Model : setPerson()","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"0liverkong"},"content":"activate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"0liverkong"},"content":"Model --\u003e TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"0liverkong"},"content":"deactivate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"0liverkong"},"content":"TagCommand -\u003e Model : updateFilteredPersonList()","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"0liverkong"},"content":"activate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"0liverkong"},"content":"Model --\u003e TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"0liverkong"},"content":"deactivate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"0liverkong"},"content":"TagCommand -\u003e Model : replaceApplications()","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"0liverkong"},"content":"activate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"0liverkong"},"content":"Model --\u003e TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"0liverkong"},"content":"deactivate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"0liverkong"},"content":"create CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"0liverkong"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"0liverkong"},"content":"activate CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"0liverkong"},"content":"CommandResult --\u003e TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"0liverkong"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"0liverkong"},"content":"TagCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"0liverkong"},"content":"deactivate TagCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"0liverkong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"0liverkong"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"0liverkong"},"content":"@enduml","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"0liverkong":103}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"Class XXXListPanel","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"Class XXXCard","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"MainWindow *-down-\u003e \"1\" XXXListPanel","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"XXXListPanel -down-\u003e \"*\" XXXCard","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"XXXListPanel --|\u003e UiPart","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"XXXCard --|\u003e UiPart","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"XXXCard ..\u003e Model","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"XXXListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"0liverkong":8,"-":52}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"title: HireHub","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W08-1/tp/graph/badge.svg?token\u003dIG2LRI4TTR)](https://codecov.io/gh/AY2324S2-CS2103T-W08-1/tp)","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"**HireHub is a desktop application for managing your candidate details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"* If you are interested in using HireHub, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.md).","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"* If you are interested about developing HireHub, the [**Developer Guide**](DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":14,"logical-1985516":5}},{"path":"docs/team/0liverkong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"layout: page","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"### Project: Hirehub Level 3","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"Hirehub - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"* **Project management**:","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"  * User Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"* **Community**:","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"* **Tools**:","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"0liverkong":44,"chiralcentre":2}},{"path":"docs/team/ikhoon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"layout: page","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"title: Ryan\u0027s Project Portfolio Page","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"### Project: Hirehub Level 3","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"Hirehub - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"* **Project management**:","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    * User Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    * Developer Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"* **Community**:","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"* **Tools**:","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"acekhoon":44,"chiralcentre":2}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"### Project: Hirehub Level 3","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"Hirehub - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":44,"chiralcentre":2}},{"path":"docs/team/leeweiming3.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"layout: page","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"title: Wei Ming\u0027s Project Portfolio Page","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"### Project: Hirehub","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"Hirehub is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"* **Project management**:","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"  * User Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"* **Community**:","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"* **Tools**:","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"leeweiming3":46}},{"path":"docs/team/ryan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"layout: page","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"title: Ryan\u0027s Project Portfolio Page","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"### Project: Hirehub Level 3","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"Hirehub - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"* **Project management**:","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"  * User Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"* **Community**:","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"* **Tools**:","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"chiralcentre":46}},{"path":"docs/team/yanjie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"layout: page","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"title: Yan Jie\u0027s Project Portfolio Page","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"### Project: Hirehub Level 3","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"Hirehub - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"* **Project management**:","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"  * User Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"* **Community**:","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"* **Tools**:","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"logical-1985516":44,"chiralcentre":2}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"This command allows users of the Hirehub application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"chiralcentre"},"content":"Create a `RemarkCommandParser` class in the `seedu.hirehub.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"chiralcentre"},"content":"Create a new `Remark` in `seedu.hirehub.model.person`. Since a `Remark` is a field that is similar to `Country`, we can reuse a significant bit of code.","lastModifiedDate":"2024-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"chiralcentre"},"content":"Simply add the following to [`seedu.hirehub.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-03-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"chiralcentre"},"content":"Hirehub stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2024-03-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"chiralcentre"},"content":":exclamation: You must delete Hirehub’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause Hirehub to default to an empty address book!","lastModifiedDate":"2024-03-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"chiralcentre"},"content":"                personToEdit.getCountry(), remark, personToEdit.getTags());","lastModifiedDate":"2024-03-14"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"chiralcentre"},"content":"This concludes the tutorial for adding a new `Command` to Hirehub.","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"-":388,"chiralcentre":11}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `country` field from `Person` class.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `country` field can be done similarly.","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"## Safely deleting `Country`","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"The `country` field in `Person` is actually an instance of the `seedu.hirehub.model.person.Country` class. Since removing the `Country` class will break the application, we start by identifying `Country`\u0027s usages. This allows us to see code that depends on `Country` to function properly and edit them on a case-by-case basis. Right-click the `Country` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Country` class is used.","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"Remove usages of `Country` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Country`. Functions like `ParserUtil#parseCountry()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"Let’s try removing references to `Country` in `EditPersonDescriptor`.","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"1. Safe delete the field `country` in `EditPersonDescriptor`.","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"1. Remove the usages of `country` and select `Do refactor` when you are done.","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `country` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"1. Repeat the steps for the remaining usages of `Country`","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"Unfortunately, there are usages of `Country` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `country` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$country` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"![$country](../images/remove/$country.png)","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"private Label country;","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"chiralcentre"},"content":"\u003cLabel fx:id\u003d\"country\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$country\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"chiralcentre"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Country` in test data and documentation.","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"chiralcentre"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `country` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"    \"country\": \"4th street\"","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"You can go through each individual `json` file and manually remove the `country` field.","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"-":92,"chiralcentre":20}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.hirehub.logic.Logic`.","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"A quick look at the `seedu.hirehub.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"chiralcentre"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [c/COUNTRY] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":298,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.FileUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":69,"chiralcentre":4}},{"path":"src/main/java/seedu/hirehub/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":39,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.Config;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.Version;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ConfigUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.StringUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Logic;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.LogicManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.AddressBookStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.storage.ApplicationStorage;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.JobsStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.storage.JsonApplicationStorage;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.JsonJobsStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.Storage;","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.StorageManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.UserPrefsStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.ui.UiManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"        JobsStorage jobsStorage \u003d new JsonJobsStorage(userPrefs.getJobsFilePath());","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"        ApplicationStorage applicationStorage \u003d new JsonApplicationStorage(userPrefs.getApplicationsFilePath());","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, jobsStorage, applicationStorage);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"chiralcentre"},"content":"     * Returns a {@code ModelManager} with data","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"     * from {@code storage}\u0027s address book and jobs list, {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"chiralcentre"},"content":"     * The data from the sample jobs list will be used instead if {@code storage}\u0027s jobs list is not found,","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"chiralcentre"},"content":"     * or an empty jobs list will be used instead if errors occur when reading {@code storage}\u0027s jobs list.","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"chiralcentre"},"content":"        logger.info(\"Using data file : \" + storage.getJobsFilePath());","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"chiralcentre"},"content":"        Optional\u003cUniqueJobList\u003e jobListOptional;","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"chiralcentre"},"content":"        UniqueJobList initialJobs;","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"            jobListOptional \u003d storage.readJobList();","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"chiralcentre"},"content":"            if (!jobListOptional.isPresent()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"                logger.info(\"Creating a new data file \" + storage.getJobsFilePath()","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"                    + \" populated with a sample jobs list.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"chiralcentre"},"content":"            initialJobs \u003d jobListOptional.orElseGet(SampleDataUtil::getSampleUniqueJobList);","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"chiralcentre"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"chiralcentre"},"content":"            logger.warning(\"Data file at \" + storage.getJobsFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"chiralcentre"},"content":"                + \" Will be starting with an empty jobs list.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"chiralcentre"},"content":"            initialJobs \u003d new UniqueJobList();","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"leeweiming3"},"content":"        Optional\u003cUniqueApplicationList\u003e applicationListOptional;","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"leeweiming3"},"content":"        UniqueApplicationList initialApplications;","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"leeweiming3"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"leeweiming3"},"content":"            applicationListOptional \u003d storage.readApplicationList(initialJobs, initialData);","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"leeweiming3"},"content":"            if (!applicationListOptional.isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"leeweiming3"},"content":"                logger.info(\"Creating a new data file \" + storage.getApplicationFilePath()","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"leeweiming3"},"content":"                    + \" populated with a sample application list.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"leeweiming3"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"leeweiming3"},"content":"            initialApplications \u003d applicationListOptional.orElseGet(SampleDataUtil::getSampleUniqueApplicationList);","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"leeweiming3"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"leeweiming3"},"content":"            logger.warning(\"Data file at \" + storage.getApplicationFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"leeweiming3"},"content":"                + \" Will be starting with an empty application list.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"leeweiming3"},"content":"            initialApplications \u003d new UniqueApplicationList();","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"leeweiming3"},"content":"        return new ModelManager(initialData, initialJobs, userPrefs, initialApplications);","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leeweiming3":20,"-":158,"chiralcentre":49}},{"path":"src/main/java/seedu/hirehub/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.core;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":64,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.core;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":80,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.core;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":105,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.core;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":120,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.core.index;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":67,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.exceptions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"-":10,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.exceptions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.MainApp;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.Config;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":141,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"-":52,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/logic/CommandBoxState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":" * State of the program/command box, depending on the state,","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":" * the command box will accept different arguments.","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"public enum CommandBoxState {","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"    NORMAL,","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"    CONFIRM","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"0liverkong":8,"leeweiming3":1,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"     * @see seedu.hirehub.model.Model#getAddressBook()","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"    /** Returns an unmodifiable view of the filtered list of jobs */","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"    ObservableList\u003cJob\u003e getFilteredJobList();","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"    ObservableList\u003cApplication\u003e getFilteredApplicationList();","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"0liverkong":6,"-":42,"chiralcentre":8}},{"path":"src/main/java/seedu/hirehub/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.ConfirmableCommand;","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.AddressBookParser;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.parser.ConfirmationStageParser;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"    private final ConfirmationStageParser confirmationStageParser;","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"    private CommandBoxState state;","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"        confirmationStageParser \u003d new ConfirmationStageParser();","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"        this.state \u003d CommandBoxState.NORMAL;","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"0liverkong"},"content":"        Command command \u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"0liverkong"},"content":"        switch (state) {","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"        case NORMAL:","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"0liverkong"},"content":"            command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"0liverkong"},"content":"            break;","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"        case CONFIRM:","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"            command \u003d confirmationStageParser.parseCommand(commandText);","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"            break;","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"0liverkong"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"0liverkong"},"content":"            break;","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"0liverkong"},"content":"        assert (command !\u003d null);","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"0liverkong"},"content":"        state \u003d commandResult.getCommandBoxState();","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"        // Confirm state only supports confirmable commands","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"        assert (state !\u003d CommandBoxState.CONFIRM || command instanceof ConfirmableCommand);","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"        if (command instanceof ConfirmableCommand) {","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"            confirmationStageParser.setNextCommands((ConfirmableCommand) command);","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"            storage.saveJobList(model.getJobList());","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"            storage.saveApplicationList(model.getApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"0liverkong"},"content":"    public ObservableList\u003cJob\u003e getFilteredJobList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"0liverkong"},"content":"        return model.getFilteredJobList();","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":106,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"0liverkong"},"content":"    public ObservableList\u003cApplication\u003e getFilteredApplicationList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"0liverkong"},"content":"        return model.getFilteredApplicationList();","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"0liverkong":23,"leeweiming3":13,"-":76,"chiralcentre":13}},{"path":"src/main/java/seedu/hirehub/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.Prefix;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND_CLEAR_CONFIRMATION \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"            \"Unknown command, enter Y to clear or N to abort\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND_DELETE_CONFIRMATION \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"            \"Unknown command, enter Y to delete or N to abort\";","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format or\"","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"            + \" invalid index provided! \\n%1$s\";","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX \u003d \"The application index provided is\"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            + \" invalid\";","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_JOBS_LISTED_OVERVIEW \u003d \"%1$d job(s) listed!\";","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_APPLICATIONS_LISTED_OVERVIEW \u003d \"%1$d application(s) listed!\";","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_INVALID_JOB_DISPLAYED_INDEX \u003d \"The job index provided is invalid\";","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"                .append(\"; Country: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"                .append(person.getCountry())","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"                .append(\"; Comment: \")","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"                .append(person.getComment())","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"     * Formats the {@code job} for display to the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"    public static String format(Job job) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"        return \"Job(Title: \"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"                + job.getTitle()","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"chiralcentre"},"content":"                + \"; Description: \"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"                + job.getDescription()","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"                + \"; Vacancy: \"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"                + job.getVacancy()","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"                + \")\";","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"0liverkong":4,"acekhoon":7,"-":44,"chiralcentre":22}},{"path":"src/main/java/seedu/hirehub/logic/commands/AbstractDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.CommandBoxState;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":" * Represents a deletion command, which only executes upon confirmation","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"public abstract class AbstractDeleteCommand extends ConfirmableCommand {","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"     * Execute delete command on confirmation, on model","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"     * @param model Model to operate on","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"     * @return response string","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"    public abstract String performDelete(Model model) throws CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"     * Execute denied delete command on model","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"     * @param model Model to operate on","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"     * @return response string","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    public abstract String denyDelete(Model model);","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"    public Command whenConfirmed() {","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"        return new DeleteCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"    public Command whenDenied() {","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"        return new AbortDeleteCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"    class DeleteCommand extends Command {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"        public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"            String result \u003d AbstractDeleteCommand.this.performDelete(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"            return new CommandResult(result, CommandBoxState.NORMAL);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"    class AbortDeleteCommand extends Command {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"        public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"            String result \u003d AbstractDeleteCommand.this.denyDelete(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"            return new CommandResult(result, CommandBoxState.NORMAL);","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"leeweiming3":52}},{"path":"src/main/java/seedu/hirehub/logic/commands/AddApplicationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":" * Adds a job application from a candidate to the list of job applications","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"public class AddApplicationCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    public static final String COMMAND_WORD \u003d \"add_app\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new job application \"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            + \"from a candidate to the list of applications.\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS]\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"            + PREFIX_EMAIL + \"acekhoon@gmail.com \"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"            + PREFIX_TITLE + \"Quantitative Researcher \";","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_ADD_SUCCESS \u003d \"New job application added successfully! Candidate \\\"%1$s\\\" \"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"            + \"applied for the job \\\"%2$s\\\"\";","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICATION \u003d \"This candidate already applied for this job \"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"            + \"and application has been processed already into the list\";","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_NO_PERSON_IN_LIST \u003d \"This candidate is not in the current list of candidates! \";","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_NO_JOB_IN_LIST \u003d \"This job has not been created\";","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_EXCEEDS_VACANCY \u003d \"The number of accepted candidates already meets the\"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"            + \" stipulated vacancy.\\n To accept more candidates, the vacancy for the job can be increased via the\"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"            + \" edit_job command, or change status for existing application(s) to this job via status command to\"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"            + \" a status other than OFFERED.\\n You can retrieve vacancies left via slots_left command\";","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"    private final Email email;","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"    private final String jobTitle;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"    private final Status status;","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"     * @param email of the person in the filtered person list to add a job application for","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"     * @param jobTitle of the job to match a candidate with the job they applied for","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"     * @param status of the person to show the current recruitment status of a candidate","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"    public AddApplicationCommand(Email email, String jobTitle, Status status) {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(email);","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(jobTitle);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"     * Overloads the constructor where the status is set as \"PRESCREEN\" as a default if it is not","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"     * provided by the recruiter","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"    public AddApplicationCommand(Email email, String jobTitle) {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"        this(email, jobTitle, new Status(\"PRESCREEN\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"        Person personMatchingEmail \u003d findPersonMatchingEmail(email, model);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"        Job jobMatchingTitle \u003d findJobMatchingTitle(jobTitle, model);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"        Application newCandidateApplication \u003d new Application(personMatchingEmail, jobMatchingTitle, status);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"        if (model.hasApplication(newCandidateApplication)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICATION);","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"        if (status.equals(new Status(\"OFFERED\")) \u0026\u0026 model.countRemainingVacancy(jobTitle) \u003c\u003d 0) {","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"            throw new CommandException(MESSAGE_EXCEEDS_VACANCY);","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"        model.addApplication(newCandidateApplication);","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_SUCCESS, personMatchingEmail.getName(), jobTitle));","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"     * Finds a person with the given email in the filtered person list","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"     * @param email for email of a candidate to search for in the list","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"acekhoon"},"content":"     * @param model to retrieve the filtered person list","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"acekhoon"},"content":"    public Person findPersonMatchingEmail(Email email, Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(email);","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"            if (email.equals(lastShownList.get(i).getEmail())) {","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"                return lastShownList.get(i);","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"acekhoon"},"content":"        throw new CommandException(MESSAGE_NO_PERSON_IN_LIST);","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"     * Finds a job with the given job title in the filtered job list","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"     * @param title of the job to find a job title matches with the job candidate applied for","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"acekhoon"},"content":"     * @param model to retrieve the filtered job list","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"acekhoon"},"content":"    public Job findJobMatchingTitle(String title, Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(title);","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"acekhoon"},"content":"        List\u003cJob\u003e lastShownJobList \u003d model.getFilteredJobList();","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"acekhoon"},"content":"        Job checkEqualJob \u003d new Job(title, \"\", 10);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"acekhoon"},"content":"        for (int i \u003d 0; i \u003c lastShownJobList.size(); i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"acekhoon"},"content":"            if (checkEqualJob.isSameJob(lastShownJobList.get(i))) {","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"acekhoon"},"content":"                return lastShownJobList.get(i);","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"acekhoon"},"content":"        throw new CommandException(MESSAGE_NO_JOB_IN_LIST);","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"acekhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"acekhoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"acekhoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"acekhoon"},"content":"        if (!(other instanceof AddApplicationCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"acekhoon"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"acekhoon"},"content":"        AddApplicationCommand otherAddApplicationCommand \u003d (AddApplicationCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"acekhoon"},"content":"        return email.equals(otherAddApplicationCommand.email)","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 jobTitle.equals(otherAddApplicationCommand.jobTitle)","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 status.equals(otherAddApplicationCommand.status);","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"acekhoon"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"acekhoon"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"acekhoon"},"content":"                .add(\"jobTitle\", jobTitle)","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"acekhoon"},"content":"                .add(\"status\", status)","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"acekhoon"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"acekhoon":153,"logical-1985516":1}},{"path":"src/main/java/seedu/hirehub/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"            + PREFIX_COUNTRY + \"COUNTRY \"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"            + PREFIX_COUNTRY + \"SG \"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":71,"chiralcentre":13}},{"path":"src/main/java/seedu/hirehub/logic/commands/AddJobCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_VACANCY;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":" * Adds a job to the list of open jobs","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"public class AddJobCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"    public static final String COMMAND_WORD \u003d \"add_job\";","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new job to list of open jobs. \"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"            + PREFIX_VACANCY + \"VACANCY \\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"            + PREFIX_TITLE + \"Software Engineer \"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"            + PREFIX_DESCRIPTION + \"Must be proficient in C++ \"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"            + PREFIX_VACANCY + \"10\\n\";","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_ADD_SUCCESS \u003d \"New job added: %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_DUPLICATE_JOB \u003d \"This job already exists in the list of open jobs\";","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"    private final Job job;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"    public AddJobCommand(Job job) {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"        this.job \u003d job;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"        if (model.hasJob(job)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"        model.addJob(job);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_SUCCESS, Messages.format(job)));","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"        if (!(other instanceof AddJobCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"        AddJobCommand otherJobCommand \u003d (AddJobCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"        return job.equals(otherJobCommand.job);","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"                .add(\"job\", job)","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"chiralcentre":71}},{"path":"src/main/java/seedu/hirehub/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.CommandBoxState;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":" * Pushes the program into the state to clear the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"public class ClearCommand extends AbstractDeleteCommand {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_CONFIRM_STAGE \u003d \"Clearing the address book is irreversible. Proceed? (Y/N)\";","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_ADDRESS_BOOK_EMPTY \u003d \"The address book is empty.\";","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_CLEAR_CONFIRM \u003d \"Address book has been cleared!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_CLEAR_CANCEL \u003d \"Clearing aborted\";","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"        if (model.getAddressBook().getPersonList().isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"            return new CommandResult(MESSAGE_ADDRESS_BOOK_EMPTY, CommandBoxState.NORMAL);","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"        return new CommandResult(MESSAGE_CONFIRM_STAGE, CommandBoxState.CONFIRM);","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"    public String performDelete(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        model.clearApplications();","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"        return MESSAGE_CLEAR_CONFIRM;","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"    public String denyDelete(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"        return MESSAGE_CLEAR_CANCEL;","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leeweiming3":19,"-":15,"logical-1985516":5,"chiralcentre":4}},{"path":"src/main/java/seedu/hirehub/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":16,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.CommandBoxState.NORMAL;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.CommandBoxState;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"    private final CommandBoxState state;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, CommandBoxState state) {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"        this.state \u003d state;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"        this.state \u003d NORMAL;","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"        this(feedbackToUser, false, false, NORMAL);","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"    public CommandResult(String feedbackToUser, CommandBoxState state) {","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"        this(feedbackToUser, false, false, state);","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"0liverkong"},"content":"    public CommandBoxState getCommandBoxState() {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"0liverkong"},"content":"        return state;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"0liverkong":20,"-":79,"chiralcentre":4}},{"path":"src/main/java/seedu/hirehub/logic/commands/CommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import java.util.List;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Comment;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":" * Changes the comment of an existing person in the address book.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"public class CommentCommand extends Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"            + \": Edits the comment of the person identified \"","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"            + \"Existing comment will be overwritten by the input.\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"            + \"COMMENT\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"            + \"Likes to swim.\";","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_ADD_COMMENT_SUCCESS \u003d \"Added comment to Person: %1$s\";","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_DELETE_COMMENT_SUCCESS \u003d \"Removed comment from Person: %1$s\";","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"    private final Index index;","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"    private final Comment comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"     * @param index of the person in the filtered person list to edit the comment","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"     * @param comment of the person to be updated to","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"    public CommentCommand(Index index, Comment comment) {","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"        requireAllNonNull(index, comment);","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"                personToEdit.getCountry(), comment, personToEdit.getTags());","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"        model.replaceApplications(personToEdit, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"chiralcentre"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"        String message \u003d !comment.value.isEmpty() ? MESSAGE_ADD_COMMENT_SUCCESS : MESSAGE_DELETE_COMMENT_SUCCESS;","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"        return String.format(message, Messages.format(personToEdit));","lastModifiedDate":"2024-03-09"},{"lineNumber":75,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"chiralcentre"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"chiralcentre"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"            return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"chiralcentre"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"chiralcentre"},"content":"        if (!(other instanceof CommentCommand)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"chiralcentre"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"chiralcentre"},"content":"        CommentCommand e \u003d (CommentCommand) other;","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"chiralcentre"},"content":"        return index.equals(e.index)","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"chiralcentre"},"content":"                \u0026\u0026 comment.equals(e.comment);","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"acekhoon":1,"logical-1985516":3,"chiralcentre":88}},{"path":"src/main/java/seedu/hirehub/logic/commands/ConfirmableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":" * Represents a command which puts the parser in confirm mode and executes","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":" * more commands upon confirm/deny.","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"public abstract class ConfirmableCommand extends Command {","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"     * Returns the command to be executed upon next confirmation.","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"    public abstract Command whenConfirmed();","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"     * Returns the command to be executed upon next refusal to confirm.","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"    public abstract Command whenDenied();","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"leeweiming3":17}},{"path":"src/main/java/seedu/hirehub/logic/commands/DeleteApplicationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.CommandBoxState;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":" * Pushes the program into the state to delete the application at targetIndex.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"public class DeleteApplicationCommand extends AbstractDeleteCommand {","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    public static final String COMMAND_WORD \u003d \"delete_app\";","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a selected job application from \"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        + \"the list of job applications \\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"        + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_CONFIRM_STAGE \u003d \"Delete application selected. Proceed? (Y/N)\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_DELETE_APPLICATION_CONFIRM \u003d \"Job application for candidate \\\"%1$s\\\" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"        + \"applying for job \\\"%2$s\\\" successfully deleted!\";","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_DELETE_APPLICATION_CANCEL \u003d \"Deletion of application aborted\";","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"    public DeleteApplicationCommand(Index targetIndex) {","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"        List\u003cApplication\u003e lastShownApplicationList \u003d model.getFilteredApplicationList();","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownApplicationList.size()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        Application applicationToDelete \u003d lastShownApplicationList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"        model.setLastMentionedApplication(applicationToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"        return new CommandResult(MESSAGE_CONFIRM_STAGE, CommandBoxState.CONFIRM);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"    public String performDelete(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"        Application applicationToDelete \u003d model.getLastMentionedApplication().get();","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"        model.deleteApplication(applicationToDelete);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"        return String.format(MESSAGE_DELETE_APPLICATION_CONFIRM,","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"            applicationToDelete.getPerson().getName(), applicationToDelete.getJob().title);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"    public String denyDelete(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"        return MESSAGE_DELETE_APPLICATION_CANCEL;","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"        if (!(other instanceof DeleteApplicationCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"        DeleteApplicationCommand o \u003d (DeleteApplicationCommand) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"        return (this.targetIndex.equals(o.targetIndex));","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"            .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"            .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"acekhoon":43,"leeweiming3":42}},{"path":"src/main/java/seedu/hirehub/logic/commands/DeleteJobCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.CommandBoxState;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":" * Deletes a job identified using its displayed index from list of jobs","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"public class DeleteJobCommand extends AbstractDeleteCommand {","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"    public static final String COMMAND_WORD \u003d \"delete_job\";","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"        + \": Deletes the job identified by the index number used in the displayed job list.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_DELETE_JOB_CONFIRM \u003d \"Deleted Job: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_DELETE_JOB_CANCEL \u003d \"Deletion of job aborted\";","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_CONFIRM_STAGE \u003d \"Delete job selected. Proceed? (Y/N)\";","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"    public DeleteJobCommand(Index targetIndex) {","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"        List\u003cJob\u003e lastShownJobList \u003d model.getFilteredJobList();","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownJobList.size()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"        Job jobToDelete \u003d lastShownJobList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"        model.setLastMentionedJob(jobToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        return new CommandResult(MESSAGE_CONFIRM_STAGE, CommandBoxState.CONFIRM);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"    public String performDelete(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"        Job jobToDelete \u003d model.getLastMentionedJob().get();","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"        model.deleteJob(jobToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"        model.removeApplications(jobToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"        return String.format(MESSAGE_DELETE_JOB_CONFIRM, Messages.format(jobToDelete));","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"    public String denyDelete(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"        return MESSAGE_DELETE_JOB_CANCEL;","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"leeweiming3":30,"chiralcentre":31}},{"path":"src/main/java/seedu/hirehub/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.CommandBoxState;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":" * Pushes the program into the state to delete the person at targetIndex.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"public class DeletePersonCommand extends AbstractDeleteCommand {","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"        + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_CONFIRM_STAGE \u003d \"Delete person. Proceed? (Y/N)\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_DELETE_PERSON_CONFIRM \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_DELETE_PERSON_CANCEL \u003d \"Deletion aborted\";","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"        model.setLastMentionedPerson(personToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        return new CommandResult(MESSAGE_CONFIRM_STAGE, CommandBoxState.CONFIRM);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"    public String performDelete(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"        Person personToDelete \u003d model.getLastMentionedPerson().get();","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"        model.removeApplications(personToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"        return String.format(MESSAGE_DELETE_PERSON_CONFIRM, Messages.format(personToDelete));","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"    public String denyDelete(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"        return MESSAGE_DELETE_PERSON_CANCEL;","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"        DeletePersonCommand o \u003d (DeletePersonCommand) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"        return (this.targetIndex.equals(o.targetIndex));","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"    public String toString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"            .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"            .toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"leeweiming3":82}},{"path":"src/main/java/seedu/hirehub/logic/commands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":" * Deletes tags from an existing person in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"    public static final String COMMAND_WORD \u003d \"delete_tag\";","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"            + \": Deletes tags from the person identified \"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"            + \"At least one tag must be present. All tags specified will be removed.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"            + PREFIX_TAG + \"TAG \"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"            + PREFIX_TAG + \"INTERNAL \" + PREFIX_TAG + \"WAITLIST\";","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Removed tags from Person: %1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_TAG_NOT_PRESENT \u003d \"At least one tag specified is not present on the person.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"    private final Index index;","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"     * @param index of the person in the filtered person list to edit the comment","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"     * @param tags to be removed from the person","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"    public DeleteTagCommand(Index index, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"        requireAllNonNull(index, tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"        Set\u003cTag\u003e newTagList \u003d new HashSet\u003c\u003e(personToEdit.getTags());","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"        for (Tag t : tags) {","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"            if (newTagList.contains(t)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"                newTagList.remove(t);","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"            } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"                throw new CommandException(DeleteTagCommand.MESSAGE_TAG_NOT_PRESENT);","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"                personToEdit.getCountry(), personToEdit.getComment(), newTagList);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TAG_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"leeweiming3"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"leeweiming3"},"content":"        if (!(other instanceof DeleteTagCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"leeweiming3"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"leeweiming3"},"content":"        DeleteTagCommand otherDeleteTagCommand \u003d (DeleteTagCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"leeweiming3"},"content":"        return index.equals(otherDeleteTagCommand.index)","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"leeweiming3"},"content":"                \u0026\u0026 tags.equals(otherDeleteTagCommand.tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"leeweiming3":93,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Comment;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"            + \"[\" + PREFIX_COUNTRY + \"COUNTRY] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"    public static final String STATUS_CANNOT_BE_EDITED \u003d \"Status of candidates cannot be edited via edit method.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"            + \"Please use status command instead in order to update recruitment status for candidates.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"    public static final String COMMENT_CANNOT_BE_EDITED \u003d \"Comment on candidates cannot be edited via edit method.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"            + \"Please use comment command instead in order to update comment on individual candidates.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"        model.replaceApplications(personToEdit, editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"        Country updatedCountry \u003d editPersonDescriptor.getCountry().orElse(personToEdit.getCountry());","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"        Comment updatedComment \u003d personToEdit.getComment(); // edit command does not allow editing commands","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedCountry,","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"                updatedComment, updatedTags);","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"chiralcentre"},"content":"        private Country country;","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"chiralcentre"},"content":"            setCountry(toCopy.country);","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"chiralcentre"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, country, tags);","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"chiralcentre"},"content":"        public void setCountry(Country country) {","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"chiralcentre"},"content":"            this.country \u003d country;","lastModifiedDate":"2024-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"chiralcentre"},"content":"        public Optional\u003cCountry\u003e getCountry() {","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"chiralcentre"},"content":"            return Optional.ofNullable(country);","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":235,"author":{"gitId":"chiralcentre"},"content":"                    \u0026\u0026 Objects.equals(country, otherEditPersonDescriptor.country)","lastModifiedDate":"2024-03-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"chiralcentre"},"content":"                    .add(\"country\", country)","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"acekhoon":5,"-":211,"logical-1985516":1,"chiralcentre":33}},{"path":"src/main/java/seedu/hirehub/logic/commands/EditJobCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_VACANCY;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_JOBS;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":" * Edits the details of an existing job in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"public class EditJobCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"    public static final String COMMAND_WORD \u003d \"edit_job\";","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the job identified \"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"            + \"by the index number used in the displayed job list. \"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"            + \"[\" + PREFIX_VACANCY + \"VACANCY] \";","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_EDIT_JOB_SUCCESS \u003d \"Edited Job: %1$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_DUPLICATE_JOB \u003d \"This job already exists in the address book.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_CANNOT_CHANGE_VACANCY \u003d \"The vacancy for this job cannot be changed to %1$d \"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"            + \"because the number of accepted applications is currently %2$d.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"    private final Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"    private final EditJobDescriptor editJobDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"     * @param index of the job in the filtered job list to edit","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"     * @param editJobDescriptor details to edit the job with","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"    public EditJobCommand(Index index, EditJobDescriptor editJobDescriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(editJobDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"        this.editJobDescriptor \u003d new EditJobDescriptor(editJobDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"        List\u003cJob\u003e lastShownList \u003d model.getFilteredJobList();","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"        Job jobToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"        Job editedJob \u003d createEditedJob(jobToEdit, editJobDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"        if (!jobToEdit.isSameJob(editedJob) \u0026\u0026 model.hasJob(editedJob)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"        // check if the vacancy can be changed","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"        int acceptedApplications \u003d model.countAccepted(jobToEdit);","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"        int editedVacancy \u003d editedJob.getVacancy();","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"chiralcentre"},"content":"        if (acceptedApplications \u003e editedVacancy) {","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"            throw new CommandException(String.format(MESSAGE_CANNOT_CHANGE_VACANCY,","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"                    editedVacancy, acceptedApplications));","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"        model.setJob(jobToEdit, editedJob);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"chiralcentre"},"content":"        model.updateFilteredJobList(PREDICATE_SHOW_ALL_JOBS);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"chiralcentre"},"content":"        model.replaceApplications(jobToEdit, editedJob);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"chiralcentre"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_JOB_SUCCESS, Messages.format(editedJob)));","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"chiralcentre"},"content":"     * Creates and returns a {@code Job} with the details of {@code jobToEdit}","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"chiralcentre"},"content":"     * edited with {@code editJobDescriptor}.","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"chiralcentre"},"content":"    private static Job createEditedJob(Job jobToEdit, EditJobDescriptor editJobDescriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"chiralcentre"},"content":"        assert jobToEdit !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"chiralcentre"},"content":"        String updatedTitle \u003d editJobDescriptor.getTitle().orElse(jobToEdit.getTitle());","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"chiralcentre"},"content":"        String updatedDescription \u003d editJobDescriptor.getDescription().orElse(jobToEdit.getDescription());","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"chiralcentre"},"content":"        int updatedVacancy \u003d editJobDescriptor.getVacancy().orElse(jobToEdit.getVacancy());","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"chiralcentre"},"content":"        return new Job(updatedTitle, updatedDescription, updatedVacancy);","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"chiralcentre"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"chiralcentre"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"chiralcentre"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"        if (!(other instanceof EditJobCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"        EditJobCommand otherEditJobCommand \u003d (EditJobCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"        return index.equals(otherEditJobCommand.index)","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"chiralcentre"},"content":"                \u0026\u0026 editJobDescriptor.equals(otherEditJobCommand.editJobDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"chiralcentre"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"chiralcentre"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"chiralcentre"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"chiralcentre"},"content":"                .add(\"editJobDescriptor\", editJobDescriptor)","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"chiralcentre"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"chiralcentre"},"content":"     * Stores the details to edit the job with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"chiralcentre"},"content":"     * corresponding field value of the job.","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"chiralcentre"},"content":"    public static class EditJobDescriptor {","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"chiralcentre"},"content":"        private String title;","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"chiralcentre"},"content":"        private String description;","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"chiralcentre"},"content":"        private Integer vacancy;","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"chiralcentre"},"content":"        public EditJobDescriptor() {}","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"chiralcentre"},"content":"        /**","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"chiralcentre"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"chiralcentre"},"content":"         */","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"chiralcentre"},"content":"        public EditJobDescriptor(EditJobDescriptor toCopy) {","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"chiralcentre"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"chiralcentre"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"chiralcentre"},"content":"            setVacancy(toCopy.vacancy);","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"chiralcentre"},"content":"        /**","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"chiralcentre"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"chiralcentre"},"content":"         */","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"chiralcentre"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"chiralcentre"},"content":"            return CollectionUtil.isAnyNonNull(title, description, vacancy);","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"chiralcentre"},"content":"        public void setTitle(String title) {","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"chiralcentre"},"content":"            this.title \u003d title;","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"chiralcentre"},"content":"        public Optional\u003cString\u003e getTitle() {","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"chiralcentre"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"chiralcentre"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"chiralcentre"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"chiralcentre"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"chiralcentre"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"chiralcentre"},"content":"        public void setVacancy(Integer vacancy) {","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"chiralcentre"},"content":"            this.vacancy \u003d vacancy;","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"chiralcentre"},"content":"        public Optional\u003cInteger\u003e getVacancy() {","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"chiralcentre"},"content":"            return Optional.ofNullable(vacancy);","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"chiralcentre"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"chiralcentre"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"chiralcentre"},"content":"                return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"chiralcentre"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"chiralcentre"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"chiralcentre"},"content":"            if (!(other instanceof EditJobDescriptor)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"chiralcentre"},"content":"                return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"chiralcentre"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"chiralcentre"},"content":"            EditJobDescriptor otherEditJobDescriptor \u003d (EditJobDescriptor) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"chiralcentre"},"content":"            return Objects.equals(title, otherEditJobDescriptor.title)","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"chiralcentre"},"content":"                    \u0026\u0026 Objects.equals(description, otherEditJobDescriptor.description)","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"chiralcentre"},"content":"                    \u0026\u0026 Objects.equals(vacancy, otherEditJobDescriptor.vacancy);","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"chiralcentre"},"content":"        public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"chiralcentre"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"chiralcentre"},"content":"                    .add(\"title\", title)","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"chiralcentre"},"content":"                    .add(\"description\", description)","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"chiralcentre"},"content":"                    .add(\"vacancy\", vacancy)","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"chiralcentre"},"content":"                    .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"chiralcentre":202}},{"path":"src/main/java/seedu/hirehub/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":17,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/logic/commands/GetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":" * Retrieves candidate at specified index.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"public class GetCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    public static final String COMMAND_WORD \u003d \"get\";","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds a candidate at the specified \"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"            + \"entry in the database displayed in the HireHub application\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_GET_PERSON_SUCCESS \u003d \"Candidate listed at entry number %1$d is successfully\"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"            + \" retrieved!\";","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    private final Index index;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"     * Creates a GetCommand to retrieve the candidate at specified index","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    public GetCommand(Index index) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"        Person personToGet \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e personToGet.equals(x);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"        return new CommandResult(String.format(MESSAGE_GET_PERSON_SUCCESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"                index.getOneBased()));","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"        if (!(other instanceof GetCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"        GetCommand otherGetCommand \u003d (GetCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"        return index.equals(otherGetCommand.index);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"acekhoon":71,"logical-1985516":1,"chiralcentre":7}},{"path":"src/main/java/seedu/hirehub/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/logic/commands/ListApplicationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_APPLICATIONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":" * Lists all applications in the address book to the user.","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"public class ListApplicationCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"    public static final String COMMAND_WORD \u003d \"list_app\";","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all available applications from the list!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        model.updateFilteredApplicationList(PREDICATE_SHOW_ALL_APPLICATIONS);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"acekhoon":23,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":21,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/logic/commands/ListJobCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_JOBS;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":" * Lists all jobs in the address book to the user.","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"public class ListJobCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"    public static final String COMMAND_WORD \u003d \"list_job\";","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all available jobs from the list!\";","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"        model.updateFilteredJobList(PREDICATE_SHOW_ALL_JOBS);","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"chiralcentre":23}},{"path":"src/main/java/seedu/hirehub/logic/commands/SearchApplicationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.person.SearchPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":" * Searches all applications whose attributes match the specified attributes.","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"public class SearchApplicationCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    public static final String COMMAND_WORD \u003d \"search_app\";","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all applications whose attributes match all \"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"            + \"the corresponding specified attributes.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"            + \"Parameters: [\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS]\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"            + PREFIX_TITLE + \"Software Engineer \"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"            + PREFIX_STATUS + \"IN_PROGRESS\";","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_NO_FIELD_PROVIDED \u003d \"At least one field to search for must be provided.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"    private final SearchPredicate\u003cApplication\u003e searchPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"    public SearchApplicationCommand(SearchPredicate\u003cApplication\u003e searchPredicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        this.searchPredicate \u003d searchPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        model.updateFilteredApplicationList(searchPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"                String.format(Messages.MESSAGE_APPLICATIONS_LISTED_OVERVIEW,","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"                        model.getFilteredApplicationList().size())","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"logical-1985516":48}},{"path":"src/main/java/seedu/hirehub/logic/commands/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Comment;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.SearchPredicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":" * Searches all persons whose attributes match the specified attributes.","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose attributes match all \"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"            + \"the corresponding specified attributes.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"            + \"For phone number, email and country, only full words will be matched,\\n\"","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"            + \"while for name, comment and tags, partial words will be matched.\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"            + \"Parameters: [\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_COUNTRY + \"COUNTRY] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_COMMENT + \"COMMENT] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_NO_FIELD_PROVIDED \u003d \"At least one field to search for must be provided.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"    private final SearchPersonDescriptor searchPersonDescriptor;","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"    public SearchCommand(SearchPersonDescriptor searchPersonDescriptor) {","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        this.searchPersonDescriptor \u003d searchPersonDescriptor;","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"        model.updateFilteredPersonList(searchPersonDescriptor.getPredicate());","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"        if (!(other instanceof seedu.hirehub.logic.commands.SearchCommand)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand otherSearchCommand \u003d (SearchCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"        return searchPersonDescriptor.equals(otherSearchCommand.searchPersonDescriptor);","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"                .add(\"searchPersonDescriptor\", searchPersonDescriptor.toString())","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"                .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"     * Stores the details to search the person with. Each non-empty field value will search the","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"    public static class SearchPersonDescriptor {","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"        private Name name;","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"        private Phone phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"        private Email email;","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"        private Country country;","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"        private Comment comment;","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"        public SearchPersonDescriptor() {}","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"        public void setCountry(Country country) {","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"            this.country \u003d country;","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"        public Optional\u003cCountry\u003e getCountry() {","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"            return Optional.ofNullable(country);","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"        public void setComment(Comment comment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"            this.comment \u003d comment;","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"logical-1985516"},"content":"        public Optional\u003cComment\u003e getComment() {","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"            return Optional.ofNullable(comment);","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"logical-1985516"},"content":"        /**","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"logical-1985516"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"logical-1985516"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"logical-1985516"},"content":"         */","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"logical-1985516"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"logical-1985516"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"logical-1985516"},"content":"        /**","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"logical-1985516"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"logical-1985516"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"logical-1985516"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"logical-1985516"},"content":"         */","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"logical-1985516"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"logical-1985516"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"logical-1985516"},"content":"        public SearchPredicate\u003cPerson\u003e getPredicate() {","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"logical-1985516"},"content":"            ArrayList\u003cContainsKeywordsPredicate\u003cPerson, ?\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cPerson, Name\u003e nameSearch \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_NAME, this.getName());","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(nameSearch);","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cPerson, Phone\u003e phoneSearch \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_PHONE, this.getPhone());","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(phoneSearch);","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cPerson, Email\u003e emailSearch \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_EMAIL, this.getEmail());","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(emailSearch);","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cPerson, Country\u003e countrySearch \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_COUNTRY, this.getCountry());","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(countrySearch);","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cPerson, Comment\u003e commentSearch \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_COMMENT, this.getComment());","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(commentSearch);","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cPerson, Set\u003cTag\u003e\u003e tagSearch \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_TAG, this.getTags());","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(tagSearch);","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"logical-1985516"},"content":"            return new SearchPredicate\u003c\u003e(predicateList);","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"logical-1985516"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"logical-1985516"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"logical-1985516"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"logical-1985516"},"content":"                return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"logical-1985516"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"logical-1985516"},"content":"            if (!(other instanceof SearchCommand.SearchPersonDescriptor)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"logical-1985516"},"content":"                return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"logical-1985516"},"content":"            SearchCommand.SearchPersonDescriptor otherSearchPersonDescriptor \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"logical-1985516"},"content":"                    (SearchCommand.SearchPersonDescriptor) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"logical-1985516"},"content":"            return Objects.equals(name, otherSearchPersonDescriptor.name)","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"logical-1985516"},"content":"                    \u0026\u0026 Objects.equals(phone, otherSearchPersonDescriptor.phone)","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"logical-1985516"},"content":"                    \u0026\u0026 Objects.equals(email, otherSearchPersonDescriptor.email)","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"logical-1985516"},"content":"                    \u0026\u0026 Objects.equals(country, otherSearchPersonDescriptor.country)","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"logical-1985516"},"content":"                    \u0026\u0026 Objects.equals(comment, otherSearchPersonDescriptor.comment)","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"logical-1985516"},"content":"                    \u0026\u0026 Objects.equals(tags, otherSearchPersonDescriptor.tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"logical-1985516"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"logical-1985516"},"content":"        public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"logical-1985516"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-16"},{"lineNumber":207,"author":{"gitId":"logical-1985516"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"logical-1985516"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"logical-1985516"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"logical-1985516"},"content":"                    .add(\"country\", country)","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"logical-1985516"},"content":"                    .add(\"comment\", comment)","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"logical-1985516"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"logical-1985516"},"content":"                    .toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":215,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":216,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"logical-1985516":197,"chiralcentre":19}},{"path":"src/main/java/seedu/hirehub/logic/commands/SearchJobCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_VACANCY;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.person.SearchPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":" * Searches all jobs whose attributes match the specified attributes.","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"public class SearchJobCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    public static final String COMMAND_WORD \u003d \"search_job\";","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all jobs whose attributes match all \"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"            + \"the corresponding specified attributes.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"            + \"Parameters: [\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_VACANCY + \"VACANCY]\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"            + PREFIX_TITLE + \"ML \"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"            + PREFIX_DESCRIPTION + \"C++ \"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"            + PREFIX_VACANCY + \"10\";","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_NO_FIELD_PROVIDED \u003d \"At least one field to search for must be provided.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"    private final SearchPredicate\u003cJob\u003e searchPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"    public SearchJobCommand(SearchPredicate\u003cJob\u003e searchPredicate) {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        this.searchPredicate \u003d searchPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        model.updateFilteredJobList(searchPredicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"                String.format(Messages.MESSAGE_JOBS_LISTED_OVERVIEW,","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"                        model.getFilteredJobList().size())","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        );","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"logical-1985516":48}},{"path":"src/main/java/seedu/hirehub/logic/commands/SlotsLeftCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":" * Finds the remaining vacancies of a job","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"public class SlotsLeftCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    public static final String COMMAND_WORD \u003d \"slots_left\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Retrieves the number of slots left for the selected\"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"            + \" job computed by subtracting the number of accepted candidates from total vacancies \\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"            + \"Parameters: INDEX (index of the job displayed in the job list which must be a positive integer)\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    public static final String SLOTS_LEFT_SUCCESS \u003d \"There are %1$d vacancies left for job \\\"%2$s\\\"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    private final Index index;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    public SlotsLeftCommand(Index index) {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"        List\u003cJob\u003e lastShownJobList \u003d model.getFilteredJobList();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownJobList.size()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_JOB_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        Job jobToFindVacancy \u003d model.getFilteredJobList().get(index.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"        int vacancyLeft \u003d model.countRemainingVacancy(jobToFindVacancy.getTitle());","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"        return new CommandResult(String.format(SLOTS_LEFT_SUCCESS, vacancyLeft, jobToFindVacancy.getTitle()));","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"        if (!(other instanceof SlotsLeftCommand)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"        return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"                .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"acekhoon":65,"logical-1985516":1}},{"path":"src/main/java/seedu/hirehub/logic/commands/StatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_APPLICATIONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":" * Updates recruitment status of an application in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"public class StatusCommand extends Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    public static final String COMMAND_WORD \u003d \"status\";","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Update status for an application within \"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"            + \"the application list to one of the following 5 statuses:\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            + \"PRESCREEN, IN_PROGRESS, WAITLIST, OFFERED, REJECTED\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"            + \"Parameters: INDEX (must be a positive integer) STATUS\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"            + \"OFFERED\";","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_STATUS_PERSON_SUCCESS \u003d \"Status of application successfully \"","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"            + \"updated to %1$s\";","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"    public static final String MESSAGE_DUPLICATE_STATUS \u003d \"This application with identical recruitment status %1$s \"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"            + \"already exists in the application list\";","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_EXCEEDS_VACANCY \u003d \"The number of accepted candidates already meets the\"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"            + \" stipulated vacancy.\\nTo accept more candidates, the vacancy for the job can be increased via the\"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"            + \" edit_job command, or change status for existing application(s) to this job via status command to\"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"            + \" a status other than OFFERED.\\nYou can retrieve vacancies left via slots_left command\";","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    private final Index index;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"    private final Status status;","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"     * Creates an StatusCommand to update the candidate status for specified {@code Person}","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"    public StatusCommand(Index index, Status status) {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"        List\u003cApplication\u003e lastShownApplicationList \u003d model.getFilteredApplicationList();","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownApplicationList.size()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICATION_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"        Application applicationToUpdate \u003d lastShownApplicationList.get(index.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"        if (status.equals(applicationToUpdate.status)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_STATUS, status));","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"        if (status.equals(new Status(\"OFFERED\"))","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 model.countRemainingVacancy(applicationToUpdate.getJob().getTitle()) \u003c\u003d 0) {","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"            throw new CommandException(MESSAGE_EXCEEDS_VACANCY);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"        Application editedApplication \u003d new Application(applicationToUpdate.getPerson(),","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"                applicationToUpdate.getJob(), status);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"        model.setApplication(applicationToUpdate, editedApplication);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"        model.updateFilteredApplicationList(PREDICATE_SHOW_ALL_APPLICATIONS);","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"        return new CommandResult(String.format(MESSAGE_STATUS_PERSON_SUCCESS, status));","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"        if (!(other instanceof StatusCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"        StatusCommand otherStatusCommand \u003d (StatusCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"        return index.equals(otherStatusCommand.index)","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"                \u0026\u0026 status.equals(otherStatusCommand.status);","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"                .add(\"status\", status)","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"                .toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"acekhoon":40,"logical-1985516":64}},{"path":"src/main/java/seedu/hirehub/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":" * Appends tags to an existing person in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"            + \": Adds tags to the person identified \"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"            + \"Existing tags will not be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"            + \"At least one tag must be present.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"            + PREFIX_TAG + \"TAG \"","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"            + PREFIX_TAG + \"INTERNAL \" + PREFIX_TAG + \"WAITLIST\";","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_ADD_TAGS_SUCCESS \u003d \"Added tags to Person: %1$s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"    private final Index index;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"     * @param index of the person in the filtered person list to edit the comment","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"     * @param tags  to be added to the person","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"    public TagCommand(Index index, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        requireAllNonNull(index, tags);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        Set\u003cTag\u003e newTagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"        newTagList.addAll(personToEdit.getTags());","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"        newTagList.addAll(tags);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"                personToEdit.getCountry(), personToEdit.getComment(), newTagList);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"        model.replaceApplications(personToEdit, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TAGS_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"leeweiming3"},"content":"        TagCommand otherTagCommand \u003d (TagCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"leeweiming3"},"content":"        return index.equals(otherTagCommand.index)","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"leeweiming3"},"content":"                \u0026\u0026 tags.equals(otherTagCommand.tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"acekhoon":1,"leeweiming3":75,"logical-1985516":2,"chiralcentre":10}},{"path":"src/main/java/seedu/hirehub/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands.exceptions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/logic/parser/AddApplicationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.AddApplicationCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":" * Parses input arguments and creates a new ApplicationCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"public class AddApplicationCommandParser implements Parser\u003cAddApplicationCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"     * Parses the given {@code String} of arguments in the context of the ApplicationCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"     * and returns an ApplicationCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    public AddApplicationCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EMAIL,","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"                PREFIX_TITLE, PREFIX_STATUS);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EMAIL, PREFIX_TITLE)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"                    AddApplicationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EMAIL, PREFIX_TITLE, PREFIX_STATUS);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"        String title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"            Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"            return new AddApplicationCommand(email, title, status);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"        return new AddApplicationCommand(email, title);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"acekhoon":53}},{"path":"src/main/java/seedu/hirehub/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COUNTRY, PREFIX_TAG);","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_COUNTRY, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COUNTRY);","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"        Country country \u003d ParserUtil.parseCountry(argMultimap.getValue(PREFIX_COUNTRY).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"        Person person \u003d new Person(name, phone, email, country, tagList);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":38,"chiralcentre":21}},{"path":"src/main/java/seedu/hirehub/logic/parser/AddJobCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_VACANCY;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.AddJobCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":" * Parses input arguments and creates a new AddJobCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"public class AddJobCommandParser implements Parser\u003cAddJobCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"     * Parses the given {@code String} of arguments in the context of the AddJobCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"     * and returns an AddJobCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"    public AddJobCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TITLE,","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"                PREFIX_DESCRIPTION, PREFIX_VACANCY);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_VACANCY) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddJobCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TITLE, PREFIX_DESCRIPTION, PREFIX_VACANCY);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"        String title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).orElse(\"\").trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"        int vacancy \u003d ParserUtil.parseVacancy(argMultimap.getValue(PREFIX_VACANCY).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"        Job job \u003d new Job(title, description, vacancy);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"        return new AddJobCommand(job);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"chiralcentre":47}},{"path":"src/main/java/seedu/hirehub/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.AddApplicationCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.AddJobCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.ClearCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.CommentCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.DeleteApplicationCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.DeleteJobCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.DeleteTagCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditJobCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.GetCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.ListApplicationCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.ListCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.ListJobCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.commands.SearchApplicationCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.SearchCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.commands.SearchJobCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.SlotsLeftCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.StatusCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.TagCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"            return new ClearCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        case SearchCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"            return new SearchCommandParser().parse(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"        case GetCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"            return new GetCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"        case StatusCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"            return new StatusCommandParser().parse(arguments);","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"chiralcentre"},"content":"        case CommentCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"            return new CommentCommandParser().parse(arguments);","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"leeweiming3"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"leeweiming3"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"leeweiming3"},"content":"        case DeleteTagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"leeweiming3"},"content":"            return new DeleteTagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"        case AddJobCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"            return new AddJobCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"chiralcentre"},"content":"        case EditJobCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"chiralcentre"},"content":"            return new EditJobCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"leeweiming3"},"content":"        case DeleteJobCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"leeweiming3"},"content":"            return new DeleteJobCommandParser().parse(arguments);","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"        case SearchJobCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"            return new SearchJobCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"acekhoon"},"content":"        case AddApplicationCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"acekhoon"},"content":"            return new AddApplicationCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"leeweiming3"},"content":"        case DeleteApplicationCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"leeweiming3"},"content":"            return new DeleteApplicationCommandParser().parse(arguments);","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"        case SearchApplicationCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"            return new SearchApplicationCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"acekhoon"},"content":"        case ListApplicationCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"acekhoon"},"content":"            return new ListApplicationCommand();","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"acekhoon"},"content":"        case SlotsLeftCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"acekhoon"},"content":"            return new SlotsLeftCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"chiralcentre"},"content":"        case ListJobCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"chiralcentre"},"content":"            return new ListJobCommand();","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"acekhoon":23,"leeweiming3":19,"-":65,"logical-1985516":10,"chiralcentre":28}},{"path":"src/main/java/seedu/hirehub/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":75,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"    public static final Prefix PREFIX_COUNTRY \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"    public static final Prefix PREFIX_COMMENT \u003d new Prefix(\"m/\");","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"ti/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"    public static final Prefix PREFIX_VACANCY \u003d new Prefix(\"v/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"acekhoon":1,"-":12,"chiralcentre":6}},{"path":"src/main/java/seedu/hirehub/logic/parser/CommentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.CommentCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Comment;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":" * Parses input arguments and creates a new CommentCommand object","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"public class CommentCommandParser implements Parser\u003cCommentCommand\u003e {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"    public CommentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"        String[] parsedIndexComment \u003d args.trim().split(\" \", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"        Index index;","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"            index \u003d ParserUtil.parseIndex(parsedIndexComment[0]);","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"                    CommentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        Comment comment \u003d new Comment(","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"                parsedIndexComment.length \u003d\u003d 1","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"                ? \"\"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"                : parsedIndexComment[1].trim()","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        );","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"        return new CommentCommand(index, comment);","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"logical-1985516":8,"chiralcentre":28}},{"path":"src/main/java/seedu/hirehub/logic/parser/ConfirmationStageParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_UNKNOWN_COMMAND_CLEAR_CONFIRMATION;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.Command;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.ConfirmableCommand;","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":" * Parses the user input when the user must confirm or deny a previous command.","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"public class ConfirmationStageParser {","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ConfirmationStageParser.class);","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"     * Commands to be run when the user chooses to confirm or deny respectively.","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"    private Command nextConfirmCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"    private Command nextDenyCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"     * @param userInput full user input string","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"     * @return the command based on the user input","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"        // log messages such as the one below.","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"        case \"Y\":","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"            return nextConfirmCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"        case \"N\":","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"            return nextDenyCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"        default:","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND_CLEAR_CONFIRMATION);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"     * Retrieves the commands to be run upon confirm or deny from the current one.","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"     * @param currentCommand command currently in confirmation stage","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"    public void setNextCommands(ConfirmableCommand currentCommand) {","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"        this.nextConfirmCommand \u003d currentCommand.whenConfirmed();","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"        this.nextDenyCommand \u003d currentCommand.whenDenied();","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"leeweiming3":72}},{"path":"src/main/java/seedu/hirehub/logic/parser/DeleteApplicationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.DeleteApplicationCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":" * Parses input arguments and creates a new DeleteApplicationCommand object","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"public class DeleteApplicationCommandParser implements Parser\u003cDeleteApplicationCommand\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteApplicationCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"     * and returns a DeleteApplicationCommand object for execution.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"    public DeleteApplicationCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"            return new DeleteApplicationCommand(index);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteApplicationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"acekhoon":23,"leeweiming3":7}},{"path":"src/main/java/seedu/hirehub/logic/parser/DeleteJobCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.DeleteJobCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":" * Parses input arguments and creates a new DeleteJobCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"public class DeleteJobCommandParser implements Parser\u003cDeleteJobCommand\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteJobCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"     * and returns a DeleteJobCommand object for execution.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"    public DeleteJobCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"            return new DeleteJobCommand(index);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteJobCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"leeweiming3":7,"chiralcentre":23}},{"path":"src/main/java/seedu/hirehub/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"acekhoon":21,"leeweiming3":9}},{"path":"src/main/java/seedu/hirehub/logic/parser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.DeleteTagCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":" * Parses input arguments and creates a new DeleteTagCommand object","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"        Index index;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"                    DeleteTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"        if (tagList.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"        return new DeleteTagCommand(index, tagList);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"leeweiming3":37}},{"path":"src/main/java/seedu/hirehub/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"                PREFIX_EMAIL, PREFIX_COUNTRY, PREFIX_STATUS, PREFIX_COMMENT, PREFIX_TAG);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COUNTRY);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(EditCommand.STATUS_CANNOT_BE_EDITED);","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        if (argMultimap.getValue(PREFIX_COMMENT).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(EditCommand.COMMENT_CANNOT_BE_EDITED);","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"        if (argMultimap.getValue(PREFIX_COUNTRY).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"            editPersonDescriptor.setCountry(ParserUtil.parseCountry(argMultimap.getValue(PREFIX_COUNTRY).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"acekhoon":9,"-":69,"chiralcentre":17}},{"path":"src/main/java/seedu/hirehub/logic/parser/EditJobCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_VACANCY;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditJobCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditJobCommand.EditJobDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":" * Parses input arguments and creates a new EditJobCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"public class EditJobCommandParser implements Parser\u003cEditJobCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"     * Parses the given {@code String} of arguments in the context of the EditJobCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"     * and returns an EditJobCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"    public EditJobCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TITLE,","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"                PREFIX_DESCRIPTION, PREFIX_VACANCY);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"        Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditJobCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TITLE, PREFIX_DESCRIPTION, PREFIX_VACANCY);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"        EditJobDescriptor editJobDescriptor \u003d new EditJobDescriptor();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"            editJobDescriptor.setTitle(ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get()));","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"            editJobDescriptor.setDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get().trim());","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"        if (argMultimap.getValue(PREFIX_VACANCY).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"            editJobDescriptor.setVacancy(ParserUtil.parseVacancy(argMultimap.getValue(PREFIX_VACANCY).get()));","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"        if (!editJobDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"            throw new ParseException(EditJobCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"        return new EditJobCommand(index, editJobDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"chiralcentre":57}},{"path":"src/main/java/seedu/hirehub/logic/parser/GetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.GetCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":" * Parses input arguments and creates a new GetCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"public class GetCommandParser implements Parser\u003cGetCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"     * Parses the given {@code String} of arguments in the context of the GetCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * and returns a GetCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    public GetCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"            return new GetCommand(index);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GetCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"acekhoon":24,"chiralcentre":5}},{"path":"src/main/java/seedu/hirehub/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":13,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.StringUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"     * Parses a {@code String country} into an {@code Country}.","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"    public static Country parseCountry(String country) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(country);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"chiralcentre"},"content":"        String trimmedCountry \u003d country.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"chiralcentre"},"content":"        if (!Country.isValidCountry(trimmedCountry)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"            throw new ParseException(Country.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"chiralcentre"},"content":"        return new Country(trimmedCountry);","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"acekhoon"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"acekhoon"},"content":"     * Parses a {@code String title} into an {@code String}.","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"acekhoon"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"acekhoon"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"acekhoon"},"content":"    public static String parseTitle(String title) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(title);","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"acekhoon"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"acekhoon"},"content":"        if (!Job.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(Job.TITLE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"acekhoon"},"content":"        return trimmedTitle;","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"acekhoon"},"content":"     * Parses a {@code String vacancy} into an {@code int}.","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"acekhoon"},"content":"     * @throws ParseException if the given {@code vacancy} is invalid.","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"acekhoon"},"content":"    public static int parseVacancy(String vacancy) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(vacancy);","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"acekhoon"},"content":"        String trimmedVacancy \u003d vacancy.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"acekhoon"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedVacancy)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(Job.VACANCY_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"acekhoon"},"content":"        return Integer.parseInt(trimmedVacancy);","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"acekhoon":48,"-":108,"chiralcentre":16}},{"path":"src/main/java/seedu/hirehub/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":41,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/logic/parser/SearchApplicationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.commands.SearchApplicationCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.person.SearchPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":" * Parses input arguments and creates a new SearchApplicationCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"public class SearchApplicationCommandParser implements Parser\u003cSearchApplicationCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    public SearchApplicationCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EMAIL, PREFIX_TITLE, PREFIX_STATUS);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"                    SearchApplicationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"            throw new ParseException(SearchApplicationCommand.MESSAGE_NO_FIELD_PROVIDED);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EMAIL, PREFIX_TITLE, PREFIX_STATUS);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        ArrayList\u003cContainsKeywordsPredicate\u003cApplication, ?\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cApplication, Email\u003e emailSearch \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_EMAIL, Optional.of(email));","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(emailSearch);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"            String title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cApplication, String\u003e titleSearch \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_TITLE, Optional.of(title));","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(titleSearch);","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"            Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cApplication, Status\u003e statusSearch \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_STATUS, Optional.of(status));","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(statusSearch);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"        return new SearchApplicationCommand(new SearchPredicate\u003c\u003e(predicateList));","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"logical-1985516":67}},{"path":"src/main/java/seedu/hirehub/logic/parser/SearchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.SearchCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.SearchCommand.SearchPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Comment;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":" * Parses input arguments and creates a new SearchCommand object","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"public class SearchCommandParser implements Parser\u003cSearchCommand\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"     * Parses the given {@code String} of arguments in the context of the SearchCommand","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"     * and returns a SearchCommand object for execution.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    public SearchCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COUNTRY,","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"                        PREFIX_COMMENT, PREFIX_TAG);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        String trimmedPreamble \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        if (!trimmedPreamble.equals(\"\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"            throw new ParseException(SearchCommand.MESSAGE_NO_FIELD_PROVIDED);","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COUNTRY,","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"                PREFIX_COMMENT, PREFIX_TAG);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor searchPersonDescriptor \u003d new SearchPersonDescriptor();","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"            searchPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"            searchPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"            searchPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_COUNTRY).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"            searchPersonDescriptor.setCountry(ParserUtil.parseCountry(argMultimap.getValue(PREFIX_COUNTRY).get()));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_COMMENT).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"            searchPersonDescriptor.setComment(new Comment(argMultimap.getValue(PREFIX_COMMENT).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"            searchPersonDescriptor.setTags(ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG)));","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"        return new SearchCommand(searchPersonDescriptor);","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"acekhoon":2,"logical-1985516":53,"chiralcentre":12}},{"path":"src/main/java/seedu/hirehub/logic/parser/SearchJobCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_VACANCY;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.commands.SearchJobCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.person.SearchPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":" * Parses input arguments and creates a new SearchJobCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"public class SearchJobCommandParser implements Parser\u003cSearchJobCommand\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    public SearchJobCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESCRIPTION, PREFIX_VACANCY);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"                    SearchJobCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"            throw new ParseException(SearchJobCommand.MESSAGE_NO_FIELD_PROVIDED);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TITLE, PREFIX_DESCRIPTION, PREFIX_VACANCY);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        ArrayList\u003cContainsKeywordsPredicate\u003cJob, ?\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"            String title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cJob, String\u003e titleSearch \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_TITLE, Optional.of(title));","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(titleSearch);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"            String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cJob, String\u003e descriptionSearch \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_DESCRIPTION, Optional.of(description));","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(descriptionSearch);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        if (argMultimap.getValue(PREFIX_VACANCY).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"            int vacancy \u003d ParserUtil.parseVacancy(argMultimap.getValue(PREFIX_VACANCY).get());","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"            ContainsKeywordsPredicate\u003cJob, Integer\u003e vacancySearch \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"                    new ContainsKeywordsPredicate\u003c\u003e(PREFIX_VACANCY, Optional.of(vacancy));","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"            predicateList.add(vacancySearch);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"        return new SearchJobCommand(new SearchPredicate\u003c\u003e(predicateList));","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"logical-1985516":66}},{"path":"src/main/java/seedu/hirehub/logic/parser/SlotsLeftCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.commands.SlotsLeftCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":" * Parses input arguments and creates a new SlotsLeftCommandParser object","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"public class SlotsLeftCommandParser implements Parser\u003cSlotsLeftCommand\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"     * Parses the given {@code String} of arguments in the context of the SlotsLeftCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"     * and returns a SlotsLeftCommand object for execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    public SlotsLeftCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"            return new SlotsLeftCommand(index);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SlotsLeftCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"acekhoon":30}},{"path":"src/main/java/seedu/hirehub/logic/parser/StatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.StatusCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":" * Parses input arguments and creates a new StatusCommand object","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"public class StatusCommandParser implements Parser\u003cStatusCommand\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"     * Parses the given {@code String} of arguments in the context of the StatusCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * and returns a StatusCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    public StatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"        String[] parsedIndexStatus \u003d args.trim().split(\" \", 2);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"        if (parsedIndexStatus.length !\u003d 2) {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"                    StatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        Index index;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"            index \u003d ParserUtil.parseIndex(parsedIndexStatus[0]);","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"                    StatusCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        Status status \u003d ParserUtil.parseStatus(parsedIndexStatus[1]);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        return new StatusCommand(index, status);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"acekhoon":30,"logical-1985516":7,"chiralcentre":4}},{"path":"src/main/java/seedu/hirehub/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.TagCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":" * Parses input arguments and creates a new TagCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"        Index index;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"                    TagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"        if (tagList.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"        return new TagCommand(index, tagList);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"leeweiming3":30,"chiralcentre":7}},{"path":"src/main/java/seedu/hirehub/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser.exceptions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.UniquePersonList;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":126,"chiralcentre":4}},{"path":"src/main/java/seedu/hirehub/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    Predicate\u003cJob\u003e PREDICATE_SHOW_ALL_JOBS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    Predicate\u003cApplication\u003e PREDICATE_SHOW_ALL_APPLICATIONS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"    Path getJobsFilePath();","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"    void setJobsFilePath(Path jobsFilePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"0liverkong"},"content":"    void setLastMentionedPerson(Person p);","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"0liverkong"},"content":"    Optional\u003cPerson\u003e getLastMentionedPerson();","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"     * Returns true if an application with the same identity as {@code application} exists in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"    boolean hasApplication(Application application);","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"acekhoon"},"content":"     * Deletes the given application.","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"acekhoon"},"content":"     * The application must exist in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"    void deleteApplication(Application target);","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"acekhoon"},"content":"     * Adds the given application.","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"acekhoon"},"content":"     * {@code application} must not already exist in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"acekhoon"},"content":"    void addApplication(Application application);","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"acekhoon"},"content":"     * Replaces the given application {@code target} with {@code editedApplication}.","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"acekhoon"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"acekhoon"},"content":"     * The application identity of {@code editedApplication} must not be the same as another","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"acekhoon"},"content":"     * existing application in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"    void setApplication(Application target, Application editedApplication);","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"    UniqueApplicationList getApplicationList();","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"    /* Updates all applications in application list with current person to new person */","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"    void replaceApplications(Person target, Person editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"    /* Updates all applications in application list with current job to new job */","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"    void replaceApplications(Job target, Job editedJob);","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"    /* Removes all applications in application list with target person */","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"    void removeApplications(Person target);","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"    /* Removes all applications in application list with target job */","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"logical-1985516"},"content":"    void removeApplications(Job target);","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"    /* Clears all applications in the model */","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"    void clearApplications();","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"acekhoon"},"content":"    /** Returns a number of initial vacancy for the given job */","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"chiralcentre"},"content":"    int countVacancy(Job jobToFind);","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"chiralcentre"},"content":"    /** Returns number of accepted applications for the given job*/","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"chiralcentre"},"content":"    int countAccepted(Job jobToFind);","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"acekhoon"},"content":"    /** Returns a number of remaining vacancy left for the given job */","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"acekhoon"},"content":"    int countRemainingVacancy(String jobTitle);","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"acekhoon"},"content":"    /** Returns an unmodifiable view of the filtered application list */","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"acekhoon"},"content":"    ObservableList\u003cApplication\u003e getFilteredApplicationList();","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"acekhoon"},"content":"    public void setLastMentionedApplication(Application app);","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"acekhoon"},"content":"    public Optional\u003cApplication\u003e getLastMentionedApplication();","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"chiralcentre"},"content":"    UniqueJobList getJobList();","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"acekhoon"},"content":"     * Returns true if a job with the same identity as {@code job} exists in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"acekhoon"},"content":"    boolean hasJob(Job job);","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"acekhoon"},"content":"     * Deletes the given job.","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"acekhoon"},"content":"     * The job must exist in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"acekhoon"},"content":"    void deleteJob(Job target);","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"acekhoon"},"content":"     * Adds the given job.","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"acekhoon"},"content":"     * {@code job} must not already exist in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"acekhoon"},"content":"    void addJob(Job job);","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"acekhoon"},"content":"     * Replaces the given job {@code target} with {@code editedJob}.","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"acekhoon"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"acekhoon"},"content":"     * The job identity of {@code editedJob} must not be the same as another existing job in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"acekhoon"},"content":"    void setJob(Job target, Job editedJob);","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"chiralcentre"},"content":"    void setLastMentionedJob(Job job);","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"chiralcentre"},"content":"    Optional\u003cJob\u003e getLastMentionedJob();","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"acekhoon"},"content":"    /** Returns an unmodifiable view of the filtered job list */","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"acekhoon"},"content":"    ObservableList\u003cJob\u003e getFilteredJobList();","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"acekhoon"},"content":"     * Updates the filter of the filtered job list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"acekhoon"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"acekhoon"},"content":"    void updateFilteredJobList(Predicate\u003cJob\u003e predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"acekhoon"},"content":"     * Updates the filter of the filtered application list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"acekhoon"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"acekhoon"},"content":"    void updateFilteredApplicationList(Predicate\u003cApplication\u003e predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"0liverkong":5,"acekhoon":84,"-":84,"logical-1985516":14,"chiralcentre":22}},{"path":"src/main/java/seedu/hirehub/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"    private Optional\u003cPerson\u003e lastMentionedPerson;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    private final UniqueJobList jobList;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    private final FilteredList\u003cJob\u003e filteredJobs;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"    private Optional\u003cJob\u003e lastMentionedJob;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    private Optional\u003cApplication\u003e lastMentionedApplication;","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"    private final UniqueApplicationList applicationList;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    private final FilteredList\u003cApplication\u003e filteredApplications;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"     * Initializes a ModelManager with the given addressBook, userPrefs, and jobList.","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, UniqueJobList jobList, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"                        UniqueApplicationList applicationList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"        lastMentionedPerson \u003d Optional.\u003cPerson\u003eempty();","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"        this.jobList \u003d jobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"        filteredJobs \u003d new FilteredList\u003c\u003e(jobList.asUnmodifiableObservableList());","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"        lastMentionedJob \u003d Optional.\u003cJob\u003eempty();","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        this.applicationList \u003d applicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"        lastMentionedApplication \u003d Optional.\u003cApplication\u003eempty();","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"        filteredApplications \u003d new FilteredList\u003c\u003e(applicationList.asUnmodifiableObservableList());","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"        this(new AddressBook(), new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"chiralcentre"},"content":"    public Path getJobsFilePath() {","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"chiralcentre"},"content":"        return userPrefs.getJobsFilePath();","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"    public void setJobsFilePath(Path jobsFilePath) {","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(jobsFilePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"        userPrefs.setJobsFilePath(jobsFilePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"0liverkong"},"content":"    public void setLastMentionedPerson(Person p) {","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"0liverkong"},"content":"        lastMentionedPerson \u003d Optional.of(p);","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"0liverkong"},"content":"    public Optional\u003cPerson\u003e getLastMentionedPerson() {","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"0liverkong"},"content":"        return lastMentionedPerson;","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"acekhoon"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d JobList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"chiralcentre"},"content":"    public UniqueJobList getJobList() {","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"chiralcentre"},"content":"        return this.jobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"acekhoon"},"content":"    public boolean hasJob(Job job) {","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(job);","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"acekhoon"},"content":"        return jobList.containsJob(job);","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"acekhoon"},"content":"    public void deleteJob(Job target) {","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"acekhoon"},"content":"        jobList.removeJob(target);","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"acekhoon"},"content":"    public void addJob(Job job) {","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"acekhoon"},"content":"        jobList.addJob(job);","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"acekhoon"},"content":"        updateFilteredJobList(PREDICATE_SHOW_ALL_JOBS);","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"acekhoon"},"content":"    public void setJob(Job target, Job editedJob) {","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"acekhoon"},"content":"        requireAllNonNull(target, editedJob);","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"acekhoon"},"content":"        jobList.setJob(target, editedJob);","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"chiralcentre"},"content":"    public void setLastMentionedJob(Job job) {","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"chiralcentre"},"content":"        lastMentionedJob \u003d Optional.of(job);","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"chiralcentre"},"content":"    public Optional\u003cJob\u003e getLastMentionedJob() {","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"chiralcentre"},"content":"        return lastMentionedJob;","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"acekhoon"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Job List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"acekhoon"},"content":"     * Returns an unmodifiable view of the list of {@code Job} backed by the internal list of","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"acekhoon"},"content":"     * {@code UniqueJobList}","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"acekhoon"},"content":"    public ObservableList\u003cJob\u003e getFilteredJobList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"acekhoon"},"content":"        return filteredJobs;","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"acekhoon"},"content":"    public void updateFilteredJobList(Predicate\u003cJob\u003e predicate) {","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":232,"author":{"gitId":"acekhoon"},"content":"        filteredJobs.setPredicate(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":233,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"acekhoon"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ApplicationList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":238,"author":{"gitId":"acekhoon"},"content":"    public boolean hasApplication(Application application) {","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(application);","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"acekhoon"},"content":"        return applicationList.containsApplication(application);","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":244,"author":{"gitId":"acekhoon"},"content":"    public void deleteApplication(Application target) {","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"acekhoon"},"content":"        applicationList.removeApplication(target);","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":247,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":248,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":249,"author":{"gitId":"acekhoon"},"content":"    public void addApplication(Application application) {","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"acekhoon"},"content":"        applicationList.addApplication(application);","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"acekhoon"},"content":"        updateFilteredApplicationList(PREDICATE_SHOW_ALL_APPLICATIONS);","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":255,"author":{"gitId":"acekhoon"},"content":"    public void setApplication(Application target, Application editedApplication) {","lastModifiedDate":"2024-03-27"},{"lineNumber":256,"author":{"gitId":"acekhoon"},"content":"        requireAllNonNull(target, editedApplication);","lastModifiedDate":"2024-03-27"},{"lineNumber":257,"author":{"gitId":"acekhoon"},"content":"        applicationList.setApplication(target, editedApplication);","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":259,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":260,"author":{"gitId":"logical-1985516"},"content":"    public UniqueApplicationList getApplicationList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":261,"author":{"gitId":"logical-1985516"},"content":"        return applicationList;","lastModifiedDate":"2024-03-30"},{"lineNumber":262,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":263,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":264,"author":{"gitId":"logical-1985516"},"content":"    /* Updates all applications in application list with current person to new person */","lastModifiedDate":"2024-03-30"},{"lineNumber":265,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"logical-1985516"},"content":"    public void replaceApplications(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"chiralcentre"},"content":"        List\u003cApplication\u003e applications \u003d new ArrayList\u003cApplication\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"chiralcentre"},"content":"        for (Application app : applicationList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"logical-1985516"},"content":"            if (app.getPerson().equals(target)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"logical-1985516"},"content":"                applications.add(new Application(editedPerson, app.getJob(), app.getStatus()));","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"chiralcentre"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"chiralcentre"},"content":"                applications.add(app);","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"chiralcentre"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"chiralcentre"},"content":"        applicationList.setApplications(applications);","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"logical-1985516"},"content":"    /* Updates all applications in application list with current job to new job */","lastModifiedDate":"2024-03-30"},{"lineNumber":279,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"logical-1985516"},"content":"    public void replaceApplications(Job target, Job editedJob) {","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"chiralcentre"},"content":"        List\u003cApplication\u003e applications \u003d new ArrayList\u003cApplication\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"chiralcentre"},"content":"        for (Application app: applicationList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"logical-1985516"},"content":"            if (app.getJob().equals(target)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"logical-1985516"},"content":"                applications.add(new Application(app.getPerson(), editedJob, app.getStatus()));","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"chiralcentre"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"chiralcentre"},"content":"                applications.add(app);","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"chiralcentre"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"chiralcentre"},"content":"        applicationList.setApplications(applications);","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":293,"author":{"gitId":"chiralcentre"},"content":"    public int countVacancy(Job jobToFind) {","lastModifiedDate":"2024-03-31"},{"lineNumber":294,"author":{"gitId":"acekhoon"},"content":"        for (Job job : jobList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":295,"author":{"gitId":"acekhoon"},"content":"            if (job.isSameJob(jobToFind)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":296,"author":{"gitId":"acekhoon"},"content":"                return job.getVacancy();","lastModifiedDate":"2024-03-30"},{"lineNumber":297,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":298,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":299,"author":{"gitId":"acekhoon"},"content":"        return 0;","lastModifiedDate":"2024-03-30"},{"lineNumber":300,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":301,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":302,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":303,"author":{"gitId":"chiralcentre"},"content":"    public int countAccepted(Job jobToFind) {","lastModifiedDate":"2024-03-31"},{"lineNumber":304,"author":{"gitId":"acekhoon"},"content":"        int countAccepted \u003d 0;","lastModifiedDate":"2024-03-30"},{"lineNumber":305,"author":{"gitId":"acekhoon"},"content":"        for (Application app : applicationList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":306,"author":{"gitId":"acekhoon"},"content":"            if (app.getJob().isSameJob(jobToFind) \u0026\u0026 app.getStatus().equals(new Status(\"OFFERED\"))) {","lastModifiedDate":"2024-04-01"},{"lineNumber":307,"author":{"gitId":"acekhoon"},"content":"                countAccepted +\u003d 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":308,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":309,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":310,"author":{"gitId":"chiralcentre"},"content":"        return countAccepted;","lastModifiedDate":"2024-03-31"},{"lineNumber":311,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":312,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":313,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":314,"author":{"gitId":"chiralcentre"},"content":"    public int countRemainingVacancy(String jobTitle) {","lastModifiedDate":"2024-03-31"},{"lineNumber":315,"author":{"gitId":"chiralcentre"},"content":"        Job jobToFind \u003d new Job(jobTitle, \"\", 1);","lastModifiedDate":"2024-03-31"},{"lineNumber":316,"author":{"gitId":"chiralcentre"},"content":"        int countVacancy \u003d countVacancy(jobToFind);","lastModifiedDate":"2024-03-31"},{"lineNumber":317,"author":{"gitId":"chiralcentre"},"content":"        int countAccepted \u003d countAccepted(jobToFind);","lastModifiedDate":"2024-03-31"},{"lineNumber":318,"author":{"gitId":"acekhoon"},"content":"        return countVacancy - countAccepted;","lastModifiedDate":"2024-03-30"},{"lineNumber":319,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":320,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":321,"author":{"gitId":"logical-1985516"},"content":"    /* Removes all applications in application list with target person */","lastModifiedDate":"2024-03-30"},{"lineNumber":322,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":323,"author":{"gitId":"logical-1985516"},"content":"    public void removeApplications(Person target) {","lastModifiedDate":"2024-03-29"},{"lineNumber":324,"author":{"gitId":"logical-1985516"},"content":"        List\u003cApplication\u003e applications \u003d new ArrayList\u003cApplication\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":325,"author":{"gitId":"logical-1985516"},"content":"        for (Application app: applicationList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":326,"author":{"gitId":"logical-1985516"},"content":"            if (!app.getPerson().equals(target)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":327,"author":{"gitId":"logical-1985516"},"content":"                applications.add(app);","lastModifiedDate":"2024-03-29"},{"lineNumber":328,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":329,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":330,"author":{"gitId":"logical-1985516"},"content":"        applicationList.setApplications(applications);","lastModifiedDate":"2024-03-29"},{"lineNumber":331,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":332,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":333,"author":{"gitId":"logical-1985516"},"content":"    /* Removes all applications in application list with target job */","lastModifiedDate":"2024-03-30"},{"lineNumber":334,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":335,"author":{"gitId":"logical-1985516"},"content":"    public void removeApplications(Job target) {","lastModifiedDate":"2024-03-29"},{"lineNumber":336,"author":{"gitId":"logical-1985516"},"content":"        List\u003cApplication\u003e applications \u003d new ArrayList\u003cApplication\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":337,"author":{"gitId":"logical-1985516"},"content":"        for (Application app: applicationList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":338,"author":{"gitId":"logical-1985516"},"content":"            if (!app.getJob().equals(target)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":339,"author":{"gitId":"logical-1985516"},"content":"                applications.add(app);","lastModifiedDate":"2024-03-29"},{"lineNumber":340,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":341,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":342,"author":{"gitId":"logical-1985516"},"content":"        applicationList.setApplications(applications);","lastModifiedDate":"2024-03-29"},{"lineNumber":343,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":344,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":345,"author":{"gitId":"logical-1985516"},"content":"    /* Clears all applications in the model */","lastModifiedDate":"2024-03-30"},{"lineNumber":346,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":347,"author":{"gitId":"logical-1985516"},"content":"    public void clearApplications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":348,"author":{"gitId":"logical-1985516"},"content":"        applicationList.setApplications(new UniqueApplicationList());","lastModifiedDate":"2024-03-30"},{"lineNumber":349,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":350,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":351,"author":{"gitId":"acekhoon"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Application List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":352,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":353,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":354,"author":{"gitId":"acekhoon"},"content":"     * Returns an unmodifiable view of the list of {@code Application} backed by the internal list of","lastModifiedDate":"2024-03-27"},{"lineNumber":355,"author":{"gitId":"acekhoon"},"content":"     * {@code UniqueApplicationList}","lastModifiedDate":"2024-03-27"},{"lineNumber":356,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":357,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":358,"author":{"gitId":"acekhoon"},"content":"    public ObservableList\u003cApplication\u003e getFilteredApplicationList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":359,"author":{"gitId":"acekhoon"},"content":"        return filteredApplications;","lastModifiedDate":"2024-03-27"},{"lineNumber":360,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":361,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":362,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":363,"author":{"gitId":"acekhoon"},"content":"    public void setLastMentionedApplication(Application p) {","lastModifiedDate":"2024-03-28"},{"lineNumber":364,"author":{"gitId":"acekhoon"},"content":"        lastMentionedApplication \u003d Optional.of(p);","lastModifiedDate":"2024-03-28"},{"lineNumber":365,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":366,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":367,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":368,"author":{"gitId":"acekhoon"},"content":"    public Optional\u003cApplication\u003e getLastMentionedApplication() {","lastModifiedDate":"2024-03-28"},{"lineNumber":369,"author":{"gitId":"acekhoon"},"content":"        return lastMentionedApplication;","lastModifiedDate":"2024-03-28"},{"lineNumber":370,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":371,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":372,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":373,"author":{"gitId":"acekhoon"},"content":"    public void updateFilteredApplicationList(Predicate\u003cApplication\u003e predicate) {","lastModifiedDate":"2024-03-27"},{"lineNumber":374,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":375,"author":{"gitId":"acekhoon"},"content":"        filteredApplications.setPredicate(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":376,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":377,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":386,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":392,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2024-03-27"},{"lineNumber":393,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 applicationList.equals((otherModelManager.applicationList))","lastModifiedDate":"2024-03-28"},{"lineNumber":394,"author":{"gitId":"chiralcentre"},"content":"                \u0026\u0026 jobList.equals((otherModelManager.jobList));","lastModifiedDate":"2024-03-25"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"0liverkong":14,"acekhoon":129,"leeweiming3":4,"-":138,"logical-1985516":41,"chiralcentre":70}},{"path":"src/main/java/seedu/hirehub/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":15,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"    Path getJobsFilePath();","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"    Path getApplicationsFilePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"leeweiming3":2,"-":14,"chiralcentre":4}},{"path":"src/main/java/seedu/hirehub/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"    private Path jobsFilePath \u003d Paths.get(\"data\", \"jobs.json\");","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"    private Path applicationsFilePath \u003d Paths.get(\"data\", \"applications.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"    public UserPrefs() {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"        setJobsFilePath(newUserPrefs.getJobsFilePath());","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"    public Path getJobsFilePath() {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"        return jobsFilePath;","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"    public Path getApplicationsFilePath() {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"        return applicationsFilePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"    public void setJobsFilePath(Path jobsFilePath) {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(jobsFilePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"        this.jobsFilePath \u003d jobsFilePath;","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"    public void setApplicationsFilePath(Path applicationsFilePath) {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"        this.applicationsFilePath \u003d applicationsFilePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"chiralcentre"},"content":"            \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath)","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"leeweiming3"},"content":"            \u0026\u0026 jobsFilePath.equals(otherUserPrefs.jobsFilePath)","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"leeweiming3"},"content":"            \u0026\u0026 applicationsFilePath.equals(otherUserPrefs.applicationsFilePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"leeweiming3"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, jobsFilePath, applicationsFilePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"        sb.append(\"\\nLocal jobs file location : \" + jobsFilePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"leeweiming3"},"content":"        sb.append(\"\\nLocal applications file location : \" + applicationsFilePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leeweiming3":15,"-":83,"chiralcentre":15}},{"path":"src/main/java/seedu/hirehub/model/application/Application.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.model.application;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":" * Represents an association between job and person","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":" * Guarantees: immutable","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"public class Application {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    public final Job job;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    public final Status status;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    public final Person person;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"     * Constructs a {@code Job}","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"     * @param job Job that candidate applied for","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"     * @param person Candidate who applied for a job","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"     * @param status Candidate\u0027s current application status","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    public Application(Person person, Job job, Status status) {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(job);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"        this.job \u003d job;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"     * Returns true if both applications contain same job and candidate.","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"     * This defines a weaker notion of equality between two applications.","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    public boolean isSameApplication(Application otherApplication) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        if (otherApplication \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"        return otherApplication !\u003d null","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 person.isSamePerson(otherApplication.person)","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 job.isSameJob(otherApplication.job);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"     * Returns the job that the candidate applied for.","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"    public Job getJob() {","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"        return this.job;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"     * Returns the person who applied for that job.","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"    public Person getPerson() {","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"        return this.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"     * Returns the status of the job application.","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"    public Status getStatus() {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"        return this.status;","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"     * Returns true if both applications have exactly the same fields.","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"     * This defines a stronger notion of equality between two applications.","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"        if (!(other instanceof Application)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"        Application otherApplication \u003d (Application) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"        return person.equals(otherApplication.person)","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 job.equals(otherApplication.job)","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 status.equals(otherApplication.status);","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"    // hash job and person, as different applications are not allowed to have the same job and person","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"acekhoon"},"content":"        return Objects.hash(person, job);","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"                .add(\"Person\", person)","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"                .add(\"Job\", job)","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"                .add(\"Status\", status)","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"acekhoon":97,"logical-1985516":9}},{"path":"src/main/java/seedu/hirehub/model/application/UniqueApplicationList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.model.application;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.exceptions.ApplicationNotFoundException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.exceptions.DuplicateApplicationException;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":" * A list of applications that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":" * An application is considered unique by comparing using {@code Application#isSameApplication(Application)}.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":" * As such, adding and updating of applications uses Application#isSameApplication(Application) for equality","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":" * so as to ensure that the application being added or updated is","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":" * unique in terms of identity in the UniqueApplicationList. However, the removal of a job uses","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":" * Application#equals(Object) so as to ensure that the application with exactly the same fields will be removed.","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":" *","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":" *","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":" * @see Application#isSameApplication(Application)","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"public class UniqueApplicationList implements Iterable\u003cApplication\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    private final ObservableList\u003cApplication\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    private final ObservableList\u003cApplication\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"     * Returns true if the list contains an equivalent application as the given argument.","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    public boolean containsApplication(Application toCheck) {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"        return internalList.stream().anyMatch(toCheck::isSameApplication);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"     * Adds an application to the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"     * The application must not already exist in the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"    public void addApplication(Application toAdd) {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"        if (containsApplication(toAdd)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"            throw new DuplicateApplicationException();","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"     * Replaces the application {@code target} in the list with {@code editedApplication}.","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"     * The job identity of {@code editedApplication} must not be the same as another existing job in the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"    public void setApplication(Application target, Application editedApplication) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"        requireAllNonNull(target, editedApplication);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"            throw new ApplicationNotFoundException();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"        if (!target.isSameApplication(editedApplication) \u0026\u0026 containsApplication(editedApplication)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"            throw new DuplicateApplicationException();","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"        internalList.set(index, editedApplication);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"     * Removes the equivalent application from the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"     * The application must exist in the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"    public void removeApplication(Application toRemove) {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"            throw new ApplicationNotFoundException();","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"    public void setApplications(UniqueApplicationList replacement) {","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"     * Replaces the contents of this list with {@code applications}.","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"     * {@code applications} must not contain duplicate applications.","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"    public void setApplications(List\u003cApplication\u003e applications) {","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"acekhoon"},"content":"        requireAllNonNull(applications);","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"acekhoon"},"content":"        if (!applicationsAreUnique(applications)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"            throw new DuplicateApplicationException();","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"        internalList.setAll(applications);","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"acekhoon"},"content":"    public ObservableList\u003cApplication\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"acekhoon"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"    public Iterator\u003cApplication\u003e iterator() {","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"acekhoon"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"acekhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"acekhoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"acekhoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"acekhoon"},"content":"        if (!(other instanceof UniqueApplicationList)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"acekhoon"},"content":"        UniqueApplicationList otherUniqueJobList \u003d (UniqueApplicationList) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"acekhoon"},"content":"        return internalList.equals(otherUniqueJobList.internalList);","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"acekhoon"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"acekhoon"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"acekhoon"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"acekhoon"},"content":"     * Returns true if {@code applications} contains only unique applications.","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"acekhoon"},"content":"    private boolean applicationsAreUnique(List\u003cApplication\u003e applications) {","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"acekhoon"},"content":"        for (int i \u003d 0; i \u003c applications.size() - 1; i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"acekhoon"},"content":"            for (int j \u003d i + 1; j \u003c applications.size(); j++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"acekhoon"},"content":"                if (applications.get(i).isSameApplication(applications.get(j))) {","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"acekhoon"},"content":"                    return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"acekhoon"},"content":"                }","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"acekhoon"},"content":"        return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"acekhoon":154}},{"path":"src/main/java/seedu/hirehub/model/application/exceptions/ApplicationNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.model.application.exceptions;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":" * Signals that the operation is unable to find the specified application.","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"public class ApplicationNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"acekhoon":6}},{"path":"src/main/java/seedu/hirehub/model/application/exceptions/DuplicateApplicationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.model.application.exceptions;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":" * Signals that the operation will result in duplicate Applications","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":" * (Applications are considered duplicates if they have the same","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":" * email address and job title).","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"public class DuplicateApplicationException extends RuntimeException {","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    public DuplicateApplicationException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"        super(\"Operation would result in duplicate applications\");","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"acekhoon":12}},{"path":"src/main/java/seedu/hirehub/model/job/Job.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.job;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":" * Represents a job opening","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":" * Guarantees: immutable","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"public class Job {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"    public static final String TITLE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"            \"Titles should contain at least one non whitespace character \"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"            + \"and have a character limit of 100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"    public static final String VACANCY_CONSTRAINTS \u003d \"Vacancy must be a positive unsigned integer\";","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s+$).{1,100}$\";","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"    public final String title;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"    public final String description;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"    public final int vacancy;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"     * Constructs a {@code Job}","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"     * @param title Title for the job, which is assumed to be unique across all jobs","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"     * @param description Details about the job, such as skills required","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"     * @param vacancy Number of openings for the job","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"    public Job(String title, String description, int vacancy) {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(title);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(description);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"        checkArgument(isValidTitle(title), TITLE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"        this.vacancy \u003d vacancy;","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"    public static boolean isValidTitle(String title) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"        return title.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"     * Returns true if both jobs have the same name.","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"     * This defines a weaker notion of equality between two jobs.","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"    public boolean isSameJob(Job otherJob) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"        if (otherJob \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"        return otherJob !\u003d null","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"            \u0026\u0026 title.equals(otherJob.title);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"     * Returns true if both jobs have exactly the same fields.","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"     * This defines a stronger notion of equality between two jobs.","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"chiralcentre"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"        if (!(other instanceof Job)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"chiralcentre"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"        Job otherJob \u003d (Job) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"        return title.equals(otherJob.title)","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"            \u0026\u0026 description.equals(otherJob.description)","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"chiralcentre"},"content":"            \u0026\u0026 vacancy \u003d\u003d otherJob.vacancy;","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"0liverkong"},"content":"     * Gets the job title","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"0liverkong"},"content":"     * @return the job title","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"0liverkong"},"content":"    public String getTitle() {","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"0liverkong"},"content":"        return title;","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"0liverkong"},"content":"     * Gets the job description","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"0liverkong"},"content":"     * @return the job description","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"0liverkong"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"0liverkong"},"content":"        return description;","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"0liverkong"},"content":"     * Gets the job vacancies","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"0liverkong"},"content":"     * @return the job vacancies","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"0liverkong"},"content":"    public int getVacancy() {","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"0liverkong"},"content":"        return vacancy;","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"    // hash only the title, as different jobs are not allowed to have the same title","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"chiralcentre"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"chiralcentre"},"content":"        return Objects.hash(title);","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"chiralcentre"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"                .add(\"title\", title)","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"                .add(\"description\", description)","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"chiralcentre"},"content":"                .add(\"vacancy\", vacancy)","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"chiralcentre"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"0liverkong":24,"chiralcentre":92}},{"path":"src/main/java/seedu/hirehub/model/job/UniqueJobList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.job;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.exceptions.DuplicateJobException;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.exceptions.JobNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":" * A list of jobs that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":" * A job is considered unique by comparing using {@code Job#isSameJob(Job)}. As such, adding and updating of","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":" * jobs uses Job#isSameJob(Job) for equality so as to ensure that the job being added or updated is","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":" * unique in terms of identity in the UniqueJobList. However, the removal of a job uses Job#equals(Object) so","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":" * as to ensure that the job with exactly the same fields will be removed.","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":" *","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":" *","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":" * @see Job#isSameJob(Job)","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"public class UniqueJobList implements Iterable\u003cJob\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"    private final ObservableList\u003cJob\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"    private final ObservableList\u003cJob\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"     * Returns true if the list contains an equivalent job as the given argument.","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"    public boolean containsJob(Job toCheck) {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"        return internalList.stream().anyMatch(toCheck::isSameJob);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"     * Adds a job to the list.","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"     * The job must not already exist in the list.","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"    public void addJob(Job toAdd) {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"        if (containsJob(toAdd)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"            throw new DuplicateJobException();","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"     * Replaces the job {@code target} in the list with {@code editedJob}.","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"     * The job identity of {@code editedJob} must not be the same as another existing job in the list.","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"    public void setJob(Job target, Job editedJob) {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"        requireAllNonNull(target, editedJob);","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"            throw new JobNotFoundException();","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"        if (!target.isSameJob(editedJob) \u0026\u0026 containsJob(editedJob)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"            throw new DuplicateJobException();","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"        internalList.set(index, editedJob);","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"     * Removes the equivalent job from the list.","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"     * The job must exist in the list.","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"chiralcentre"},"content":"    public void removeJob(Job toRemove) {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"chiralcentre"},"content":"            throw new JobNotFoundException();","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"chiralcentre"},"content":"    public void setJobs(UniqueJobList replacement) {","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"chiralcentre"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"chiralcentre"},"content":"     * Replaces the contents of this list with {@code jobs}.","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"chiralcentre"},"content":"     * {@code jobs} must not contain duplicate jobs.","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"chiralcentre"},"content":"    public void setJobs(List\u003cJob\u003e jobs) {","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"chiralcentre"},"content":"        requireAllNonNull(jobs);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"chiralcentre"},"content":"        if (!jobsAreUnique(jobs)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"chiralcentre"},"content":"            throw new DuplicateJobException();","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"chiralcentre"},"content":"        internalList.setAll(jobs);","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"chiralcentre"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"chiralcentre"},"content":"    public ObservableList\u003cJob\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"chiralcentre"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"    public Iterator\u003cJob\u003e iterator() {","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"chiralcentre"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"chiralcentre"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"chiralcentre"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"chiralcentre"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"chiralcentre"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"chiralcentre"},"content":"        if (!(other instanceof UniqueJobList)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"chiralcentre"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"chiralcentre"},"content":"        UniqueJobList otherUniqueJobList \u003d (UniqueJobList) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"chiralcentre"},"content":"        return internalList.equals(otherUniqueJobList.internalList);","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"chiralcentre"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"chiralcentre"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"chiralcentre"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"chiralcentre"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"chiralcentre"},"content":"     * Returns true if {@code jobs} contains only unique jobs.","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"chiralcentre"},"content":"    private boolean jobsAreUnique(List\u003cJob\u003e jobs) {","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"chiralcentre"},"content":"        for (int i \u003d 0; i \u003c jobs.size() - 1; i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"chiralcentre"},"content":"            for (int j \u003d i + 1; j \u003c jobs.size(); j++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"chiralcentre"},"content":"                if (jobs.get(i).isSameJob(jobs.get(j))) {","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"chiralcentre"},"content":"                    return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"chiralcentre"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"chiralcentre"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"chiralcentre"},"content":"        return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"chiralcentre":150}},{"path":"src/main/java/seedu/hirehub/model/job/exceptions/DuplicateJobException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.job.exceptions;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":" * identity).","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"public class DuplicateJobException extends RuntimeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"    public DuplicateJobException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"        super(\"Operation would result in duplicate jobs\");","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"chiralcentre":11}},{"path":"src/main/java/seedu/hirehub/model/job/exceptions/JobNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.job.exceptions;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":" * Signals that the operation is unable to find the specified job.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"public class JobNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"chiralcentre":6}},{"path":"src/main/java/seedu/hirehub/model/person/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":" * Represents a Person\u0027s comment in the address book.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"public class Comment {","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"    public final String value;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"     * Constructs an {@code Comment}.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"     * @param comment A string","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"    public Comment(String comment) {","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(comment);","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"        value \u003d comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"    public String toString() {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"        return value;","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"                || (other instanceof Comment // instanceof handles nulls","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"                \u0026\u0026 value.equals(((Comment) other).value)); // state check","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"        return value.hashCode();","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"chiralcentre":38}},{"path":"src/main/java/seedu/hirehub/model/person/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_VACANCY;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.Prefix;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":" * Tests that a {@code Person}\u0027s {@code Attribute} matches the corresponding keyword given.","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"public class ContainsKeywordsPredicate\u003cS, T\u003e implements Predicate\u003cS\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    private final Prefix prefix;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"    private final Optional\u003cT\u003e keywords;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"     * @param prefix of the corresponding field.","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"     * @param keywords that the test is run against.","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    public ContainsKeywordsPredicate(Prefix prefix, Optional\u003cT\u003e keywords) {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"    public boolean test(S item) {","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        requireNonNull(item);","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        if (item instanceof Person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"            Person person \u003d (Person) item;","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"            return personTest(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"        if (item instanceof Job) {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"            Job job \u003d (Job) item;","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"            return jobTest(job);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        if (item instanceof Application) {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"            Application application \u003d (Application) item;","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"            return applicationTest(application);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        throw new IllegalStateException(\"Unexpected type\");","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"    private boolean personTest(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cName\u003e name \u003d (Optional\u003cName\u003e) keywords;","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"            return person.getName().fullName.contains(name.orElse(person.getName()).fullName);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"        } else if (prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cPhone\u003e phone \u003d (Optional\u003cPhone\u003e) keywords;","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"            return person.getPhone().value.equals(phone.orElse(person.getPhone()).value);","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"        } else if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cEmail\u003e email \u003d (Optional\u003cEmail\u003e) keywords;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"            return person.getEmail().value.equals(email.orElse(person.getEmail()).value);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"        } else if (prefix.equals(PREFIX_COUNTRY)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cCountry\u003e country \u003d (Optional\u003cCountry\u003e) keywords;","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"            return person.getCountry().value.equals(country.orElse(person.getCountry()).value);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"        } else if (prefix.equals(PREFIX_COMMENT)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cComment\u003e comment \u003d (Optional\u003cComment\u003e) keywords;","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"            return person.getComment().value.contains(comment.orElse(person.getComment()).value);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"        } else if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cSet\u003cTag\u003e\u003e tags \u003d (Optional\u003cSet\u003cTag\u003e\u003e) keywords;","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"                return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"            return isPersonTagsContainsTag(person, tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"        throw new IllegalStateException(\"Unexpected prefix: \" + prefix);","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"    private boolean jobTest(Job job) {","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"        if (prefix.equals(PREFIX_TITLE)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cString\u003e title \u003d (Optional\u003cString\u003e) keywords;","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"            return job.getTitle().contains(title.orElse(job.getTitle()));","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"        } else if (prefix.equals(PREFIX_DESCRIPTION)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cString\u003e description \u003d (Optional\u003cString\u003e) keywords;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"            return job.getDescription().contains(description.orElse(job.getDescription()));","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"        } else if (prefix.equals(PREFIX_VACANCY)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cInteger\u003e vacancy \u003d (Optional\u003cInteger\u003e) keywords;","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"            return job.getVacancy() \u003d\u003d vacancy.orElse(job.getVacancy());","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"        throw new IllegalStateException(\"Unexpected prefix: \" + prefix);","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"    private boolean applicationTest(Application application) {","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"        if (prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cEmail\u003e email \u003d (Optional\u003cEmail\u003e) keywords;","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"            return application.getPerson().getEmail().value","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"                    .equals(email.orElse(application.getPerson().getEmail()).value);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"        } else if (prefix.equals(PREFIX_TITLE)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cString\u003e title \u003d (Optional\u003cString\u003e) keywords;","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"            return application.getJob().getTitle().contains(title.orElse(application.getJob().getTitle()));","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"        } else if (prefix.equals(PREFIX_STATUS)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"            Optional\u003cStatus\u003e status \u003d (Optional\u003cStatus\u003e) keywords;","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"            return application.getStatus().value.equals(status.orElse(application.getStatus()).value);","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"        throw new IllegalStateException(\"Unexpected prefix: \" + prefix);","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"    private boolean isPersonTagsContainsTag(Person person, Optional\u003cSet\u003cTag\u003e\u003e tags) {","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"        assert tags.isPresent();","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"        boolean isContainTag \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"        for (Tag tag : tags.get()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"            for (Tag personTag : person.getTags()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"                if (personTag.tagName.contains(tag.tagName)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"                    isContainTag \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"                    break;","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"        return isContainTag;","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"        if (!(other instanceof ContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"logical-1985516"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"        ContainsKeywordsPredicate\u003cS, T\u003e otherContainsKeywordsPredicate \u003d (ContainsKeywordsPredicate\u003cS, T\u003e) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"logical-1985516"},"content":"        return keywords.equals(otherContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"logical-1985516"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"logical-1985516":139,"chiralcentre":10}},{"path":"src/main/java/seedu/hirehub/model/person/Country.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import java.util.Locale;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":" * Represents a Person\u0027s country in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCountry(String)}","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"public class Country {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Country provided must be a valid ISO-3166-1 alpha-2 code,\"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"            + \" which can be found from https://www.iso.org/obp/ui/#search/code/\";","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"     * Constructs an {@code Country}.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"     * @param country A valid country code.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"    public Country(String country) {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"        country \u003d country.toUpperCase(); // ensure that input is case-insensitive","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(country);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"        checkArgument(isValidCountry(country), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"        value \u003d country;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"     * Returns true if a given string is a valid country code.","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"    public static boolean isValidCountry(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"        for (String countryCode: Locale.getISOCountries()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"            if (test.equals(countryCode)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"                return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"     * Returns country name associated with the country code","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"    public String getDisplayCountry() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"        return new Locale(\"\", value).getDisplayCountry();","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"        if (!(other instanceof Country)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"        Country otherCountry \u003d (Country) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"        return value.equals(otherCountry.value);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":41,"chiralcentre":34}},{"path":"src/main/java/seedu/hirehub/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":77,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":65,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.StringUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":41,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"    private final Country country;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"    private final Comment comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    public Person(Name name, Phone phone, Email email, Country country, Comment comment, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"        requireAllNonNull(name, phone, email, country, comment, tags);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"        this.country \u003d country;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"     * Alternative constructor to allow for initialisation without a comment","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"    public Person(Name name, Phone phone, Email email, Country country, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"        requireAllNonNull(name, phone, email, country, tags);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"        this.country \u003d country;","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"        this.comment \u003d new Comment(\"\");","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"    public Country getCountry() {","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"        return country;","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"    public Comment getComment() {","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"        return comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"     * Returns true if both persons have the same email.","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"chiralcentre"},"content":"                \u0026\u0026 country.equals(otherPerson.country)","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"chiralcentre"},"content":"                \u0026\u0026 comment.equals(otherPerson.comment)","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"        return Objects.hash(name, phone, email, country, comment, tags);","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"chiralcentre"},"content":"                .add(\"country\", country)","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"chiralcentre"},"content":"                .add(\"comment\", comment)","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"acekhoon":5,"-":107,"chiralcentre":27}},{"path":"src/main/java/seedu/hirehub/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"            \"International phone numbers should only contain a country code \"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"                    + \"in front (+ followed by 1 to 3 digits), then a space, \"","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"                    + \"followed by a combination of digits, spaces, \"","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"                    + \"parentheses or hyphens with at least 3 digits.\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"                    + \"If country code is omitted, it must be a valid Singapore phone number.\";","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    public static final String INTERNATIONAL_VALIDATION_REGEX \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"            \"^\\\\+\\\\d{1,3} ((\\\\d|\\\\(|\\\\)|-| )*)\\\\d((\\\\d|\\\\(|\\\\)|-| )*)\\\\d((\\\\d|\\\\(|\\\\)|-| )*)\\\\d$\";","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    public static final String LOCAL_VALIDATION_REGEX \u003d \"^[3689]\\\\d{3}[- ]?\\\\d{4}$\";","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        return test.matches(INTERNATIONAL_VALIDATION_REGEX) || test.matches(LOCAL_VALIDATION_REGEX);","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":56,"logical-1985516":10,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/model/person/SearchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" * Tests that all a {@code Person}\u0027s {@code Attributes} matches the corresponding keywords given.","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"public class SearchPredicate\u003cT\u003e implements Predicate\u003cT\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"    private final List\u003cContainsKeywordsPredicate\u003cT, ?\u003e\u003e predicateList;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    public SearchPredicate(List\u003cContainsKeywordsPredicate\u003cT, ?\u003e\u003e predicateList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"        this.predicateList \u003d predicateList;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"    public boolean test(T items) {","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"        boolean result \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"        for (ContainsKeywordsPredicate\u003cT, ?\u003e predicate : predicateList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"            result \u003d result \u0026\u0026 predicate.test(items);","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"        return result;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        if (!(other instanceof SearchPredicate)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        SearchPredicate\u003cT\u003e otherSearchPredicate \u003d (SearchPredicate\u003cT\u003e) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        return predicateList.equals(otherSearchPredicate.predicateList);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"logical-1985516":38,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":146,"chiralcentre":4}},{"path":"src/main/java/seedu/hirehub/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person.exceptions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":10,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person.exceptions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"-":5,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/model/status/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.model.status;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":" * Represents a Person\u0027s recruitment status in the address book.","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"public class Status {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"     * Constructs an enum class containing 5 fixed, different recruitment status","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"     * for individual candidates.","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    enum CandidateStatus {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"        PRESCREEN,","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"        IN_PROGRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"        WAITLIST,","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"        OFFERED,","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        REJECTED","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Interview status must be one of the following values: \"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"            + \"PRESCREEN, IN_PROGRESS, WAITLIST, OFFERED, REJECTED\";","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    public final String value;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"     * Constructs an {@code Status}.","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"     * @param status A valid status.","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    public Status(String status) {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"        value \u003d status.toUpperCase();","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        return value;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"        if (!(other instanceof Status)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"        Status otherStatus \u003d (Status) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"        return value.equals(otherStatus.value);","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"     * Returns true if a given string is a valid status; it needs to be one of the","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"     * values specified in the enum list.","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"    public static boolean isValidStatus(String status) {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"        for (CandidateStatus enumValue : CandidateStatus.values()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"            if (enumValue.name().equals(status.toUpperCase())) {","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"                isValid \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"        return isValid;","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"acekhoon":77,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":60,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    private static final Person PERSON_1 \u003d new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"        new Email(\"alexyeoh@example.com\"), new Country(\"SG\"), getTagSet(\"friends\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"    private static final Job JOB_1 \u003d new Job(\"Senior Software Engineer (Singapore)\",","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"        \"10 years of experience in C++, Singaporean citizen\", 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"    private static final Job JOB_2 \u003d new Job(\"Software Engineer (London)\",","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"        \"Graduated with FCH, UK citizen\", 5);","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"            PERSON_1,","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"                new Country(\"CN\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"                new Country(\"SG\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"                new Country(\"SG\"), getTagSet(\"family\")),","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"                new Country(\"MY\"), getTagSet(\"classmates\")),","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"                new Country(\"IN\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"    public static Job[] getSampleJobs() {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        return new Job[]{","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"            JOB_1,","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"            new Job(\"Senior Software Engineer (London)\", \"10 years of experience in C++, UK citizen\", 1),","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"            new Job(\"Software Engineer (Singapore)\", \"Graduated with FCH, Singaporean citizen\", 5),","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"            JOB_2,","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"            new Job(\"Quantitative Trader\", \"Good at statistics and machine learning\", 2),","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"            new Job(\"Data Analyst\", \"Adept at handling large datasets and data pipelines\", 2)","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"        };","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"    public static Application[] getSampleApplications() {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        return new Application[]{","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"            new Application(PERSON_1, JOB_1, new Status(\"PRESCREEN\")),","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"            new Application(PERSON_1, JOB_2, new Status(\"IN_PROGRESS\"))","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"        };","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person samplePerson: getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"    public static UniqueJobList getSampleUniqueJobList() {","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"chiralcentre"},"content":"        UniqueJobList jobList \u003d new UniqueJobList();","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"        for (Job job: getSampleJobs()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"            jobList.addJob(job);","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"chiralcentre"},"content":"        return jobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"    public static UniqueApplicationList getSampleUniqueApplicationList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"leeweiming3"},"content":"        UniqueApplicationList applicationList \u003d new UniqueApplicationList();","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"leeweiming3"},"content":"        for (Application a: getSampleApplications()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"leeweiming3"},"content":"            applicationList.addApplication(a);","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"leeweiming3"},"content":"        return applicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"leeweiming3":28,"-":38,"chiralcentre":33}},{"path":"src/main/java/seedu/hirehub/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":" * Represents a storage for {@link seedu.hirehub.model.AddressBook}.","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":41,"chiralcentre":4}},{"path":"src/main/java/seedu/hirehub/storage/ApplicationStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":" * Represents a storage for {@link seedu.hirehub.model.application.UniqueApplicationList}.","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"public interface ApplicationStorage {","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"    Path getApplicationFilePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"     * Returns application data as a {@link seedu.hirehub.model.application.UniqueApplicationList}.","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"    Optional\u003cUniqueApplicationList\u003e readApplicationList(UniqueJobList jobs,","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"                                                        ReadOnlyAddressBook people) throws DataLoadingException;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"     * @see #getApplicationFilePath()","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"    Optional\u003cUniqueApplicationList\u003e readApplicationList(UniqueJobList jobs,","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"                                                        ReadOnlyAddressBook people,","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"                                                        Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"     * Saves the given {@link UniqueApplicationList} to the storage.","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"     * @param applicationList cannot be null.","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"    void saveApplicationList(UniqueApplicationList applicationList) throws IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"     * @see #saveApplicationList(UniqueApplicationList)","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"    void saveApplicationList(UniqueApplicationList applicationList, Path filePath) throws IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"leeweiming3":52}},{"path":"src/main/java/seedu/hirehub/storage/JobsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":" * Represents a storage for {@link seedu.hirehub.model.job.UniqueJobList}.","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"public interface JobsStorage {","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"    Path getJobsFilePath();","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"     * Returns job data as a {@link UniqueJobList}.","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"    Optional\u003cUniqueJobList\u003e readJobList() throws DataLoadingException;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"     * @see #getJobsFilePath()","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"    Optional\u003cUniqueJobList\u003e readJobList(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"     * Saves the given {@link UniqueJobList} to the storage.","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"     * @param jobList cannot be null.","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"    void saveJobList(UniqueJobList jobList) throws IOException;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"     * @see #saveJobList(UniqueJobList)","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"    void saveJobList(UniqueJobList jobList, Path filePath) throws IOException;","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"chiralcentre":45}},{"path":"src/main/java/seedu/hirehub/storage/JsonAdaptedApplication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":" * Jackson-friendly version of {@link Application}.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"class JsonAdaptedApplication {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Application\u0027s %s field is missing!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"    public static final String PERSON_NOT_FOUND_FORMAT \u003d \"Applicant email %s does not match any person!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"    public static final String JOB_NOT_FOUND_FORMAT \u003d \"Job title %s does not match any job!\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"    private final String personEmail;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"    private final String jobTitle;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    private final String status;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"     * Constructs a {@code JsonAdaptedApplication} with the given application details.","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"    public JsonAdaptedApplication(@JsonProperty(\"personEmail\") String personEmail,","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"                                  @JsonProperty(\"jobTitle\") String jobTitle,","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"                                  @JsonProperty(\"status\") String status) {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"        this.personEmail \u003d personEmail;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"     * Converts a given {@code Application} into this class for Jackson use.","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"    public JsonAdaptedApplication(Application source) {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"        personEmail \u003d source.getPerson().getEmail().toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"        jobTitle \u003d source.getJob().getTitle();","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"     * Converts this Jackson-friendly adapted application object into the model\u0027s {@code Application} object.","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted application.","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"    public Application toModelType(UniqueJobList jobs,","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"                                   ReadOnlyAddressBook people) throws IllegalValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"        if (personEmail \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"personEmail\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"        if (jobTitle \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"jobTitle\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"status\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"        if (!Email.isValidEmail(personEmail)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"        if (!Job.isValidTitle(jobTitle)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"            throw new IllegalValueException(Job.TITLE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"        Email email \u003d new Email(personEmail);","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"        Person applicant \u003d getPerson(people, email);","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"        if (applicant \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"            throw new IllegalValueException(String.format(PERSON_NOT_FOUND_FORMAT, email));","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"        Job appliedJob \u003d getJob(jobs);","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"        if (appliedJob \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"leeweiming3"},"content":"            throw new IllegalValueException(String.format(JOB_NOT_FOUND_FORMAT, jobTitle));","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"leeweiming3"},"content":"        return new Application(applicant, appliedJob, new Status(status));","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"leeweiming3"},"content":"     * Finds the job associated with the this.jobTitle.","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"leeweiming3"},"content":"     * Returns null if not found.","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"leeweiming3"},"content":"     * @param jobs Joblist containing the job.","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"leeweiming3"},"content":"     * @return Job with correct name.","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"leeweiming3"},"content":"    private Job getJob(UniqueJobList jobs) {","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"leeweiming3"},"content":"        for (Job j: jobs) {","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"leeweiming3"},"content":"            if (j.getTitle().equals(jobTitle)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"leeweiming3"},"content":"                return j;","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"leeweiming3"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"leeweiming3"},"content":"        return null;","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"leeweiming3"},"content":"     * Finds the person associated with this email.","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"leeweiming3"},"content":"     * Returns null if not found.","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"leeweiming3"},"content":"     * @param people List of people.","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"leeweiming3"},"content":"     * @param email  Email address to be found.","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"leeweiming3"},"content":"    private static Person getPerson(ReadOnlyAddressBook people, Email email) {","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"leeweiming3"},"content":"        for (Person p: people.getPersonList()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"leeweiming3"},"content":"            if (p.getEmail().equals(email)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"leeweiming3"},"content":"                return p;","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"leeweiming3"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"leeweiming3"},"content":"        return null;","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"leeweiming3":120}},{"path":"src/main/java/seedu/hirehub/storage/JsonAdaptedJob.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":" * Jackson-friendly version of {@link Job}.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"class JsonAdaptedJob {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Job\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"    private final String title;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"    private final String description;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"    private final Integer vacancy;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"     * Constructs a {@code JsonAdaptedJob} with the given job details.","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"    public JsonAdaptedJob(@JsonProperty(\"title\") String title, @JsonProperty(\"description\") String description,","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"        @JsonProperty(\"vacancy\") Integer vacancy) {","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"        this.vacancy \u003d vacancy;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"     * Converts a given {@code Job} into this class for Jackson use.","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"    public JsonAdaptedJob(Job source) {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"        title \u003d source.getTitle();","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"        vacancy \u003d source.getVacancy();","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"     * Converts this Jackson-friendly adapted job object into the model\u0027s {@code Job} object.","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted job.","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"    public Job toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"title\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"        if (!Job.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"            throw new IllegalValueException(Job.TITLE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"description\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"        if (vacancy \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"vacancy\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"chiralcentre"},"content":"        if (vacancy \u003c\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"            throw new IllegalValueException(Job.VACANCY_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"        return new Job(trimmedTitle, description, vacancy);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"chiralcentre":69}},{"path":"src/main/java/seedu/hirehub/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Comment;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"    private final String country;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"    private final String comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"country\") String country,","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"            @JsonProperty(\"comment\") String comment, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"        this.country \u003d country;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"        country \u003d source.getCountry().value;","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"        comment \u003d source.getComment().value;","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"chiralcentre"},"content":"        if (country \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Country.class.getSimpleName()));","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"chiralcentre"},"content":"        if (!Country.isValidCountry(country)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"chiralcentre"},"content":"            throw new IllegalValueException(Country.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"        final Country modelCountry \u003d new Country(country);","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"        if (comment \u003d\u003d null) {","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Comment.class.getSimpleName()));","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"chiralcentre"},"content":"        final Comment modelComment \u003d new Comment(comment);","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"acekhoon"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelCountry,","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"acekhoon"},"content":"                modelComment, modelTags);","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"acekhoon":3,"-":90,"chiralcentre":26}},{"path":"src/main/java/seedu/hirehub/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":45,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.FileUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.JsonUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":73,"chiralcentre":7}},{"path":"src/main/java/seedu/hirehub/storage/JsonApplicationStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.util.FileUtil;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.util.JsonUtil;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":" * A class to access application data stored as a json file on the hard disk.","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"public class JsonApplicationStorage implements ApplicationStorage {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonApplicationStorage.class);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"    private Path filePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"    public JsonApplicationStorage(Path filePath) {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"    public Path getApplicationFilePath() {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"        return filePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"    public Optional\u003cUniqueApplicationList\u003e readApplicationList(UniqueJobList jobs,","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"                                                               ReadOnlyAddressBook people) throws DataLoadingException {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"        return readApplicationList(jobs, people, filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"     * Similar to {@link #readApplicationList(UniqueJobList, ReadOnlyAddressBook)} }.","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"    public Optional\u003cUniqueApplicationList\u003e readApplicationList(UniqueJobList jobs,","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"                                                               ReadOnlyAddressBook people,","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"                                                               Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"        Optional\u003cJsonSerializableApplicationList\u003e jsonApplicationList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"            filePath, JsonSerializableApplicationList.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"        if (!jsonApplicationList.isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"            return Optional.of(jsonApplicationList.get().toModelType(jobs, people));","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"    public void saveApplicationList(UniqueApplicationList applicationList) throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"        saveApplicationList(applicationList, filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"     * Similar to {@link #saveApplicationList(UniqueApplicationList)}.","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"    public void saveApplicationList(UniqueApplicationList applicationList, Path filePath) throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(applicationList);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"leeweiming3"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"leeweiming3"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableApplicationList(applicationList), filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"leeweiming3":86}},{"path":"src/main/java/seedu/hirehub/storage/JsonJobsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.FileUtil;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.JsonUtil;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"public class JsonJobsStorage implements JobsStorage {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonJobsStorage.class);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"    private Path filePath;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"    public JsonJobsStorage(Path filePath) {","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"    public Path getJobsFilePath() {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"        return filePath;","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"    public Optional\u003cUniqueJobList\u003e readJobList() throws DataLoadingException {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"        return readJobList(filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"     * Similar to {@link #readJobList()}.","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"    public Optional\u003cUniqueJobList\u003e readJobList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"        Optional\u003cJsonSerializableJobList\u003e jsonJobList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"            filePath, JsonSerializableJobList.class);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"        if (!jsonJobList.isPresent()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"            return Optional.of(jsonJobList.get().toModelType());","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"    public void saveJobList(UniqueJobList jobList) throws IOException {","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"        saveJobList(jobList, filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"     * Similar to {@link #saveJobList(UniqueJobList)}.","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"chiralcentre"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"    public void saveJobList(UniqueJobList jobList, Path filePath) throws IOException {","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(jobList);","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"chiralcentre"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"chiralcentre"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableJobList(jobList), filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"chiralcentre":81}},{"path":"src/main/java/seedu/hirehub/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":55,"chiralcentre":5}},{"path":"src/main/java/seedu/hirehub/storage/JsonSerializableApplicationList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":" * An immutable application list that is serializable to JSON format.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"@JsonRootName(value \u003d \"applications\")","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"class JsonSerializableApplicationList {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICATION \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"        \"This application already exists in the list of open applications\";","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"    public static final String EXCEEDS_VACANCY_MESSAGE \u003d \"Accepted candidates for %s exceeds stipulated vacancy!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"    private final List\u003cJsonAdaptedApplication\u003e applications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"     * Constructs a {@code JsonSerializableApplicationList} with the given applications.","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"    public JsonSerializableApplicationList(@JsonProperty(\"applications\") List\u003cJsonAdaptedApplication\u003e applications) {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"        this.applications.addAll(applications);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"     * Converts a given {@code UniqueApplicationList} into this class for Jackson use.","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableApplicationList}.","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"    public JsonSerializableApplicationList(UniqueApplicationList source) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        for (Application application : source) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"            applications.add(new JsonAdaptedApplication(application));","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"     * Converts this application list into the model\u0027s {@code UniqueApplicationList} object.","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"    public UniqueApplicationList toModelType(UniqueJobList jobs,","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"                                             ReadOnlyAddressBook people) throws IllegalValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"        HashMap\u003cJob, Integer\u003e offeredCount \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"        UniqueApplicationList applicationList \u003d new UniqueApplicationList();","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        for (JsonAdaptedApplication jsonAdaptedApplication : applications) {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"            Application application \u003d jsonAdaptedApplication.toModelType(jobs, people);","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"            if (applicationList.containsApplication(application)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPLICATION);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"            if (application.getStatus().equals(new Status(\"OFFERED\"))) {","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"                Job offeredJob \u003d application.getJob();","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"                offeredCount.merge(offeredJob, 1, Integer::sum);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"                if (offeredCount.get(offeredJob) \u003e offeredJob.getVacancy()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"                    throw new IllegalValueException(String.format(EXCEEDS_VACANCY_MESSAGE, offeredJob));","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"                }","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"            applicationList.addApplication(application);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"        return applicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"leeweiming3":79}},{"path":"src/main/java/seedu/hirehub/storage/JsonSerializableJobList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":" * An immutable job list that is serializable to JSON format.","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"@JsonRootName(value \u003d \"jobs\")","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"class JsonSerializableJobList {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"    public static final String MESSAGE_DUPLICATE_JOB \u003d \"This job already exists in the list of open jobs\";","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"    private final List\u003cJsonAdaptedJob\u003e jobs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"     * Constructs a {@code JsonSerializableJobList} with the given jobs.","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"    public JsonSerializableJobList(@JsonProperty(\"jobs\") List\u003cJsonAdaptedJob\u003e jobs) {","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"        this.jobs.addAll(jobs);","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"     * Converts a given {@code UniqueJobList} into this class for Jackson use.","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableJobList}.","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"    public JsonSerializableJobList(UniqueJobList source) {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"        for (Job job: source) {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"            jobs.add(new JsonAdaptedJob(job));","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"     * Converts this job list into the model\u0027s {@code UniqueJobList} object.","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"    public UniqueJobList toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        UniqueJobList jobList \u003d new UniqueJobList();","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"chiralcentre"},"content":"        for (JsonAdaptedJob jsonAdaptedJob : jobs) {","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"            Job job \u003d jsonAdaptedJob.toModelType();","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"            if (jobList.containsJob(job)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_JOB);","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"            jobList.addJob(job);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"        return jobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"chiralcentre":60}},{"path":"src/main/java/seedu/hirehub/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.JsonUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"chiralcentre":5}},{"path":"src/main/java/seedu/hirehub/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, JobsStorage, ApplicationStorage {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"leeweiming3":1,"-":26,"chiralcentre":5}},{"path":"src/main/java/seedu/hirehub/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"    private JobsStorage jobsStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"    private ApplicationStorage applicationStorage;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"                          UserPrefsStorage userPrefsStorage, JobsStorage jobsStorage,","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"                          ApplicationStorage applicationStorage) {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"        this.jobsStorage \u003d jobsStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"        this.applicationStorage \u003d applicationStorage;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"chiralcentre"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d JobList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"chiralcentre"},"content":"    public Path getJobsFilePath() {","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"chiralcentre"},"content":"        return jobsStorage.getJobsFilePath();","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"chiralcentre"},"content":"    public Optional\u003cUniqueJobList\u003e readJobList() throws DataLoadingException {","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"chiralcentre"},"content":"        return readJobList(jobsStorage.getJobsFilePath());","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"chiralcentre"},"content":"    public Optional\u003cUniqueJobList\u003e readJobList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"chiralcentre"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"chiralcentre"},"content":"        return jobsStorage.readJobList(filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"chiralcentre"},"content":"    public void saveJobList(UniqueJobList jobList) throws IOException {","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"chiralcentre"},"content":"        saveJobList(jobList, jobsStorage.getJobsFilePath());","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"chiralcentre"},"content":"    public void saveJobList(UniqueJobList jobList, Path filePath) throws IOException {","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"        jobsStorage.saveJobList(jobList, filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"leeweiming3"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ApplicationList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"leeweiming3"},"content":"    public Path getApplicationFilePath() {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"leeweiming3"},"content":"        return applicationStorage.getApplicationFilePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"leeweiming3"},"content":"    public Optional\u003cUniqueApplicationList\u003e readApplicationList(UniqueJobList jobs,","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"leeweiming3"},"content":"                                                               ReadOnlyAddressBook people) throws DataLoadingException {","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"leeweiming3"},"content":"        return readApplicationList(jobs, people, getApplicationFilePath());","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"leeweiming3"},"content":"    public Optional\u003cUniqueApplicationList\u003e readApplicationList(UniqueJobList jobs,","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"leeweiming3"},"content":"                                                               ReadOnlyAddressBook people,","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"leeweiming3"},"content":"                                                               Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"leeweiming3"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"leeweiming3"},"content":"        return applicationStorage.readApplicationList(jobs, people, filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"leeweiming3"},"content":"    public void saveApplicationList(UniqueApplicationList applicationList) throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"leeweiming3"},"content":"        saveApplicationList(applicationList, getApplicationFilePath());","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"leeweiming3"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"leeweiming3"},"content":"    public void saveApplicationList(UniqueApplicationList applicationList, Path filePath) throws IOException {","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"leeweiming3"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"leeweiming3"},"content":"        applicationStorage.saveApplicationList(applicationList, filePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leeweiming3":36,"-":71,"chiralcentre":37}},{"path":"src/main/java/seedu/hirehub/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":" * Represents a storage for {@link seedu.hirehub.model.UserPrefs}.","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"     * Saves the given {@link seedu.hirehub.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"chiralcentre":6}},{"path":"src/main/java/seedu/hirehub/ui/ApplicationCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":" * An UI component that displays information of a {@code Application}.","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"public class ApplicationCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"    private static final String FXML \u003d \"ApplicationListCard.fxml\";","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    public final Application application;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"    public final Person person;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"    public final Job job;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"    private Label name;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"    private Label id;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"    private Label email;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"    private Label title;","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"    private Label status;","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"    public ApplicationCard(Application application, int displayedIndex) {","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"        super(FXML);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"        this.application \u003d application;","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"        this.job \u003d application.getJob();","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"        this.person \u003d application.getPerson();","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"        id.setText(String.valueOf(displayedIndex) + \".\");","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"        title.setText(job.getTitle());","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"        status.setText(application.getStatus().value);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"0liverkong":55}},{"path":"src/main/java/seedu/hirehub/ui/ApplicationListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":" * Panel containing the list of applications.","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"public class ApplicationListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    private static final String FXML \u003d \"ApplicationListPanel.fxml\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ApplicationListPanel.class);","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"    private ListView\u003cApplication\u003e applicationListView;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"     * Creates a {@code ApplicationListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"    public ApplicationListPanel(ObservableList\u003cApplication\u003e applicationList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"        super(FXML);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"        applicationListView.setItems(applicationList);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"        applicationListView.setCellFactory(listView -\u003e new ApplicationListViewCell());","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"    class ApplicationListViewCell extends ListCell\u003cApplication\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"        protected void updateItem(Application application, boolean empty) {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"            super.updateItem(application, empty);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"            if (empty || application \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"                setText(null);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"            } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"                setGraphic(new ApplicationCard(application, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"0liverkong":48}},{"path":"src/main/java/seedu/hirehub/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"         * @see seedu.hirehub.logic.Logic#execute(String)","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":80,"chiralcentre":5}},{"path":"src/main/java/seedu/hirehub/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-w08-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":99,"logical-1985516":1,"chiralcentre":2}},{"path":"src/main/java/seedu/hirehub/ui/JobCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":" * An UI component that displays information of a {@code Job}.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"public class JobCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"    private static final String FXML \u003d \"JobListCard.fxml\";","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"    public final Job job;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"    private Label id;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"    private Label title;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"    private Label description;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"    private Label vacancy;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"     * Creates a {@code JobCard} with the given {@code Job} and index to display.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"    public JobCard(Job job, int displayedIndex) {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"        super(FXML);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"        this.job \u003d job;","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"        title.setText(job.getTitle());","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"        description.setText(job.getDescription());","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"        vacancy.setText(String.valueOf(job.getVacancy()));","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"0liverkong":47}},{"path":"src/main/java/seedu/hirehub/ui/JobListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"public class JobListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    private static final String FXML \u003d \"JobListPanel.fxml\";","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"    private ListView\u003cJob\u003e jobListView;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"     * Creates a {@code JobListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"    public JobListPanel(ObservableList\u003cJob\u003e jobList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"        super(FXML);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"        jobListView.setItems(jobList);","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"        jobListView.setCellFactory(listView -\u003e new JobListViewCell());","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Job} using a {@code JobCard}.","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"    class JobListViewCell extends ListCell\u003cJob\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"        protected void updateItem(Job job, boolean empty) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"            super.updateItem(job, empty);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"            if (empty || job \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"                setText(null);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"            } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"                setGraphic(new JobCard(job, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"0liverkong":48}},{"path":"src/main/java/seedu/hirehub/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Logic;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"    private JobListPanel jobListPanel;","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"    private ApplicationListPanel applicationListPanel;","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"    private StackPane jobListPanelPlaceholder;","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"    private StackPane applicationListPanelPlaceholder;","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"0liverkong"},"content":"    private HBox dataColumns;","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"0liverkong"},"content":"        jobListPanel \u003d new JobListPanel(logic.getFilteredJobList());","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"0liverkong"},"content":"        jobListPanelPlaceholder.getChildren().add(jobListPanel.getRoot());","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"0liverkong"},"content":"        applicationListPanel \u003d new ApplicationListPanel(logic.getFilteredApplicationList());","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"0liverkong"},"content":"        applicationListPanelPlaceholder.getChildren().add(applicationListPanel.getRoot());","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"chiralcentre"},"content":"     * @see seedu.hirehub.logic.Logic#execute(String)","lastModifiedDate":"2024-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"0liverkong":16,"-":188,"chiralcentre":8}},{"path":"src/main/java/seedu/hirehub/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"    private Label country;","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"    private Label comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"        country.setText(person.getCountry().getDisplayCountry());","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"        comment.setText(person.getComment().value);","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":54,"chiralcentre":7}},{"path":"src/main/java/seedu/hirehub/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":45,"chiralcentre":3}},{"path":"src/main/java/seedu/hirehub/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":27,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"chiralcentre":1}},{"path":"src/main/java/seedu/hirehub/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.MainApp;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.LogsCenter;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.StringUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Logic;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":83,"chiralcentre":5}},{"path":"src/main/java/seedu/hirehub/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.MainApp;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"chiralcentre":2}},{"path":"src/main/resources/view/ApplicationListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"                       text\u003d\"Email\"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"                       prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"                       minWidth\u003d\"100\"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"                       alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"                       text\u003d\"Job title\"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"                       prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"                       minWidth\u003d\"100\"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"                       alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$title\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"                       text\u003d\"Status\"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"                       prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"                       minWidth\u003d\"100\"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"                       alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"0liverkong":56}},{"path":"src/main/resources/view/ApplicationListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"    \u003cListView fx:id\u003d\"applicationListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"0liverkong":8}},{"path":"src/main/resources/view/JobListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"                       text\u003d\"Description\"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"                       prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"                       minWidth\u003d\"100\"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"                       alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"                       text\u003d\"Vacancies\"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"                       prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"                       minWidth\u003d\"100\"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"                       alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"                \u003cLabel fx:id\u003d\"vacancy\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$vacancy\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"0liverkong":48}},{"path":"src/main/resources/view/JobListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"    \u003cListView fx:id\u003d\"jobListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"0liverkong":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.shape.Box?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"         title\u003d\"HireHub\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"        \u003cHBox prefHeight\u003d\"1E10\" maxWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" prefWidth\u003d\"1E10\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"            \u003cLabel text\u003d\"Candidates\"","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"                   textAlignment\u003d\"RIGHT\"","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"0liverkong"},"content":"                   HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"0liverkong"},"content":"                   prefWidth\u003d\"1E10\"","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"0liverkong"},"content":"                   prefHeight\u003d\"100\"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"                   style\u003d\"-fx-alignment:center; -fx-font-size:32pt; -fx-font-family:Segoe UI Light; -fx-text-fill: white;\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"0liverkong"},"content":"          \u003cVBox fx:id\u003d \"jobList\" styleClass\u003d\"pane-with-border\" prefWidth\u003d\"1E10\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"0liverkong"},"content":"            \u003cLabel text\u003d\"Jobs\"","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"0liverkong"},"content":"                   textAlignment\u003d\"RIGHT\"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"0liverkong"},"content":"                   HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"0liverkong"},"content":"                   prefWidth\u003d\"1E10\"","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"0liverkong"},"content":"                   prefHeight\u003d\"100\"","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"0liverkong"},"content":"                   style\u003d\"-fx-alignment:center; -fx-font-size:32pt; -fx-font-family:Segoe UI Light; -fx-text-fill: white;\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"0liverkong"},"content":"          \u003cStackPane fx:id\u003d\"jobListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"0liverkong"},"content":"          \u003cVBox fx:id\u003d \"applicationList\" styleClass\u003d\"pane-with-border\" prefWidth\u003d\"1E10\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"0liverkong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"0liverkong"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"0liverkong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"0liverkong"},"content":"            \u003cLabel text\u003d\"Applications\"","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"0liverkong"},"content":"                   textAlignment\u003d\"RIGHT\"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"0liverkong"},"content":"                   HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"0liverkong"},"content":"                   prefWidth\u003d\"1E10\"","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"0liverkong"},"content":"                   prefHeight\u003d\"100\"","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"0liverkong"},"content":"                   style\u003d\"-fx-alignment:center; -fx-font-size:32pt; -fx-font-family:Segoe UI Light; -fx-text-fill: white;\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"0liverkong"},"content":"            \u003cStackPane fx:id\u003d\"applicationListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"0liverkong"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"0liverkong"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"0liverkong":33,"acekhoon":1,"-":58}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"               text\u003d\"Tags\"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"               prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"               minWidth\u003d\"70\"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"               alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"               text\u003d\"Phone\"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"               prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"               minWidth\u003d\"70\"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"               alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"               text\u003d\"Country\"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"               prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"               minWidth\u003d\"70\"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"               alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel fx:id\u003d\"country\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$country\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"               text\u003d\"Email\"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"0liverkong"},"content":"               prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"0liverkong"},"content":"               minWidth\u003d\"70\"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"0liverkong"},"content":"               alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"0liverkong"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"0liverkong"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel style\u003d\"-fx-background-color:gray; -fx-font-size:10pt\"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"0liverkong"},"content":"               text\u003d\"Comment\"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"0liverkong"},"content":"               prefHeight\u003d\"22\"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"0liverkong"},"content":"               minWidth\u003d\"70\"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"0liverkong"},"content":"               alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"0liverkong"},"content":"        \u003cLabel fx:id\u003d\"comment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$comment\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"0liverkong":41,"-":31}},{"path":"src/test/java/seedu/hirehub/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":88,"chiralcentre":1}},{"path":"src/test/java/seedu/hirehub/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.core;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"chiralcentre":1}},{"path":"src/test/java/seedu/hirehub/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.core;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"-":15,"chiralcentre":1}},{"path":"src/test/java/seedu/hirehub/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.core;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.core.index;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":65,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":34,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":105,"chiralcentre":3}},{"path":"src/test/java/seedu/hirehub/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.Config;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":112,"chiralcentre":4}},{"path":"src/test/java/seedu/hirehub/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.SerializableTestClass;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.TestUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":42,"chiralcentre":3}},{"path":"src/test/java/seedu/hirehub/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":141,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.COUNTRY_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.CommandResult;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.ListCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.storage.JsonApplicationStorage;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.JsonJobsStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.storage.StorageManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"        JsonJobsStorage jobsStorage \u003d new JsonJobsStorage(temporaryFolder.resolve(\"jobs.json\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"        JsonApplicationStorage applicationStorage \u003d new JsonApplicationStorage(","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"            temporaryFolder.resolve(\"applications.json\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"            jobsStorage, applicationStorage);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"leeweiming3"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"leeweiming3"},"content":"            new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"chiralcentre"},"content":"        JsonJobsStorage jobsStorage \u003d new JsonJobsStorage(temporaryFolder.resolve(\"ExceptionJobs.json\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"leeweiming3"},"content":"        JsonApplicationStorage applicationStorage \u003d new JsonApplicationStorage(","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"leeweiming3"},"content":"            temporaryFolder.resolve(\"ExceptionApplications.json\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"leeweiming3"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, jobsStorage,","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"leeweiming3"},"content":"            applicationStorage);","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"chiralcentre"},"content":"                + EMAIL_DESC_AMY + COUNTRY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"leeweiming3":12,"-":148,"chiralcentre":28}},{"path":"src/test/java/seedu/hirehub/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"            new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"            new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"leeweiming3":5,"-":36,"chiralcentre":11}},{"path":"src/test/java/seedu/hirehub/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"chiralcentre"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"chiralcentre"},"content":"        public Path getJobsFilePath() {","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"chiralcentre"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"chiralcentre"},"content":"        public void setJobsFilePath(Path jobsFilePath) {","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"chiralcentre"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"0liverkong"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"0liverkong"},"content":"        public Optional\u003cPerson\u003e getLastMentionedPerson() {","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"0liverkong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"0liverkong"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"0liverkong"},"content":"        public void setLastMentionedPerson(Person p) {","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"0liverkong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"acekhoon"},"content":"        public boolean hasJob(Job job) {","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"acekhoon"},"content":"        public void deleteJob(Job target) {","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"acekhoon"},"content":"        public void addJob(Job job) {","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"acekhoon"},"content":"        public void setJob(Job target, Job editedJob) {","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"chiralcentre"},"content":"        public void setLastMentionedJob(Job job) {","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"chiralcentre"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"chiralcentre"},"content":"        public Optional\u003cJob\u003e getLastMentionedJob() {","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"chiralcentre"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"acekhoon"},"content":"        public ObservableList\u003cJob\u003e getFilteredJobList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"acekhoon"},"content":"        public void updateFilteredJobList(Predicate\u003cJob\u003e predicate) {","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"acekhoon"},"content":"        public boolean hasApplication(Application application) {","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":232,"author":{"gitId":"acekhoon"},"content":"        public void deleteApplication(Application application) {","lastModifiedDate":"2024-03-27"},{"lineNumber":233,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"acekhoon"},"content":"        public void addApplication(Application application) {","lastModifiedDate":"2024-03-27"},{"lineNumber":238,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"acekhoon"},"content":"        public void setApplication(Application target, Application editedApplication) {","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":244,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"logical-1985516"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"logical-1985516"},"content":"        public UniqueApplicationList getApplicationList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"logical-1985516"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":249,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":251,"author":{"gitId":"logical-1985516"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"logical-1985516"},"content":"        public void replaceApplications(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"logical-1985516"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"chiralcentre"},"content":"        public void replaceApplications(Job oldJob, Job newJob) {","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"chiralcentre"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"logical-1985516"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"logical-1985516"},"content":"        public void removeApplications(Person target) {","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"logical-1985516"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"chiralcentre"},"content":"        public void removeApplications(Job job) {","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"chiralcentre"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"chiralcentre"},"content":"        public int countVacancy(Job job) {","lastModifiedDate":"2024-03-31"},{"lineNumber":273,"author":{"gitId":"chiralcentre"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":274,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":275,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":277,"author":{"gitId":"chiralcentre"},"content":"        public int countAccepted(Job job) {","lastModifiedDate":"2024-03-31"},{"lineNumber":278,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":279,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":280,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":281,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":282,"author":{"gitId":"acekhoon"},"content":"        public int countRemainingVacancy(String jobTitle) {","lastModifiedDate":"2024-03-30"},{"lineNumber":283,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":284,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":285,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":286,"author":{"gitId":"logical-1985516"},"content":"        public void clearApplications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":287,"author":{"gitId":"logical-1985516"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":288,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":289,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":290,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":291,"author":{"gitId":"acekhoon"},"content":"        public ObservableList\u003cApplication\u003e getFilteredApplicationList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":292,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":293,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":294,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":295,"author":{"gitId":"acekhoon"},"content":"        public void setLastMentionedApplication(Application app) {","lastModifiedDate":"2024-03-28"},{"lineNumber":296,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":297,"author":{"gitId":"acekhoon"},"content":"        };","lastModifiedDate":"2024-03-28"},{"lineNumber":298,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":299,"author":{"gitId":"acekhoon"},"content":"        public Optional\u003cApplication\u003e getLastMentionedApplication() {","lastModifiedDate":"2024-03-28"},{"lineNumber":300,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":301,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":302,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":303,"author":{"gitId":"chiralcentre"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":304,"author":{"gitId":"chiralcentre"},"content":"        public UniqueJobList getJobList() {","lastModifiedDate":"2024-03-31"},{"lineNumber":305,"author":{"gitId":"chiralcentre"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":306,"author":{"gitId":"chiralcentre"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":307,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":308,"author":{"gitId":"acekhoon"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":309,"author":{"gitId":"acekhoon"},"content":"        public void updateFilteredApplicationList(Predicate\u003cApplication\u003e predicate) {","lastModifiedDate":"2024-03-27"},{"lineNumber":310,"author":{"gitId":"acekhoon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":311,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":315,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":334,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"0liverkong":11,"acekhoon":78,"-":191,"logical-1985516":18,"chiralcentre":58}},{"path":"src/test/java/seedu/hirehub/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"        assertCommandSuccess(new ClearCommand().whenConfirmed(),","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"            model, ClearCommand.MESSAGE_CLEAR_CONFIRM, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"            new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"            new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"        assertCommandSuccess(new ClearCommand().whenConfirmed(),","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"            model, ClearCommand.MESSAGE_CLEAR_CONFIRM, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"leeweiming3":9,"-":21,"chiralcentre":8}},{"path":"src/test/java/seedu/hirehub/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":62,"chiralcentre":1}},{"path":"src/test/java/seedu/hirehub/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"    public static final String VALID_PHONE_AMY \u003d \"81111111\";","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"    public static final String VALID_PHONE_BOB \u003d \"92222222\";","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"    public static final String VALID_COUNTRY_AMY \u003d \"SG\";","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"    public static final String VALID_COUNTRY_BOB \u003d \"MY\";","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"    public static final String VALID_STATUS_AMY \u003d \"ACCEPTED\";","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    public static final String VALID_STATUS_BOB \u003d \"REJECTED\";","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"    public static final String VALID_COMMENT_AMY \u003d \"amy test\";","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"    public static final String VALID_COMMENT_BOB \u003d \"bob test\";","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"    public static final String COUNTRY_DESC_AMY \u003d \" \" + PREFIX_COUNTRY + VALID_COUNTRY_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"    public static final String COUNTRY_DESC_BOB \u003d \" \" + PREFIX_COUNTRY + VALID_COUNTRY_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"    public static final String COMMENT_DESC_AMY \u003d \" \" + PREFIX_COMMENT + VALID_COMMENT_AMY;","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"    public static final String COMMENT_DESC_BOB \u003d \" \" + PREFIX_COMMENT + VALID_COMMENT_BOB;","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"    public static final String INVALID_COUNTRY_DESC \u003d \" \" + PREFIX_COUNTRY; // empty string not allowed for countries","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"            + \"INTERVIEW ROUND 2\"; // not one of the statuses in enum CandidateStatus","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withCountry(VALID_COUNTRY_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withCountry(VALID_COUNTRY_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":105,"logical-1985516":8,"chiralcentre":27}},{"path":"src/test/java/seedu/hirehub/logic/commands/CommentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COMMENT_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COMMENT_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Comment;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":" * Contains integration tests (interaction with the Model) and unit tests for CommentCommand.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"public class CommentCommandTest {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"    private static final String COMMENT_STUB \u003d \"Some comment\";","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"        new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"    @Test","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"    public void execute_addCommentUnfilteredList_success() {","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withComment(COMMENT_STUB).build();","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"                new Comment(editedPerson.getComment().value));","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"        String expectedMessage \u003d String.format(CommentCommand.MESSAGE_ADD_COMMENT_SUCCESS,","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"        assertCommandSuccess(commentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"chiralcentre"},"content":"    @Test","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"    public void execute_deleteCommentUnfilteredList_success() {","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"chiralcentre"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"chiralcentre"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withComment(\"\").build();","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"                new Comment(editedPerson.getComment().value));","lastModifiedDate":"2024-03-09"},{"lineNumber":63,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"        String expectedMessage \u003d String.format(CommentCommand.MESSAGE_DELETE_COMMENT_SUCCESS,","lastModifiedDate":"2024-03-09"},{"lineNumber":65,"author":{"gitId":"chiralcentre"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-09"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"        assertCommandSuccess(commentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"    @Test","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"chiralcentre"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"chiralcentre"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"chiralcentre"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList()","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased())).withComment(COMMENT_STUB).build();","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"chiralcentre"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"chiralcentre"},"content":"                new Comment(editedPerson.getComment().value));","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"chiralcentre"},"content":"        String expectedMessage \u003d String.format(CommentCommand.MESSAGE_ADD_COMMENT_SUCCESS,","lastModifiedDate":"2024-03-09"},{"lineNumber":85,"author":{"gitId":"chiralcentre"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-09"},{"lineNumber":86,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"chiralcentre"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"chiralcentre"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"chiralcentre"},"content":"        assertCommandSuccess(commentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"chiralcentre"},"content":"    @Test","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"chiralcentre"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"chiralcentre"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"chiralcentre"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(outOfBoundIndex, new Comment(VALID_COMMENT_BOB));","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"chiralcentre"},"content":"        assertCommandFailure(commentCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"chiralcentre"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"chiralcentre"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"chiralcentre"},"content":"    @Test","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"chiralcentre"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"chiralcentre"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(outOfBoundIndex, new Comment(VALID_COMMENT_BOB));","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"chiralcentre"},"content":"        assertCommandFailure(commentCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"chiralcentre"},"content":"    @Test","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"chiralcentre"},"content":"    public void equals() {","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"chiralcentre"},"content":"        final CommentCommand standardCommand \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"chiralcentre"},"content":"                new Comment(VALID_COMMENT_AMY));","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"chiralcentre"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"chiralcentre"},"content":"        CommentCommand commandWithSameValues \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"chiralcentre"},"content":"                new Comment(VALID_COMMENT_AMY));","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"chiralcentre"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"chiralcentre"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"chiralcentre"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"chiralcentre"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"chiralcentre"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"chiralcentre"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(standardCommand.equals(new CommentCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"chiralcentre"},"content":"                new Comment(VALID_COMMENT_AMY))));","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"chiralcentre"},"content":"        // different comment -\u003e returns false","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(standardCommand.equals(new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"chiralcentre"},"content":"                new Comment(VALID_COMMENT_BOB))));","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":139,"author":{"gitId":"chiralcentre"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"leeweiming3":7,"chiralcentre":132}},{"path":"src/test/java/seedu/hirehub/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":" * {@code DeletePersonCommand}.","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"        new UniqueApplicationList());","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_CONFIRM_STAGE);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"        DeletePersonCommand initdeleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"        DeletePersonCommand initdeleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"        assertEquals(initdeleteFirstCommand, initdeleteFirstCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"        assertEquals(initdeleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"        assertNotEquals(1, initdeleteFirstCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"        assertNotEquals(null, initdeleteFirstCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"leeweiming3"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"leeweiming3"},"content":"        assertNotEquals(initdeleteFirstCommand, initdeleteSecondCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"leeweiming3"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"leeweiming3"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"leeweiming3"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"leeweiming3"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"leeweiming3"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"leeweiming3"},"content":"    public void execute_deleteValidIndexUnfilteredList_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"leeweiming3"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"leeweiming3"},"content":"        model.setLastMentionedPerson(personToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"leeweiming3"},"content":"        Command deleteCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON).whenConfirmed();","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"leeweiming3"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_CONFIRM,","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"leeweiming3"},"content":"            Messages.format(personToDelete));","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"leeweiming3"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"leeweiming3"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"leeweiming3"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"leeweiming3"},"content":"    public void execute_deleteValidIndexFilteredList_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"leeweiming3"},"content":"        CommandTestUtil.showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"leeweiming3"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"leeweiming3"},"content":"        model.setLastMentionedPerson(personToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"leeweiming3"},"content":"        Command deleteCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON).whenConfirmed();","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"leeweiming3"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_CONFIRM,","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"leeweiming3"},"content":"            Messages.format(personToDelete));","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"leeweiming3"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"leeweiming3"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"leeweiming3"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"leeweiming3"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"leeweiming3"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"leeweiming3"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"leeweiming3"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"leeweiming3"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"leeweiming3":138}},{"path":"src/test/java/seedu/hirehub/logic/commands/DeleteTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeweiming3"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"leeweiming3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.parser.ParserUtil;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DeleteTagCommand.","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"class DeleteTagCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"    private static final String TAG_1 \u003d \"owesMoney\";","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"    private static final String TAG_2 \u003d \"friends\";","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"    private static final String TAG_3 \u003d \"enthusiastic\";","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"    private static final String TAG_4 \u003d \"spiffy\";","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(),","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"        new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"    void execute_deleteTagUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"        HashSet\u003cTag\u003e editedTags \u003d new HashSet\u003c\u003e(secondPerson.getTags());","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"        assertEquals(editedTags, stringsToTags(TAG_1, TAG_2, TAG_3));","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"        editedTags.remove(new Tag(TAG_1));","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"        Person editedPerson \u003d new PersonBuilder(secondPerson)","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"                .withTags(editedTags).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"        DeleteTagCommand delCommand \u003d new DeleteTagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"                stringsToTags(TAG_1));","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UniqueJobList(),","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"            new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"        expectedModel.setPerson(secondPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"        assertCommandSuccess(delCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"    void execute_deleteMultipleTagUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"        HashSet\u003cTag\u003e editedTags \u003d new HashSet\u003c\u003e(secondPerson.getTags());","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"        assertEquals(editedTags, stringsToTags(TAG_1, TAG_2, TAG_3));","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"        editedTags.remove(new Tag(TAG_1));","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"        editedTags.remove(new Tag(TAG_2));","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"        Person editedPerson \u003d new PersonBuilder(secondPerson)","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"                .withTags(editedTags).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"        DeleteTagCommand delCommand \u003d new DeleteTagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"leeweiming3"},"content":"                stringsToTags(TAG_1, TAG_2));","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"leeweiming3"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"leeweiming3"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"leeweiming3"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UniqueJobList(),","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"leeweiming3"},"content":"            new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"leeweiming3"},"content":"        expectedModel.setPerson(secondPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"leeweiming3"},"content":"        assertCommandSuccess(delCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"leeweiming3"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"leeweiming3"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"leeweiming3"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"leeweiming3"},"content":"        HashSet\u003cTag\u003e editedTags \u003d stringsToTags(TAG_2, TAG_3);","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"leeweiming3"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList()","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"leeweiming3"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"leeweiming3"},"content":"                .withTags(editedTags).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"leeweiming3"},"content":"        DeleteTagCommand delCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, stringsToTags(TAG_1));","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"leeweiming3"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_DELETE_TAG_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"leeweiming3"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"leeweiming3"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UniqueJobList(),","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"leeweiming3"},"content":"            new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"leeweiming3"},"content":"        expectedModel.setPerson(secondPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"leeweiming3"},"content":"        assertCommandSuccess(delCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"leeweiming3"},"content":"    public void execute_missingTags_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"leeweiming3"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(secondPerson.getTags().contains(new Tag(TAG_4)));","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"leeweiming3"},"content":"        DeleteTagCommand delCommand \u003d new DeleteTagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"leeweiming3"},"content":"                stringsToTags(TAG_1, TAG_4));","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"leeweiming3"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UniqueJobList(),","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"leeweiming3"},"content":"            new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"leeweiming3"},"content":"        assertCommandFailure(delCommand, model, DeleteTagCommand.MESSAGE_TAG_NOT_PRESENT);","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"leeweiming3"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"leeweiming3"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"leeweiming3"},"content":"        DeleteTagCommand delCommand \u003d new DeleteTagCommand(outOfBoundIndex, stringsToTags(TAG_2, TAG_3));","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"leeweiming3"},"content":"        assertCommandFailure(delCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"leeweiming3"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"leeweiming3"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"leeweiming3"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"leeweiming3"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"leeweiming3"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"leeweiming3"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"leeweiming3"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"leeweiming3"},"content":"        DeleteTagCommand delCommand \u003d new DeleteTagCommand(outOfBoundIndex, stringsToTags());","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"leeweiming3"},"content":"        assertCommandFailure(delCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"leeweiming3"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"leeweiming3"},"content":"        final DeleteTagCommand standardCommand \u003d new DeleteTagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"leeweiming3"},"content":"                ParserUtil.parseTags(List.of(VALID_TAG_FRIEND)));","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"leeweiming3"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"leeweiming3"},"content":"        final DeleteTagCommand commandWithSameValues \u003d new DeleteTagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"leeweiming3"},"content":"                ParserUtil.parseTags(List.of(VALID_TAG_FRIEND)));","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"leeweiming3"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"leeweiming3"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"leeweiming3"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"leeweiming3"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"leeweiming3"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"leeweiming3"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(standardCommand.equals(new DeleteTagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"leeweiming3"},"content":"                ParserUtil.parseTags(List.of(VALID_TAG_FRIEND)))));","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"leeweiming3"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(standardCommand.equals(new DeleteTagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"leeweiming3"},"content":"                ParserUtil.parseTags(List.of(VALID_TAG_HUSBAND)))));","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"leeweiming3"},"content":"    private HashSet\u003cTag\u003e stringsToTags(String... tags) {","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"leeweiming3"},"content":"        HashSet\u003cTag\u003e hs \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"leeweiming3"},"content":"        for (String t : tags) {","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"leeweiming3"},"content":"            hs.add(new Tag(t));","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"leeweiming3"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":184,"author":{"gitId":"leeweiming3"},"content":"        return hs;","lastModifiedDate":"2024-03-30"},{"lineNumber":185,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":186,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"leeweiming3":186}},{"path":"src/test/java/seedu/hirehub/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"        new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"chiralcentre"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"leeweiming3":7,"-":157,"chiralcentre":27}},{"path":"src/test/java/seedu/hirehub/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COUNTRY_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withCountry(VALID_COUNTRY_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"chiralcentre"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", country\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"                + editPersonDescriptor.getCountry().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":58,"chiralcentre":13}},{"path":"src/test/java/seedu/hirehub/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"chiralcentre":5}},{"path":"src/test/java/seedu/hirehub/logic/commands/GetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":" * Contains integration tests (interaction with the Model) and unit tests for GetCommand.","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"public class GetCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"        new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"        new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    public void execute_getPersonAtIndex_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(GetCommand.MESSAGE_GET_PERSON_SUCCESS, 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        GetCommand command \u003d new GetCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"        List\u003cPerson\u003e lastShownList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"        Person personToGet \u003d lastShownList.get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e personToGet.equals(x);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"        GetCommand getCommand \u003d new GetCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"        assertCommandFailure(getCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"        GetCommand getCommand \u003d new GetCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"        assertCommandFailure(getCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"        final GetCommand standardCommand \u003d new GetCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"        GetCommand commandWithSameIndex \u003d new GetCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"        assertTrue(standardCommand.equals(commandWithSameIndex));","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"        assertFalse(standardCommand.equals(new GetCommand(INDEX_SECOND_PERSON)));","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"acekhoon":69,"leeweiming3":5,"chiralcentre":14}},{"path":"src/test/java/seedu/hirehub/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"chiralcentre":5}},{"path":"src/test/java/seedu/hirehub/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"            new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"            new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"leeweiming3":5,"-":29,"chiralcentre":9}},{"path":"src/test/java/seedu/hirehub/logic/commands/SearchApplicationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_APPLICATIONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalApplications.ALICE_BACK_END;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalApplications.BENSON_BACK_END;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalApplications.CARL_FRONT_END;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalApplications.DANIEL_QUANTITATIVE_RESEARCHER;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalApplications.DANIEL_QUANTITATIVE_TRADER;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalApplications.getTypicalApplicationList;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.BACK_END;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.FRONT_END;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.OFF_CYCLE;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.QUANTITATIVE_RESEARCHER;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.getTypicalJobList;","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.SearchPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.testutil.ApplicationBuilder;","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.testutil.JobBuilder;","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.testutil.SearchApplicationPredicateBuilder;","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":" * Contains integration tests (interaction with the Model) for {@code SearchApplicationCommand}.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"public class SearchApplicationCommandTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"            getTypicalApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"            getTypicalApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"    public void equals() {","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e firstDescriptor \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"                new SearchApplicationPredicateBuilder(ALICE_BACK_END).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e secondDescriptor \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"                new SearchApplicationPredicateBuilder(BENSON_BACK_END).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"        SearchApplicationCommand searchApplicationFirstCommand \u003d new SearchApplicationCommand(firstDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"        SearchApplicationCommand searchApplicationSecondCommand \u003d new SearchApplicationCommand(secondDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"        assertTrue(searchApplicationFirstCommand.equals(searchApplicationFirstCommand));","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"        assertFalse(searchApplicationFirstCommand.equals(10));","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"        assertFalse(searchApplicationFirstCommand.equals(\"String\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"        assertFalse(searchApplicationSecondCommand.equals(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"        // different Application Predicates -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"        assertFalse(searchApplicationFirstCommand.equals(searchApplicationSecondCommand));","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"    public void execute_noApplicationFound() {","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e applicationDescriptor \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"                new SearchApplicationPredicateBuilder().withJob(OFF_CYCLE).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"        SearchApplicationCommand command \u003d new SearchApplicationCommand(applicationDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e applicationDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"     * Test search_app method for searching a matching job in an uniqueFilteredApplicationList","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"    public void execute_matchJob() {","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"        Job nonExistingJob \u003d new JobBuilder().withTitle(\"Senior Data Analyst\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"acekhoon"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e firstJobDescriptor \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"                .withJob(QUANTITATIVE_RESEARCHER).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"        SearchApplicationCommand command \u003d new SearchApplicationCommand(firstJobDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e firstJobDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.singletonList(DANIEL_QUANTITATIVE_RESEARCHER),","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"                model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e secondJobDescriptor \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"acekhoon"},"content":"                .withJob(OFF_CYCLE).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchApplicationCommand(secondJobDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e secondJobDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e thirdJobDescriptor \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"acekhoon"},"content":"                .withJob(nonExistingJob).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchApplicationCommand(thirdJobDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e thirdJobDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"     * Test search_app method for searching a matching person in an uniqueFilteredApplicationList","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"acekhoon"},"content":"    public void execute_matchPerson() {","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"acekhoon"},"content":"        Person nonExistingPerson \u003d new PersonBuilder().withEmail(\"acekhoon@gmail.com\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"acekhoon"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e firstPersonDescriptor \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"acekhoon"},"content":"                .withPerson(DANIEL).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"acekhoon"},"content":"        SearchApplicationCommand command \u003d new SearchApplicationCommand(firstPersonDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e firstPersonDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(DANIEL_QUANTITATIVE_TRADER, DANIEL_QUANTITATIVE_RESEARCHER),","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"acekhoon"},"content":"                model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e secondPersonDescriptor \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":144,"author":{"gitId":"acekhoon"},"content":"                .withPerson(ALICE).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":145,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchApplicationCommand(secondPersonDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":146,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e secondPersonDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.singletonList(ALICE_BACK_END), model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e thirdPersonDescriptor \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"acekhoon"},"content":"                .withPerson(nonExistingPerson).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchApplicationCommand(thirdPersonDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e thirdPersonDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":155,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":156,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":157,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":158,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":160,"author":{"gitId":"acekhoon"},"content":"     * Test search_app method for searching a matching status in an uniqueFilteredApplicationList","lastModifiedDate":"2024-04-13"},{"lineNumber":161,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":163,"author":{"gitId":"acekhoon"},"content":"    public void execute_matchStatus() {","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"acekhoon"},"content":"        Status nonExistingStatus \u003d new Status(\"REJECTED\");","lastModifiedDate":"2024-04-13"},{"lineNumber":166,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"acekhoon"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":169,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":170,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e firstStatusDescriptor \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":171,"author":{"gitId":"acekhoon"},"content":"                .withStatus(new Status(\"OFFERED\")).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"acekhoon"},"content":"        SearchApplicationCommand command \u003d new SearchApplicationCommand(firstStatusDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":173,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e firstStatusDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":174,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(BENSON_BACK_END, DANIEL_QUANTITATIVE_RESEARCHER),","lastModifiedDate":"2024-04-13"},{"lineNumber":176,"author":{"gitId":"acekhoon"},"content":"                model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":177,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e secondStatusDescriptor \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":180,"author":{"gitId":"acekhoon"},"content":"                .withStatus(nonExistingStatus).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":181,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchApplicationCommand(secondStatusDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":182,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e secondStatusDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":183,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":184,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":185,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":186,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":187,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":188,"author":{"gitId":"acekhoon"},"content":"     * Test for search_app method given multiple searching criteria","lastModifiedDate":"2024-04-13"},{"lineNumber":189,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":190,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":191,"author":{"gitId":"acekhoon"},"content":"    public void execute_matchMultipleFields() {","lastModifiedDate":"2024-04-13"},{"lineNumber":192,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":193,"author":{"gitId":"acekhoon"},"content":"        Application testApplication \u003d new ApplicationBuilder().withStatus(new Status(\"OFFERED\"))","lastModifiedDate":"2024-04-13"},{"lineNumber":194,"author":{"gitId":"acekhoon"},"content":"                .withJob(QUANTITATIVE_RESEARCHER).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":195,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":196,"author":{"gitId":"acekhoon"},"content":"        expectedModel.addApplication(testApplication);","lastModifiedDate":"2024-04-13"},{"lineNumber":197,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":198,"author":{"gitId":"acekhoon"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-04-13"},{"lineNumber":199,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":200,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":201,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e firstMultipleFieldPredicate \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":202,"author":{"gitId":"acekhoon"},"content":"                .withPerson(CARL).withJob(FRONT_END).withStatus(new Status(\"WAITLIST\")).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":203,"author":{"gitId":"acekhoon"},"content":"        SearchApplicationCommand command \u003d new SearchApplicationCommand(firstMultipleFieldPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":204,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e firstMultipleFieldPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":205,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":206,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.singletonList(CARL_FRONT_END), model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":207,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":209,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e secondMultipleFieldPredicate \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":210,"author":{"gitId":"acekhoon"},"content":"                .withPerson(ALICE).withJob(FRONT_END).withStatus(new Status(\"OFFERED\")).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":211,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchApplicationCommand(secondMultipleFieldPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":212,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e secondMultipleFieldPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":213,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":214,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":215,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":216,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":217,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e thirdMultipleFieldPredicate \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":218,"author":{"gitId":"acekhoon"},"content":"                .withPerson(DANIEL).withStatus(new Status(\"IN_PROGRESS\")).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":219,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchApplicationCommand(thirdMultipleFieldPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":220,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e thirdMultipleFieldPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":221,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":222,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.singletonList(DANIEL_QUANTITATIVE_TRADER), model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":223,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":224,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":225,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e fourthMultipleFieldPredicate \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":226,"author":{"gitId":"acekhoon"},"content":"                .withPerson(ALICE).withJob(BACK_END).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":227,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchApplicationCommand(fourthMultipleFieldPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":228,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e fourthMultipleFieldPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":229,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":230,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.singletonList(ALICE_BACK_END),","lastModifiedDate":"2024-04-13"},{"lineNumber":231,"author":{"gitId":"acekhoon"},"content":"                model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":232,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":233,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_APPLICATIONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":234,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cApplication\u003e fifthMultipleFieldPredicate \u003d new SearchApplicationPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":235,"author":{"gitId":"acekhoon"},"content":"                .withJob(QUANTITATIVE_RESEARCHER).withStatus(new Status(\"OFFERED\")).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":236,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchApplicationCommand(fifthMultipleFieldPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":237,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredApplicationList(x -\u003e fifthMultipleFieldPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":238,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":239,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(DANIEL_QUANTITATIVE_RESEARCHER, testApplication),","lastModifiedDate":"2024-04-13"},{"lineNumber":240,"author":{"gitId":"acekhoon"},"content":"                model.getFilteredApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":241,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":242,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"acekhoon":242}},{"path":"src/test/java/seedu/hirehub/logic/commands/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.SearchCommand.SearchPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.SearchPersonDescriptorBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":" * Contains integration tests (interaction with the Model) for {@code SearchCommand}.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"public class SearchCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"        new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"        new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor firstDescriptor \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"                new SearchPersonDescriptorBuilder().withName(\"first\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor secondDescriptor \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"                new SearchPersonDescriptorBuilder().withName(\"second\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand searchFirstCommand \u003d new SearchCommand(firstDescriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand searchSecondCommand \u003d new SearchCommand(secondDescriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        assertTrue(searchFirstCommand.equals(searchFirstCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand searchFirstCommandCopy \u003d new SearchCommand(firstDescriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        assertTrue(searchFirstCommand.equals(searchFirstCommandCopy));","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(searchFirstCommand.equals(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(searchFirstCommand.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(searchFirstCommand.equals(searchSecondCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"    public void execute_noPersonFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor descriptor \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"                new SearchPersonDescriptorBuilder().withName(\"keyword\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand command \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.updateFilteredPersonList(descriptor.getPredicate());","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"    public void execute_matchSubstring() {","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"        Person alex \u003d new PersonBuilder().withName(\"Alex Meyer\").withPhone(\"+65 94822245\")","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"                .withEmail(\"alex@example.com\").withCountry(\"US\").withComment(\"Good job\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"        Person belle \u003d new PersonBuilder().withName(\"Belle Meyer\").withPhone(\"+65 94822245\")","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"                .withEmail(\"bellewerner@example.com\").withCountry(\"US\").withComment(\"Good work\")","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"                .build();","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.addPerson(alex);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.addPerson(belle);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor descriptor \u003d new SearchPersonDescriptorBuilder().withName(\"Meier\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand command \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.updateFilteredPersonList(descriptor.getPredicate());","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withTags(\"friend\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"        command \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.updateFilteredPersonList(descriptor.getPredicate());","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withComment(\"Good\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"        command \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.updateFilteredPersonList(descriptor.getPredicate());","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(Arrays.asList(alex, belle), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"    public void execute_matchExact() {","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"        Person belle \u003d new PersonBuilder().withName(\"Belle Meyer\").withPhone(\"+65 94822245\")","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"                .withEmail(\"bellewerner@example.com\").withCountry(\"US\").withComment(\"Good work\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.addPerson(belle);","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor descriptor \u003d new SearchPersonDescriptorBuilder().withPhone(\"94822245\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand command \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.updateFilteredPersonList(descriptor.getPredicate());","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(Collections.singletonList(ELLE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withEmail(\"werner@example.com\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"        command \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.updateFilteredPersonList(descriptor.getPredicate());","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(Collections.singletonList(ELLE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withCountry(\"SG\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"        command \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.updateFilteredPersonList(descriptor.getPredicate());","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"logical-1985516"},"content":"    public void execute_multipleFields() {","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"logical-1985516"},"content":"        Person belle \u003d new PersonBuilder().withName(\"Belle Meyer\").withPhone(\"+65 94822245\")","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"                .withEmail(\"bellewerner@example.com\").withCountry(\"US\").withComment(\"Good work\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.addPerson(belle);","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"logical-1985516"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"logical-1985516"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor descriptor \u003d new SearchPersonDescriptorBuilder().withName(\"B\")","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"logical-1985516"},"content":"                .withComment(\"work\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand command \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.updateFilteredPersonList(descriptor.getPredicate());","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"logical-1985516"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(Collections.singletonList(belle), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"logical-1985516"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withName(\"Belle\").withEmail(\"werner@example.com\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"logical-1985516"},"content":"        command \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"logical-1985516"},"content":"        expectedModel.updateFilteredPersonList(descriptor.getPredicate());","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"logical-1985516"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"logical-1985516"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor descriptor \u003d new SearchPersonDescriptorBuilder().withName(\"keyword\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand searchCommand \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d SearchCommand.class.getCanonicalName() + \"{searchPersonDescriptor\u003d\" + descriptor + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, searchCommand.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"acekhoon":1,"leeweiming3":5,"logical-1985516":145,"chiralcentre":16}},{"path":"src/test/java/seedu/hirehub/logic/commands/SearchJobCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_JOBS_LISTED_OVERVIEW;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.BACK_END;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.FRONT_END;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.OFF_CYCLE;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.QUANTITATIVE_RESEARCHER;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.QUANTITATIVE_TRADER;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.getTypicalJobList;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.SearchPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.testutil.JobBuilder;","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.testutil.SearchJobPredicateBuilder;","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":" * Contains integration tests (interaction with the Model) for {@code SearchJobCommand}.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"public class SearchJobCommandTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"            new UniqueApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"            new UniqueApplicationList());","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    public void equals() {","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e firstDescriptor \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"                new SearchJobPredicateBuilder().withTitle(\"firstTitle\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e secondDescriptor \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"                new SearchJobPredicateBuilder().withTitle(\"secondTitle\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"        SearchJobCommand searchJobFirstCommand \u003d new SearchJobCommand(firstDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"        SearchJobCommand searchJobSecondCommand \u003d new SearchJobCommand(secondDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"        assertTrue(searchJobFirstCommand.equals(searchJobFirstCommand));","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        assertFalse(searchJobFirstCommand.equals(1));","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"        assertFalse(searchJobFirstCommand.equals(\"Random String\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"        assertFalse(searchJobSecondCommand.equals(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"        // different Job Predicates -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"        assertFalse(searchJobFirstCommand.equals(searchJobSecondCommand));","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"    public void execute_noJobFound() {","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e jobDescriptor \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"                new SearchJobPredicateBuilder().withTitle(\"keyword\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"        SearchJobCommand command \u003d new SearchJobCommand(jobDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e jobDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"     * Test search_job method for job title for both exact matching and substring matching","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"    public void execute_matchTitle() {","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"        Job testJob \u003d new JobBuilder().withTitle(\"Software Engineer (London)\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"        expectedModel.addJob(testJob);","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e firstTitleDescriptor \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"Software Engineer\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"        SearchJobCommand command \u003d new SearchJobCommand(firstTitleDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e firstTitleDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(BACK_END, FRONT_END, OFF_CYCLE, testJob), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e secondTitleDescriptor \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"Software Engineer (London)\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(secondTitleDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e secondTitleDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.singletonList(testJob), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e thirdTitleDescriptor \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"Quantitative\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(thirdTitleDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e thirdTitleDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(QUANTITATIVE_RESEARCHER, QUANTITATIVE_TRADER),","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"                model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 6);","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e fourthTitleDescriptor \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\" \").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(fourthTitleDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e fourthTitleDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(BACK_END, FRONT_END, OFF_CYCLE, QUANTITATIVE_RESEARCHER,","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"acekhoon"},"content":"                QUANTITATIVE_TRADER, testJob), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e fifthTitleDescriptor \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"SoftWare EngiNeer\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(fifthTitleDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e fifthTitleDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e sixthTitleDescriptor \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"   \").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(sixthTitleDescriptor);","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e sixthTitleDescriptor.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"acekhoon"},"content":"     * Test search_job method for description for both exact matching and substring matching","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"acekhoon"},"content":"    public void execute_matchDescription() {","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":144,"author":{"gitId":"acekhoon"},"content":"        Job testJob \u003d new JobBuilder().withDescription(\"Seeking for international olympiad medalists\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":145,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":146,"author":{"gitId":"acekhoon"},"content":"        expectedModel.addJob(testJob);","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"acekhoon"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e firstDescriptionPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"acekhoon"},"content":"                .withDescription(\"Seeking for\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"acekhoon"},"content":"        SearchJobCommand command \u003d new SearchJobCommand(firstDescriptionPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e firstDescriptionPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":155,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":156,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(QUANTITATIVE_RESEARCHER, testJob), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":157,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":158,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e secondDescriptionPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":160,"author":{"gitId":"acekhoon"},"content":"                .withDescription(\"Seeking for candidates strong in mathematics and statistics.\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":161,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(secondDescriptionPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e secondDescriptionPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":163,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.singletonList(QUANTITATIVE_RESEARCHER), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":166,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e thirdDescriptionPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"acekhoon"},"content":"                .withDescription(\"developer\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":169,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(thirdDescriptionPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":170,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e thirdDescriptionPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":171,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(BACK_END, FRONT_END),","lastModifiedDate":"2024-04-13"},{"lineNumber":173,"author":{"gitId":"acekhoon"},"content":"                model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":174,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 6);","lastModifiedDate":"2024-04-13"},{"lineNumber":176,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e fourthDescriptionPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":177,"author":{"gitId":"acekhoon"},"content":"                .withDescription(\" \").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(fourthDescriptionPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e fourthDescriptionPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":180,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":181,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(BACK_END, FRONT_END, OFF_CYCLE, QUANTITATIVE_RESEARCHER,","lastModifiedDate":"2024-04-13"},{"lineNumber":182,"author":{"gitId":"acekhoon"},"content":"                QUANTITATIVE_TRADER, testJob), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":183,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":184,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":185,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e fifthDescriptionPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":186,"author":{"gitId":"acekhoon"},"content":"                .withDescription(\"LooKing\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":187,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(fifthDescriptionPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":188,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e fifthDescriptionPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":189,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":190,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":191,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":192,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":193,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e sixthDescriptionPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":194,"author":{"gitId":"acekhoon"},"content":"                .withDescription(\"   \").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":195,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(sixthDescriptionPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":196,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e sixthDescriptionPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":197,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":198,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":199,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":200,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":201,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":202,"author":{"gitId":"acekhoon"},"content":"     * Test search_job method for vacancy","lastModifiedDate":"2024-04-13"},{"lineNumber":203,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":204,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":205,"author":{"gitId":"acekhoon"},"content":"    public void execute_matchVacancy() {","lastModifiedDate":"2024-04-13"},{"lineNumber":206,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":207,"author":{"gitId":"acekhoon"},"content":"        Job testJob \u003d new JobBuilder().withVacancy(3).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":209,"author":{"gitId":"acekhoon"},"content":"        expectedModel.addJob(testJob);","lastModifiedDate":"2024-04-13"},{"lineNumber":210,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":211,"author":{"gitId":"acekhoon"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-04-13"},{"lineNumber":212,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":213,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":214,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e firstVacancyPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":215,"author":{"gitId":"acekhoon"},"content":"                .withVacancy(3).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":216,"author":{"gitId":"acekhoon"},"content":"        SearchJobCommand command \u003d new SearchJobCommand(firstVacancyPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":217,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e firstVacancyPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":218,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":219,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(FRONT_END, testJob), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":220,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":221,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":222,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e secondVacancyPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":223,"author":{"gitId":"acekhoon"},"content":"                .withVacancy(5).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":224,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(secondVacancyPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":225,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e secondVacancyPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":226,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":227,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(OFF_CYCLE, QUANTITATIVE_RESEARCHER),","lastModifiedDate":"2024-04-13"},{"lineNumber":228,"author":{"gitId":"acekhoon"},"content":"                model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":229,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":230,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":231,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e thirdVacancyPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":232,"author":{"gitId":"acekhoon"},"content":"                .withVacancy(0).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":233,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(thirdVacancyPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":234,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e thirdVacancyPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":235,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":236,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":237,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":238,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":239,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e fourthVacancyPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":240,"author":{"gitId":"acekhoon"},"content":"                .withVacancy(-1).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":241,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(thirdVacancyPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":242,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e fourthVacancyPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":243,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":244,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":245,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":246,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":247,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":248,"author":{"gitId":"acekhoon"},"content":"     * Test for search_job method given multiple searching criteria","lastModifiedDate":"2024-04-13"},{"lineNumber":249,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":250,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":251,"author":{"gitId":"acekhoon"},"content":"    public void execute_matchMultipleFields() {","lastModifiedDate":"2024-04-13"},{"lineNumber":252,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":253,"author":{"gitId":"acekhoon"},"content":"        Job testJob \u003d new JobBuilder().withVacancy(1).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":254,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":255,"author":{"gitId":"acekhoon"},"content":"        expectedModel.addJob(testJob);","lastModifiedDate":"2024-04-13"},{"lineNumber":256,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":257,"author":{"gitId":"acekhoon"},"content":"        model \u003d expectedModel;","lastModifiedDate":"2024-04-13"},{"lineNumber":258,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":259,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":260,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e firstMultipleFieldsPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":261,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"Software\").withDescription(\"Looking for\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":262,"author":{"gitId":"acekhoon"},"content":"        SearchJobCommand command \u003d new SearchJobCommand(firstMultipleFieldsPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":263,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e firstMultipleFieldsPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":264,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":265,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(BACK_END, FRONT_END), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":266,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":267,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":268,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e secondMultipleFieldsPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":269,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"SoftWare Engineer\").withDescription(\"Looking for\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":270,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(secondMultipleFieldsPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":271,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e secondMultipleFieldsPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":272,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":273,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":274,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":275,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":276,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e thirdMultipleFieldsPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":277,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"Off-Cycle\").withDescription(\"Off-cycle full stack\").withVacancy(5).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":278,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(thirdMultipleFieldsPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":279,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e thirdMultipleFieldsPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":280,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":281,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.singletonList(OFF_CYCLE), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":282,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":283,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":284,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e fourthMultipleFieldsPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":285,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"S\").withVacancy(1).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":286,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(fourthMultipleFieldsPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":287,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e fourthMultipleFieldsPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":288,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":289,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Arrays.asList(BACK_END, testJob), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":290,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":291,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":292,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e fifthMultipleFieldsPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":293,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"Software Engineer\").withDescription(\"Looking for\").withVacancy(0).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":294,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(fifthMultipleFieldsPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":295,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e fifthMultipleFieldsPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":296,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":297,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":298,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":299,"author":{"gitId":"acekhoon"},"content":"        expectedMessage \u003d String.format(MESSAGE_JOBS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":300,"author":{"gitId":"acekhoon"},"content":"        SearchPredicate\u003cJob\u003e sixthMultipleFieldsPredicate \u003d new SearchJobPredicateBuilder()","lastModifiedDate":"2024-04-13"},{"lineNumber":301,"author":{"gitId":"acekhoon"},"content":"                .withTitle(\"S\").withDescription(\"IOI Gold\").withVacancy(1).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":302,"author":{"gitId":"acekhoon"},"content":"        command \u003d new SearchJobCommand(sixthMultipleFieldsPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":303,"author":{"gitId":"acekhoon"},"content":"        expectedModel.updateFilteredJobList(x -\u003e sixthMultipleFieldsPredicate.test(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":304,"author":{"gitId":"acekhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-13"},{"lineNumber":305,"author":{"gitId":"acekhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredJobList());","lastModifiedDate":"2024-04-13"},{"lineNumber":306,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":307,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"acekhoon":307}},{"path":"src/test/java/seedu/hirehub/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"leeweiming3"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"leeweiming3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.ParserUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":" * Contains integration tests (interaction with the Model) and unit tests for TagCommand.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"class TagCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"    private static final String TAG_STUB_1 \u003d \"Tagme1\";","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"    private static final String TAG_STUB_2 \u003d \"Epic\";","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"    private static final Set\u003cTag\u003e TAGS_STUB \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"            Arrays.asList(new Tag(TAG_STUB_1), new Tag(TAG_STUB_2)));","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UniqueJobList(), new UserPrefs(),","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"    void execute_addTagUnfilteredList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"        HashSet\u003cTag\u003e editedTags \u003d new HashSet\u003c\u003e(firstPerson.getTags());","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"        editedTags.addAll(TAGS_STUB);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson)","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"                .withTags(editedTags).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"        TagCommand tagCommand \u003d new TagCommand(INDEX_FIRST_PERSON, TAGS_STUB);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"chiralcentre"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"        HashSet\u003cTag\u003e editedTags \u003d new HashSet\u003c\u003e(firstPerson.getTags());","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"leeweiming3"},"content":"        editedTags.addAll(TAGS_STUB);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList()","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"                .withTags(editedTags).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"leeweiming3"},"content":"        TagCommand tagCommand \u003d new TagCommand(INDEX_FIRST_PERSON, TAGS_STUB);","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"leeweiming3"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"leeweiming3"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"chiralcentre"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), new UserPrefs(), new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"leeweiming3"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"leeweiming3"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"leeweiming3"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"leeweiming3"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"leeweiming3"},"content":"        TagCommand tagCommand \u003d new TagCommand(outOfBoundIndex, TAGS_STUB);","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"leeweiming3"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"leeweiming3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"leeweiming3"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"leeweiming3"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"leeweiming3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"leeweiming3"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"leeweiming3"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"leeweiming3"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"leeweiming3"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"leeweiming3"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"leeweiming3"},"content":"        TagCommand tagCommand \u003d new TagCommand(outOfBoundIndex, TAGS_STUB);","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"leeweiming3"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"leeweiming3"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"leeweiming3"},"content":"        final TagCommand standardCommand \u003d new TagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"leeweiming3"},"content":"                ParserUtil.parseTags(List.of(VALID_TAG_FRIEND)));","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"leeweiming3"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"leeweiming3"},"content":"        final TagCommand commandWithSameValues \u003d new TagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"leeweiming3"},"content":"                ParserUtil.parseTags(List.of(VALID_TAG_FRIEND)));","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"leeweiming3"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"leeweiming3"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"leeweiming3"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"leeweiming3"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"leeweiming3"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"leeweiming3"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(standardCommand.equals(new TagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"leeweiming3"},"content":"                ParserUtil.parseTags(List.of(VALID_TAG_FRIEND)))));","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"leeweiming3"},"content":"        // different comment -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(standardCommand.equals(new TagCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"leeweiming3"},"content":"                ParserUtil.parseTags(List.of(VALID_TAG_HUSBAND)))));","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"leeweiming3":114,"chiralcentre":23}},{"path":"src/test/java/seedu/hirehub/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.COUNTRY_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.COUNTRY_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_COUNTRY_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COUNTRY_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"chiralcentre"},"content":"                + COUNTRY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"chiralcentre"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"chiralcentre"},"content":"                + COUNTRY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"                + COUNTRY_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, COUNTRY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"chiralcentre"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COUNTRY));","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"chiralcentre"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + COUNTRY_DESC_AMY","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"chiralcentre"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_COUNTRY, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, INVALID_COUNTRY_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COUNTRY));","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_COUNTRY_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"chiralcentre"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_COUNTRY));","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":136,"author":{"gitId":"chiralcentre"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"chiralcentre"},"content":"                + COUNTRY_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COUNTRY_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + COUNTRY_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + COUNTRY_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_COUNTRY_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_COUNTRY_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + COUNTRY_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + COUNTRY_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + COUNTRY_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_COUNTRY_DESC","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"chiralcentre"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Country.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COUNTRY_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_COUNTRY_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"chiralcentre"},"content":"                + COUNTRY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":126,"chiralcentre":70}},{"path":"src/test/java/seedu/hirehub/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.ListCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"            DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"leeweiming3":4,"-":66,"chiralcentre":17}},{"path":"src/test/java/seedu/hirehub/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"chiralcentre":1}},{"path":"src/test/java/seedu/hirehub/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":36,"chiralcentre":3}},{"path":"src/test/java/seedu/hirehub/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.logic.commands.DeletePersonCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":" * outside of the DeletePersonCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":" * same path through the DeletePersonCommand, and therefore we test only one of them.","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"leeweiming3"},"content":"    private final DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"leeweiming3":8,"-":20,"chiralcentre":5}},{"path":"src/test/java/seedu/hirehub/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.COUNTRY_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.COUNTRY_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_COUNTRY_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COUNTRY_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, \"1\" + INVALID_COUNTRY_DESC, Country.MESSAGE_CONSTRAINTS); // invalid country","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_COUNTRY_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"                + EMAIL_DESC_AMY + COUNTRY_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"chiralcentre"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withCountry(VALID_COUNTRY_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"chiralcentre"},"content":"        //","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"chiralcentre"},"content":"        userInput \u003d targetIndex.getOneBased() + COUNTRY_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"chiralcentre"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withCountry(VALID_COUNTRY_AMY).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"chiralcentre"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + COUNTRY_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"chiralcentre"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + COUNTRY_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"chiralcentre"},"content":"                + PHONE_DESC_BOB + COUNTRY_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"chiralcentre"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COUNTRY));","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"chiralcentre"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_COUNTRY_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"chiralcentre"},"content":"                + INVALID_PHONE_DESC + INVALID_COUNTRY_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"chiralcentre"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COUNTRY));","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":151,"chiralcentre":57}},{"path":"src/test/java/seedu/hirehub/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"    private static final String INVALID_COUNTRY \u003d \" \";","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    private static final String VALID_PHONE \u003d \"81234567\";","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"    private static final String VALID_COUNTRY \u003d \"SG\";","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"chiralcentre"},"content":"    public void parseCountry_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCountry((String) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"    public void parseCountry_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCountry(INVALID_COUNTRY));","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"chiralcentre"},"content":"    public void parseCountry_validValueWithoutWhitespace_returnsCountry() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"chiralcentre"},"content":"        Country expectedCountry \u003d new Country(VALID_COUNTRY);","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"chiralcentre"},"content":"        assertEquals(expectedCountry, ParserUtil.parseCountry(VALID_COUNTRY));","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"chiralcentre"},"content":"    public void parseCountry_validValueWithWhitespace_returnsTrimmedCountry() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"chiralcentre"},"content":"        String countryWithWhitespace \u003d WHITESPACE + VALID_COUNTRY + WHITESPACE;","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"chiralcentre"},"content":"        Country expectedCountry \u003d new Country(VALID_COUNTRY);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"chiralcentre"},"content":"        assertEquals(expectedCountry, ParserUtil.parseCountry(countryWithWhitespace));","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":172,"logical-1985516":1,"chiralcentre":23}},{"path":"src/test/java/seedu/hirehub/logic/parser/SearchCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.getErrorMessageForDuplicatePrefixes;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.COMMENT_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.COUNTRY_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.COUNTRY_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_COUNTRY_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COMMENT_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COUNTRY_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.SearchCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.SearchCommand.SearchPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.SearchPersonDescriptorBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"public class SearchCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"    private SearchCommandParser parser \u003d new SearchCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"    public void parse_missingOrAdditionalParts_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        // nothing specified","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, \"\", SearchCommand.MESSAGE_NO_FIELD_PROVIDED);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"        // preamble with no field specified","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"        // preamble with field specified","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, \"1 n/Alex\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"        // duplicate tags","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"                getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, INVALID_COUNTRY_DESC, Country.MESSAGE_CONSTRAINTS); // invalid country","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"        // empty tag","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"        // duplicate prefixes are captured before invalid values","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"                getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_COUNTRY_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"        String userInput \u003d PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"                + EMAIL_DESC_AMY + COUNTRY_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor descriptor \u003d new SearchPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withCountry(VALID_COUNTRY_AMY)","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand expectedCommand \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"        String userInput \u003d PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor descriptor \u003d new SearchPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand expectedCommand \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"        // name","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"        String userInput \u003d NAME_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"        SearchPersonDescriptor descriptor \u003d new SearchPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"        SearchCommand expectedCommand \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"        // phone","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"        userInput \u003d PHONE_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"        expectedCommand \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"        // email","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"        userInput \u003d EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"        expectedCommand \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"logical-1985516"},"content":"        // country","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"        userInput \u003d COUNTRY_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withCountry(VALID_COUNTRY_AMY).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"logical-1985516"},"content":"        expectedCommand \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"logical-1985516"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"logical-1985516"},"content":"        // comment","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"logical-1985516"},"content":"        userInput \u003d COMMENT_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withComment(VALID_COMMENT_AMY).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"logical-1985516"},"content":"        expectedCommand \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"logical-1985516"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"logical-1985516"},"content":"        // tags","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"logical-1985516"},"content":"        userInput \u003d TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"logical-1985516"},"content":"        expectedCommand \u003d new SearchCommand(descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"logical-1985516"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"logical-1985516"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"logical-1985516"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"logical-1985516"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"logical-1985516"},"content":"        // valid followed by invalid","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"logical-1985516"},"content":"        String userInput \u003d INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, userInput, getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"logical-1985516"},"content":"        // invalid followed by valid","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"logical-1985516"},"content":"        userInput \u003d PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, userInput, getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"logical-1985516"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"logical-1985516"},"content":"        userInput \u003d PHONE_DESC_AMY + COUNTRY_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"logical-1985516"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + COUNTRY_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"logical-1985516"},"content":"                + PHONE_DESC_BOB + COUNTRY_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"logical-1985516"},"content":"                getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COUNTRY, PREFIX_TAG));","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"logical-1985516"},"content":"        // multiple invalid values","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"logical-1985516"},"content":"        userInput \u003d INVALID_PHONE_DESC + INVALID_COUNTRY_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"logical-1985516"},"content":"                + INVALID_PHONE_DESC + INVALID_COUNTRY_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"logical-1985516"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"logical-1985516"},"content":"                getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COUNTRY));","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"logical-1985516":148,"chiralcentre":40}},{"path":"src/test/java/seedu/hirehub/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"leeweiming3"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"leeweiming3"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.TagCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"leeweiming3"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"leeweiming3"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"leeweiming3"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"leeweiming3"},"content":"    private final TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"leeweiming3"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"leeweiming3"},"content":"        // no index specified","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"leeweiming3"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"leeweiming3"},"content":"        // no field specified","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"leeweiming3"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"leeweiming3"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"leeweiming3"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"leeweiming3"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"leeweiming3"},"content":"        // negative index","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"leeweiming3"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"leeweiming3"},"content":"        // zero index","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"leeweiming3"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"leeweiming3"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"leeweiming3"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"leeweiming3"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"leeweiming3"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"leeweiming3"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"leeweiming3"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"leeweiming3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"leeweiming3"},"content":"    public void parse_allFieldsSpecified_success() throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"leeweiming3"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"leeweiming3"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"leeweiming3"},"content":"        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_FRIEND, VALID_TAG_HUSBAND));","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"leeweiming3"},"content":"        TagCommand expectedCommand \u003d new TagCommand(targetIndex, tags);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"leeweiming3"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"leeweiming3":57,"chiralcentre":17}},{"path":"src/test/java/seedu/hirehub/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COUNTRY_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCountry(VALID_COUNTRY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCountry(VALID_COUNTRY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":97,"chiralcentre":11}},{"path":"src/test/java/seedu/hirehub/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"leeweiming3"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.AddressBookBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"chiralcentre"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"hirehub/book/file/path\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/hirehub/book/file/path\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"        Path path \u003d Paths.get(\"hirehub/book/file/path\");","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"leeweiming3"},"content":"        modelManager \u003d new ModelManager(addressBook, new UniqueJobList(), userPrefs, new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"leeweiming3"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, new UniqueJobList(),","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"leeweiming3"},"content":"            userPrefs, new UniqueApplicationList());","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook,","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"leeweiming3"},"content":"            new UniqueJobList(), userPrefs, new UniqueApplicationList())));","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":126,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, new UniqueJobList(), userPrefs,","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"leeweiming3"},"content":"            new UniqueApplicationList())));","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":135,"author":{"gitId":"leeweiming3"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, new UniqueJobList(), differentUserPrefs,","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"leeweiming3"},"content":"            new UniqueApplicationList())));","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"leeweiming3":10,"-":116,"chiralcentre":12}},{"path":"src/test/java/seedu/hirehub/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":19,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/model/person/CountryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"public class CountryTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Country(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"    public void constructor_invalidCountry_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"        String invalidCountry \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Country(invalidCountry));","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"    public void isValidCountry() {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"chiralcentre"},"content":"        assertThrows(NullPointerException.class, () -\u003e Country.isValidCountry(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(Country.isValidCountry(\"\")); // empty string","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(Country.isValidCountry(\" \")); // spaces only","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(Country.isValidCountry(\"USA\")); // not an ISO-3166-1 alpha-2 code","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"        assertTrue(Country.isValidCountry(\"SG\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"chiralcentre"},"content":"        assertTrue(Country.isValidCountry(\"JP\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"chiralcentre"},"content":"        assertTrue(Country.isValidCountry(\"US\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"        Country country \u003d new Country(\"SG\");","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"chiralcentre"},"content":"        assertTrue(country.equals(new Country(\"SG\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"chiralcentre"},"content":"        assertTrue(country.equals(country));","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(country.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(country.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"chiralcentre"},"content":"        assertFalse(country.equals(new Country(\"US\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":36,"chiralcentre":21}},{"path":"src/test/java/seedu/hirehub/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":86,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"        // Keywords match phone and email, but does not match name","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"chiralcentre"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"81234567\")","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"chiralcentre"},"content":"                .withEmail(\"alice@email.com\").withCountry(\"SG\").build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":79,"logical-1985516":1,"chiralcentre":5}},{"path":"src/test/java/seedu/hirehub/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":58,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COUNTRY_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"        Person editedBob \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chiralcentre"},"content":"                .withCountry(VALID_COUNTRY_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"        // different email, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"chiralcentre"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withCountry(VALID_COUNTRY_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", country\u003d\" + ALICE.getCountry()","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"                + \", comment\u003d\" + ALICE.getComment() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"acekhoon":7,"-":72,"chiralcentre":12}},{"path":"src/test/java/seedu/hirehub/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        // local numbers","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 8 digits","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"911348924\")); // more than 8 digits","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"9011p0418\")); // alphabets within digits","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"12345678\")); // does not start with \"3\", \"6\", \"8\" or \"9\"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"93121 534\")); // space does not split numbers into 2 blocks of 4","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"93121-534\")); // hyphen does not split numbers into 2 blocks of 4","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"9011  0415\")); // double whitespaces between digits","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        // international numbers","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"+1 2\")); // less than 3 digits in the suffix","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"+1234\")); // no whitespace to denote country code","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"+ 123\")); // less than 1 digit in country code","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"+1234 123\")); // more than 3 digits in country code","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(Phone.isValidPhone(\"+123 4e32\")); // alphabets within digits","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        assertTrue(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"        assertTrue(Phone.isValidPhone(\"9312-1534\")); // hyphens within digits","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        assertTrue(Phone.isValidPhone(\"6411 6127\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"        assertTrue(Phone.isValidPhone(\"87081796\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        assertTrue(Phone.isValidPhone(\"35261934\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        assertTrue(Phone.isValidPhone(\"95261934\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        //@@author {logical-1985516}-reused","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        //Reused from","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        //https://codingnconcepts.com/java/java-regex-to-validate-phone-number","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+995 442 123456\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+93 30 539-0605\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+61 2 1255-3456\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+86 (20) 1255-3456\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+49 351 125-3456\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+62 21 6539-0605\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+98 (515) 539-0605\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+39 06 5398-0605\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+64 3 539-0605\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+63 35 539-0605\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+39 06 5398-0605\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+65 6396 0605\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+66 2 123 4567\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+44 141 222-3344\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+1 (212) 555-3456\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"+84 35 539-0605\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"        Phone phone \u003d new Phone(\"8123 4567\");","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        assertTrue(phone.equals(new Phone(\"8123 4567\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"        assertFalse(phone.equals(new Phone(\"99599599\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":70,"logical-1985516":25,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COUNTRY_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCountry(VALID_COUNTRY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"chiralcentre"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCountry(VALID_COUNTRY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":164,"chiralcentre":11}},{"path":"src/test/java/seedu/hirehub/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.model.tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"-":24,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"    private static final String INVALID_COUNTRY \u003d \" \";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"    private static final String VALID_COUNTRY \u003d BENSON.getCountry().toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"chiralcentre"},"content":"    private static final String VALID_COMMENT \u003d BENSON.getComment().toString();","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"chiralcentre"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"                VALID_EMAIL, VALID_COUNTRY, VALID_COMMENT, VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"                VALID_COUNTRY, VALID_COMMENT, VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"chiralcentre"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"                VALID_EMAIL, VALID_COUNTRY, VALID_COMMENT, VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"chiralcentre"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null,","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"                VALID_EMAIL, VALID_COUNTRY, VALID_COMMENT, VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"chiralcentre"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"                INVALID_EMAIL, VALID_COUNTRY, VALID_COMMENT, VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"                VALID_COUNTRY, VALID_COMMENT, VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"chiralcentre"},"content":"    public void toModelType_invalidCountry_throwsIllegalValueException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"                INVALID_COUNTRY, VALID_COMMENT, VALID_TAGS);","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"chiralcentre"},"content":"        String expectedMessage \u003d Country.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"    public void toModelType_nullCountry_throwsIllegalValueException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"                null, VALID_COMMENT, VALID_TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Country.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"chiralcentre"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"acekhoon"},"content":"                VALID_EMAIL, VALID_COUNTRY, VALID_COMMENT, invalidTags);","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"acekhoon":20,"-":81,"chiralcentre":23}},{"path":"src/test/java/seedu/hirehub/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"chiralcentre":9}},{"path":"src/test/java/seedu/hirehub/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.util.JsonUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.testutil.TypicalPersons;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":41,"chiralcentre":6}},{"path":"src/test/java/seedu/hirehub/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":118,"chiralcentre":5}},{"path":"src/test/java/seedu/hirehub/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.GuiSettings;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"        JsonJobsStorage jobsStorage \u003d new JsonJobsStorage(getTempFilePath(\"jobs\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"leeweiming3"},"content":"        JsonApplicationStorage applicationStorage \u003d new JsonApplicationStorage(getTempFilePath(\"applications\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, jobsStorage, applicationStorage);","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leeweiming3":2,"-":61,"chiralcentre":7}},{"path":"src/test/java/seedu/hirehub/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":31,"chiralcentre":3}},{"path":"src/test/java/seedu/hirehub/testutil/ApplicationBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.QUANTITATIVE_RESEARCHER;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":" * A utility class to help with building Application objects.","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"public class ApplicationBuilder {","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    public static final Job DEFAULT_JOB \u003d QUANTITATIVE_RESEARCHER;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    public static final Status DEFAULT_STATUS \u003d new Status(\"PRESCREEN\");","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    public static final Person DEFAULT_PERSON \u003d ALICE;","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    private Job job;","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    private Status status;","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"    private Person person;","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"     * Creates a {@code ApplicationBuilder} with the default details.","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    public ApplicationBuilder() {","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"        job \u003d DEFAULT_JOB;","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        status \u003d DEFAULT_STATUS;","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"        person \u003d DEFAULT_PERSON;","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"     * Initializes the ApplicationBuilder with the data of {@code applicationToCopy}.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    public ApplicationBuilder(Application applicationToCopy) {","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"        job \u003d applicationToCopy.getJob();","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"        status \u003d applicationToCopy.getStatus();","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"        person \u003d applicationToCopy.getPerson();","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code Job} of the {@code Application} that we are building.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"    public ApplicationBuilder withJob(Job job) {","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"        this.job \u003d job;","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code Status} of the {@code Application} that we are building.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"    public ApplicationBuilder withStatus(Status status) {","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"     * Set the {@code person} to the {@code Application} that we are building.","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"    public ApplicationBuilder withPerson(Person person) {","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"    public Application build() {","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"        return new Application(person, job, status);","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"acekhoon":69}},{"path":"src/test/java/seedu/hirehub/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":33,"chiralcentre":1}},{"path":"src/test/java/seedu/hirehub/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"chiralcentre"},"content":"        descriptor.setCountry(person.getCountry());","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"chiralcentre"},"content":"     * Sets the {@code Country} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"chiralcentre"},"content":"    public EditPersonDescriptorBuilder withCountry(String country) {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"chiralcentre"},"content":"        descriptor.setCountry(new Country(country));","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":75,"chiralcentre":12}},{"path":"src/test/java/seedu/hirehub/testutil/JobBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":" * A utility class to help with building Job objects.","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"public class JobBuilder {","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    public static final String DEFAULT_TITLE \u003d \"SWE\";","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"High Paying Job\";","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    public static final int DEFAULT_VACANCY \u003d 3;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    private String title;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    private String description;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    private int vacancy;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     * Creates a {@code JobBuilder} with the default details.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    public JobBuilder() {","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        title \u003d DEFAULT_TITLE;","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        vacancy \u003d DEFAULT_VACANCY;","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"     * Initializes the JobBuilder with the data of {@code jobToCopy}.","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    public JobBuilder(Job jobToCopy) {","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"        title \u003d jobToCopy.getTitle();","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"        description \u003d jobToCopy.getDescription();","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"        vacancy \u003d jobToCopy.getVacancy();","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code Title} of the {@code Job} that we are building.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    public JobBuilder withTitle(String title) {","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code Description} of the {@code Job} that we are building.","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"    public JobBuilder withDescription(String description) {","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"     * Set the {@code vacancy} to the {@code Job} that we are building.","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"    public JobBuilder withVacancy(int vacancy) {","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"        this.vacancy \u003d vacancy;","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"    public Job build() {","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"        return new Job(title, description, vacancy);","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"acekhoon":63}},{"path":"src/test/java/seedu/hirehub/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Comment;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"chiralcentre"},"content":"    public static final String DEFAULT_COUNTRY \u003d \"SG\";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"chiralcentre"},"content":"    public static final String DEFAULT_COMMENT \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"chiralcentre"},"content":"    private Country country;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"    private Comment comment;","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"chiralcentre"},"content":"        country \u003d new Country(DEFAULT_COUNTRY);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"chiralcentre"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"chiralcentre"},"content":"        country \u003d personToCopy.getCountry();","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"        comment \u003d personToCopy.getComment();","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"leeweiming3"},"content":"     * Set the {@code Set\u003cTag\u003e} to the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"leeweiming3"},"content":"    public PersonBuilder withTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"leeweiming3"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"leeweiming3"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"leeweiming3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"leeweiming3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"chiralcentre"},"content":"     * Sets the {@code Country} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"chiralcentre"},"content":"    public PersonBuilder withCountry(String country) {","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"chiralcentre"},"content":"        this.country \u003d new Country(country);","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"chiralcentre"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"chiralcentre"},"content":"     * Sets the {@code Comment} of the {@code Person} that we are building.","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"chiralcentre"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"chiralcentre"},"content":"    public PersonBuilder withComment(String comment) {","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"chiralcentre"},"content":"        this.comment \u003d new Comment(comment);","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"chiralcentre"},"content":"        return this;","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"chiralcentre"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"chiralcentre"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":114,"author":{"gitId":"acekhoon"},"content":"        return new Person(name, phone, email, country, comment, tags);","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"acekhoon":1,"leeweiming3":6,"-":82,"chiralcentre":28}},{"path":"src/test/java/seedu/hirehub/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.AddCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"chiralcentre"},"content":"        sb.append(PREFIX_COUNTRY + person.getCountry().value + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"chiralcentre"},"content":"        descriptor.getCountry().ifPresent(country -\u003e sb.append(PREFIX_COUNTRY).append(country.value).append(\" \"));","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":50,"chiralcentre":12}},{"path":"src/test/java/seedu/hirehub/testutil/SearchApplicationPredicateBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.SearchPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":" * A utility class to help with building SearchApplicationPredicate objects.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"public class SearchApplicationPredicateBuilder {","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    private Optional\u003cContainsKeywordsPredicate\u003cApplication, String\u003e\u003e titlePredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    private Optional\u003cContainsKeywordsPredicate\u003cApplication, Email\u003e\u003e emailPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    private Optional\u003cContainsKeywordsPredicate\u003cApplication, Status\u003e\u003e statusPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"     * Instantiates SearchApplicationPredicateBuilder instance","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    public SearchApplicationPredicateBuilder() {","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"        titlePredicate \u003d Optional.empty();","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"        emailPredicate \u003d Optional.empty();","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"        statusPredicate \u003d Optional.empty();","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"     * Returns an arraylist of predicates with fields containing {@code application}\u0027s details","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    public SearchApplicationPredicateBuilder(Application application) {","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"        titlePredicate \u003d Optional.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_TITLE, Optional.of(application.getJob().getTitle())));","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"        emailPredicate \u003d Optional.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_EMAIL, Optional.of(application.getPerson().getEmail())));","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"        statusPredicate \u003d Optional.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_STATUS, Optional.of(application.getStatus())));","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code titlePredicate} with the given String input for title such that","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"     * the ContainsKeywordsPredicate contains Optional of a job title.","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"    public SearchApplicationPredicateBuilder withJob(Job job) {","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"        titlePredicate \u003d titlePredicate.of(new ContainsKeywordsPredicate\u003c\u003e(PREFIX_TITLE, Optional.of(job.getTitle())));","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code emailPredicate} with the email of given person\u0027s input such that","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"     * the ContainsKeywordsPredicate contains Optional of an email.","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"    public SearchApplicationPredicateBuilder withPerson(Person person) {","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"        emailPredicate \u003d emailPredicate.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_EMAIL, Optional.of(person.getEmail())));","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code statusPredicate} with the given Status input such that","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"     * the ContainsKeywordsPredicate contains Optional of a status.","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"    public SearchApplicationPredicateBuilder withStatus(Status status) {","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"        statusPredicate \u003d statusPredicate.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_STATUS, Optional.of(status)));","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"     * Convert Optional of predicates of title, email and status into SearchPredicate object containing","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"     * those predicates","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"    public SearchPredicate\u003cApplication\u003e build() {","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"        ArrayList\u003cContainsKeywordsPredicate\u003cApplication, ?\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"        if (!titlePredicate.isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"            predicateList.add(titlePredicate.get());","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"        if (!emailPredicate.isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"            predicateList.add(emailPredicate.get());","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"        if (!statusPredicate.isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"            predicateList.add(statusPredicate.get());","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"        return new SearchPredicate\u003cApplication\u003e(predicateList);","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"acekhoon":94}},{"path":"src/test/java/seedu/hirehub/testutil/SearchJobPredicateBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.logic.parser.CliSyntax.PREFIX_VACANCY;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.person.SearchPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":" * A utility class to help with building SearchJobPredicate objects.","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"public class SearchJobPredicateBuilder {","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    private Optional\u003cContainsKeywordsPredicate\u003cJob, String\u003e\u003e titlePredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    private Optional\u003cContainsKeywordsPredicate\u003cJob, String\u003e\u003e descriptionPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    private Optional\u003cContainsKeywordsPredicate\u003cJob, Integer\u003e\u003e vacancyPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"     * Instantiates SearchJobPredicateBuilder instance","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    public SearchJobPredicateBuilder() {","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        titlePredicate \u003d Optional.empty();","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"        descriptionPredicate \u003d Optional.empty();","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        vacancyPredicate \u003d Optional.empty();","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"     * Returns an arraylist of job predicates with fields containing {@code job}\u0027s details","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    public SearchJobPredicateBuilder(Job job) {","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"        titlePredicate \u003d Optional.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_TITLE, Optional.of(job.getTitle())));","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"        descriptionPredicate \u003d Optional.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_DESCRIPTION, Optional.of(job.getDescription())));","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"        vacancyPredicate \u003d Optional.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_VACANCY, Optional.of(job.getVacancy())));","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code titlePredicate} with the given String input for title such that","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"     * the ContainsKeywordsPredicate contains Optional of a job title.","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"    public SearchJobPredicateBuilder withTitle(String title) {","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"        titlePredicate \u003d titlePredicate.of(new ContainsKeywordsPredicate\u003c\u003e(PREFIX_TITLE, Optional.of(title)));","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code descriptionPredicate} with the given String input for description such that","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"     * the ContainsKeywordsPredicate contains Optional of a job description.","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"    public SearchJobPredicateBuilder withDescription(String description) {","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"        descriptionPredicate \u003d descriptionPredicate.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_DESCRIPTION, Optional.of(description)));","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"     * Sets the {@code vacancyPredicate} with the given Integer input for vacancy such that","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"     * the ContainsKeywordsPredicate contains Optional of a job vacancy.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"    public SearchJobPredicateBuilder withVacancy(int vacancy) {","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"        vacancyPredicate \u003d vacancyPredicate.of(","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"                new ContainsKeywordsPredicate\u003c\u003e(PREFIX_VACANCY, Optional.of(vacancy)));","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"        return this;","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"     * Convert Optional of predicates of title, description and vacancy into SearchPredicate object containing","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"     * those predicates","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"    public SearchPredicate\u003cJob\u003e build() {","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"        ArrayList\u003cContainsKeywordsPredicate\u003cJob, ?\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"        if (!titlePredicate.isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"            predicateList.add(titlePredicate.get());","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"        if (!descriptionPredicate.isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"            predicateList.add(descriptionPredicate.get());","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"        if (!vacancyPredicate.isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"            predicateList.add(vacancyPredicate.get());","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"        return new SearchPredicate\u003cJob\u003e(predicateList);","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"acekhoon":90}},{"path":"src/test/java/seedu/hirehub/testutil/SearchPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.logic.commands.SearchCommand.SearchPersonDescriptor;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Comment;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Country;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":" * A utility class to help with building SearchPersonDescriptor objects.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"public class SearchPersonDescriptorBuilder {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    private SearchPersonDescriptor descriptor;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptorBuilder() {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptor();","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptorBuilder(SearchPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        this.descriptor \u003d new SearchPersonDescriptor();","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"     * Returns an {@code SearchPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"        descriptor \u003d new SearchPersonDescriptor();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setCountry(person.getCountry());","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setComment(person.getComment());","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"     * Sets the {@code Name} of the {@code SearchPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"     * Sets the {@code Phone} of the {@code SearchPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"     * Sets the {@code Email} of the {@code SearchPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"     * Sets the {@code Country} of the {@code SearchPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptorBuilder withCountry(String country) {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setCountry(new Country(country));","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"     * Sets the {@code Address} of the {@code SearchPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptorBuilder withComment(String comment) {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setComment(new Comment(comment));","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code SearchPersonDescriptor}","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"     * that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"    public SearchPersonDescriptor build() {","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"        return descriptor;","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"logical-1985516":88,"chiralcentre":9}},{"path":"src/test/java/seedu/hirehub/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"chiralcentre":1}},{"path":"src/test/java/seedu/hirehub/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":51,"chiralcentre":4}},{"path":"src/test/java/seedu/hirehub/testutil/TypicalApplications.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.BACK_END;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.FRONT_END;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.QUANTITATIVE_RESEARCHER;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalJobs.QUANTITATIVE_TRADER;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import static seedu.hirehub.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"import java.util.List;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.Application;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.application.UniqueApplicationList;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.status.Status;","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"public class TypicalApplications {","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    public static final Application ALICE_BACK_END \u003d new ApplicationBuilder().withPerson(ALICE)","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"            .withJob(BACK_END).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    public static final Application BENSON_BACK_END \u003d new ApplicationBuilder().withPerson(BENSON)","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"            .withJob(BACK_END).withStatus(new Status(\"OFFERED\")).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    public static final Application CARL_FRONT_END \u003d new ApplicationBuilder().withPerson(CARL)","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"            .withJob(FRONT_END).withStatus(new Status(\"WAITLIST\")).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    public static final Application DANIEL_QUANTITATIVE_TRADER \u003d new ApplicationBuilder().withPerson(DANIEL)","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"            .withJob(QUANTITATIVE_TRADER).withStatus(new Status(\"IN_PROGRESS\")).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    public static final Application DANIEL_QUANTITATIVE_RESEARCHER \u003d new ApplicationBuilder().withPerson(DANIEL)","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"            .withJob(QUANTITATIVE_RESEARCHER).withStatus(new Status(\"OFFERED\")).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    private TypicalApplications() {} // prevents instantiation","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"     * Returns an {@code UniqueApplicationList} with all the typical applications.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"    public static UniqueApplicationList getTypicalApplicationList() {","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"        UniqueApplicationList applicationList \u003d new UniqueApplicationList();","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"        for (Application application : getTypicalApplications()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"            applicationList.addApplication(application);","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"        return applicationList;","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"    public static List\u003cApplication\u003e getTypicalApplications() {","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_BACK_END, BENSON_BACK_END, CARL_FRONT_END,","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"                DANIEL_QUANTITATIVE_TRADER, DANIEL_QUANTITATIVE_RESEARCHER));","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"acekhoon":53}},{"path":"src/test/java/seedu/hirehub/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":10,"chiralcentre":2}},{"path":"src/test/java/seedu/hirehub/testutil/TypicalJobs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.util.List;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.Job;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import seedu.hirehub.model.job.UniqueJobList;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":" * A utility class containing a list of {@code Job} objects to be used in tests.","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"public class TypicalJobs {","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    public static final Job QUANTITATIVE_RESEARCHER \u003d new JobBuilder().withTitle(\"Quantitative Researcher\")","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"            .withDescription(\"Seeking for candidates strong in mathematics and statistics.\").withVacancy(5).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    public static final Job OFF_CYCLE \u003d new JobBuilder().withTitle(\"Software Engineer (Off-Cycle)\")","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"            .withDescription(\"Off-cycle full stack engineer.\").withVacancy(5).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    public static final Job BACK_END \u003d new JobBuilder().withTitle(\"Software Engineer (Back-end)\")","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"            .withDescription(\"Looking for backend developer. Need to be familiar with computer networks specifically.\")","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"            .withVacancy(1).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"    public static final Job FRONT_END \u003d new JobBuilder().withTitle(\"Software Engineer (Front-End)\")","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"            .withDescription(\"Looking for frontend developer who can deal with the Ui of the app.\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    public static final Job QUANTITATIVE_TRADER \u003d new JobBuilder().withTitle(\"Quantitative Trader\")","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            .withDescription(\"There are 5 rounds in total and the final round will be in-person on Hong Kong\")","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"            .withVacancy(10).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    private TypicalJobs() {} // prevents instantiation","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"     * Returns an {@code UniqueJobList} with all the typical jobs.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    public static UniqueJobList getTypicalJobList() {","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"        UniqueJobList jobList \u003d new UniqueJobList();","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"        for (Job job : getTypicalJobs()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"            jobList.addJob(job);","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"        return jobList;","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"    public static List\u003cJob\u003e getTypicalJobs() {","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BACK_END, FRONT_END, OFF_CYCLE, QUANTITATIVE_RESEARCHER,","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"                QUANTITATIVE_TRADER));","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"acekhoon":46}},{"path":"src/test/java/seedu/hirehub/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.testutil;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COUNTRY_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_COUNTRY_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"chiralcentre"},"content":"            .withCountry(\"SG\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"chiralcentre"},"content":"            .withCountry(\"GB\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"leeweiming3"},"content":"            .withPhone(\"98765432\").withComment(\"\").withTags(\"owesMoney\", \"friends\", \"enthusiastic\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"chiralcentre"},"content":"            .withEmail(\"heinz@example.com\").withCountry(\"DE\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"            .withEmail(\"cornelia@example.com\").withCountry(\"SG\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822245\")","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"            .withEmail(\"werner@example.com\").withCountry(\"US\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94824275\")","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"            .withEmail(\"lydia@example.com\").withCountry(\"JP\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824425\")","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"            .withEmail(\"anna@example.com\").withCountry(\"US\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824242\")","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"chiralcentre"},"content":"            .withEmail(\"stefan@example.com\").withCountry(\"IN\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821311\")","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"chiralcentre"},"content":"            .withEmail(\"hans@example.com\").withCountry(\"US\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"            .withEmail(VALID_EMAIL_AMY).withCountry(VALID_COUNTRY_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"chiralcentre"},"content":"            .withEmail(VALID_EMAIL_BOB).withCountry(VALID_COUNTRY_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"chiralcentre"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"leeweiming3"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"acekhoon":6,"leeweiming3":2,"-":41,"logical-1985516":5,"chiralcentre":20}},{"path":"src/test/java/seedu/hirehub/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":44,"chiralcentre":1}},{"path":"src/test/java/seedu/hirehub/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiralcentre"},"content":"package seedu.hirehub.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chiralcentre"},"content":"import static seedu.hirehub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"chiralcentre"},"content":"import seedu.hirehub.MainApp;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":111,"chiralcentre":3}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"\u003c?import seedu.hirehub.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"chiralcentre":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"chiralcentre"},"content":"\u003cfx:root type\u003d\"seedu.hirehub.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"chiralcentre":1}}]
